//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MDM.Services.LegacyDataAccessServiceClient {

#pragma warning disable 1591, 618
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://wcfservices.riversand.com", ConfigurationName="LegacyDataAccessServiceClient.ILegacyDataAccessService")]
    public interface ILegacyDataAccessService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetFile", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetFileMDMExceptionDeta" +
            "ilsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetFile(int fileId, string chrDetailsOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetFile", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetFileResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetFileAsync(int fileId, string chrDetailsOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetImportPermission", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetImportPermissionResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetImportPermissionMDME" +
            "xceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Collections.ObjectModel.Collection<MDM.Core.UserAction> GetImportPermission();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetImportPermission", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetImportPermissionResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.Core.UserAction>> GetImportPermissionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/SaveProfile", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/SaveProfileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/SaveProfileMDMException" +
            "DetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        int SaveProfile(string name, string domain, string textProfile, string fileType, int profileId, int orgId, int catalogId, string userId, string programName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/SaveProfile", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/SaveProfileResponse")]
        System.Threading.Tasks.Task<int> SaveProfileAsync(string name, string domain, string textProfile, string fileType, int profileId, int orgId, int catalogId, string userId, string programName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/DeleteProfile", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/DeleteProfileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/DeleteProfileMDMExcepti" +
            "onDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        int DeleteProfile(string profileId, string domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/DeleteProfile", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/DeleteProfileResponse")]
        System.Threading.Tasks.Task<int> DeleteProfileAsync(string profileId, string domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSubscribers", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSubscribersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSubscribersMDMExcept" +
            "ionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetSubscribers(int subscriberId, string subscriberName, string searchStr, bool inBound, bool outBound);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSubscribers", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSubscribersResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetSubscribersAsync(int subscriberId, string subscriberName, string searchStr, bool inBound, bool outBound);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetProfiles", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetProfilesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetProfilesMDMException" +
            "DetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetProfiles(string user, int profilesId, string profileName, int profileTypeId, string typeShortName, string searchStr, bool bitIncludeData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetProfiles", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetProfilesResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetProfilesAsync(string user, int profilesId, string profileName, int profileTypeId, string typeShortName, string searchStr, bool bitIncludeData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetChannels", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetChannelsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetChannelsMDMException" +
            "DetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetChannels();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetChannels", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetChannelsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetChannelsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogCharacteristi" +
            "cTemplate", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogCharacteristi" +
            "cTemplateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogCharacteristi" +
            "cTemplateMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetCatalogCharacteristicTemplate(int catalogId, int cNodeId, int localeId, bool includeComplexAttrChildren);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogCharacteristi" +
            "cTemplate", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogCharacteristi" +
            "cTemplateResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetCatalogCharacteristicTemplateAsync(int catalogId, int cNodeId, int localeId, bool includeComplexAttrChildren);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRelTypesXML", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRelTypesXMLResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRelTypesXMLMDMExcept" +
            "ionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetRelTypesXML();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRelTypesXML", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRelTypesXMLResponse")]
        System.Threading.Tasks.Task<string> GetRelTypesXMLAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogNodeTypeAttr", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogNodeTypeAttrR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogNodeTypeAttrM" +
            "DMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataSet GetCatalogNodeTypeAttr(int catalogId, int nodeTypeId, int localeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogNodeTypeAttr", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogNodeTypeAttrR" +
            "esponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCatalogNodeTypeAttrAsync(int catalogId, int nodeTypeId, int localeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeRegEx", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeRegExRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeRegExMDMExc" +
            "eptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetAttributeRegEx(int attribute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeRegEx", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeRegExRespon" +
            "se")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAttributeRegExAsync(int attribute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechSpecsMap", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechSpecsMapResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechSpecsMapMDMExcep" +
            "tionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetTechSpecsMap(int intCategoryId, int intLocaleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechSpecsMap", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechSpecsMapResponse" +
            "")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetTechSpecsMapAsync(int intCategoryId, int intLocaleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTaxonomyByCatalog", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTaxonomyByCatalogRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTaxonomyByCatalogMDM" +
            "ExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetTaxonomyByCatalog(int catalogId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTaxonomyByCatalog", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTaxonomyByCatalogRes" +
            "ponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetTaxonomyByCatalogAsync(int catalogId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/EstimateChanges", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/EstimateChangesResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/EstimateChangesMDMExcep" +
            "tionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable EstimateChanges(string changeProgram, string cNodeList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/EstimateChanges", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/EstimateChangesResponse" +
            "")]
        System.Threading.Tasks.Task<System.Data.DataTable> EstimateChangesAsync(string changeProgram, string cNodeList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogNodeTypeAttrb" +
            "iuteAsXml", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogNodeTypeAttrb" +
            "iuteAsXmlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogNodeTypeAttrb" +
            "iuteAsXmlMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetCatalogNodeTypeAttrbiuteAsXml(int organizationId, int catalogId, string nodeType, int branchLevel, bool includeComplexAttrChildren, bool excludeableSearchable, System.Collections.ObjectModel.Collection<MDM.Core.LocaleEnum> locales, MDM.Core.LocaleEnum systemDataLocale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogNodeTypeAttrb" +
            "iuteAsXml", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogNodeTypeAttrb" +
            "iuteAsXmlResponse")]
        System.Threading.Tasks.Task<string> GetCatalogNodeTypeAttrbiuteAsXmlAsync(int organizationId, int catalogId, string nodeType, int branchLevel, bool includeComplexAttrChildren, bool excludeableSearchable, System.Collections.ObjectModel.Collection<MDM.Core.LocaleEnum> locales, MDM.Core.LocaleEnum systemDataLocale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllCommonAttributes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllCommonAttributesR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllCommonAttributesM" +
            "DMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel> GetAllCommonAttributes(int localeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllCommonAttributes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllCommonAttributesR" +
            "esponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel>> GetAllCommonAttributesAsync(int localeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllTechnicalAttribut" +
            "es", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllTechnicalAttribut" +
            "esResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllTechnicalAttribut" +
            "esMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel> GetAllTechnicalAttributes(int localeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllTechnicalAttribut" +
            "es", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllTechnicalAttribut" +
            "esResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel>> GetAllTechnicalAttributesAsync(int localeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCommonAttributesByCo" +
            "ntainerAndEntityType", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCommonAttributesByCo" +
            "ntainerAndEntityTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCommonAttributesByCo" +
            "ntainerAndEntityTypeMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel> GetCommonAttributesByContainerAndEntityType(int catalogId, int entityTypeId, int localeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCommonAttributesByCo" +
            "ntainerAndEntityType", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCommonAttributesByCo" +
            "ntainerAndEntityTypeResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel>> GetCommonAttributesByContainerAndEntityTypeAsync(int catalogId, int entityTypeId, int localeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechAttributesByTaxo" +
            "nomyAndCategory", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechAttributesByTaxo" +
            "nomyAndCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechAttributesByTaxo" +
            "nomyAndCategoryMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel> GetTechAttributesByTaxonomyAndCategory(int categoryId, int taxonomyId, int localeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechAttributesByTaxo" +
            "nomyAndCategory", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechAttributesByTaxo" +
            "nomyAndCategoryResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel>> GetTechAttributesByTaxonomyAndCategoryAsync(int categoryId, int taxonomyId, int localeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetByAttributeType", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetByAttributeTypeRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetByAttributeTypeMDMEx" +
            "ceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeGroup> GetByAttributeType(int common, int technical, int relationship, System.Collections.ObjectModel.Collection<MDM.Core.LocaleEnum> locales, MDM.Core.LocaleEnum systemLocale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetByAttributeType", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetByAttributeTypeRespo" +
            "nse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeGroup>> GetByAttributeTypeAsync(int common, int technical, int relationship, System.Collections.ObjectModel.Collection<MDM.Core.LocaleEnum> locales, MDM.Core.LocaleEnum systemLocale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetByAttributeGroup", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetByAttributeGroupResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetByAttributeGroupMDME" +
            "xceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel> GetByAttributeGroup(int attributeGroupId, System.Collections.ObjectModel.Collection<MDM.Core.LocaleEnum> locales);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetByAttributeGroup", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetByAttributeGroupResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel>> GetByAttributeGroupAsync(int attributeGroupId, System.Collections.ObjectModel.Collection<MDM.Core.LocaleEnum> locales);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/SearchEntities", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/SearchEntitiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/SearchEntitiesMDMExcept" +
            "ionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DataModel.DataModelOperationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityOperationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeOperationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipOperationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessRuleOperationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExportProfile>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExportProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EntityExportProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EntityExportProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EntityExportSyndicationProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExecutionSpecification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExecutionSettingCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExecutionSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExecutionSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.TriggeringDataSpecification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.MDMObjectGroupCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.MDMObjectGroup>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.MDMObjectGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.MDMObjectCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.Notification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EmailNotificationCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.EmailNotification>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EmailNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.NotificationSettingCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.NotificationSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.NotificationSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.OutputSpecification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.DataFormatter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.DataFormatterSettingCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.DataFormatterSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.DataFormatterSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.DataSubscriberCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.DataSubscriber>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.DataSubscriber))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.LookupExportScopeCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.LookupExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.LookupExportScope))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.OutputDataSpecification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ProfileSettingCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ProfileSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ProfileSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ScopeSpecification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExportSettingCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExportSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExportSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExportScopeCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExportScope))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.CategoryGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EntityExportUIProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.LookupExportProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.LookupExportProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.LookupExportSyndicationProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.TranslationExportProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.TranslationExportProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQMNormalization.NormalizationProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQMNormalization.NormalizationRulesetsCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQMNormalization.NormalizationRuleset>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQMNormalization.NormalizationRuleset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<long>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<int>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<object, object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.Collection<long>>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.Collection<long>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, MDM.BusinessObjects.Row>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, long>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, long>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<string, string>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, MDM.BusinessObjects.AttributeModelCollection>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<short>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQM.NamedDataQualityIndicatorValue>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.NamedDataQualityIndicatorValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.DataQualityIndicatorValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.DataQualityIndicatorFailureInfoCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQM.DataQualityIndicatorFailureInfo>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.DataQualityIndicatorFailureInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.NormalizationResultsCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQM.NormalizationResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.NormalizationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.ValidationProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.DQMJobProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.JobSourceScopeFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.JobScopeFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.MatchingProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.MatchResultSet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQM.MatchResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.MatchResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQM.MatchSourceAttribute>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.MatchSourceAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.Core.UserAction>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.UserAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.Core.LocaleEnum>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.LocaleEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MDMObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ObjectBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ObjectAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DependentAttributeCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DependentAttribute>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DependentAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ApplicationContextCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.ApplicationContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.ApplicationContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.ApplicationContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ApplicationContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ApplicationContextType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.DependencyType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelBaseProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AttributeModelType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AttributeTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelBasePropertiesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModelBaseProperties>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelMappingProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelLocaleProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelLocalePropertiesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModelLocaleProperties>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelMappingPropertiesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModelMappingProperties>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeGroup>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchCriteria))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessConditionStatusCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.BusinessConditionStatus>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.BusinessConditionStatus>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessConditionStatus>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessConditionStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ValidityStateValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SearchAttributeRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchAttributeRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Attribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AttributeDataType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Attribute>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AttributeValueSource))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ValueCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Value>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Value))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SourceInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.SearchOperator))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SearchWeightageAttribute>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchWeightageAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ErrorCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Error>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Error))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ReasonType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InformationCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Information>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Information))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.OperationResultStatusEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.WarningCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Warning>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Warning))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Table))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ColumnCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Column>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Column))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.SortOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RowCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Row))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CellCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Cell>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Cell))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeOperationResultCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeOperationResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipOperationResultCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.RelationshipOperationResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ObjectType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SecurityUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AuthenticationType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SecurityRoleCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SecurityRole>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SecurityRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.SecurityUserType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SecurityUserCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SecurityUser>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.UserPreferences))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.UserPreferencesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.UserPreferences>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MDMRuleType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.DQM.DataQualityIndicatorFailureInfo>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.DQM.DataQualityIndicatorFailureInfo>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MDMCenterApplication))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MDMPublisher))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.EventSource))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.EventSubscriber))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MDMCenterModules))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Entity))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ContainerBranchLevel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ValidationStates))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeUniqueIdentifier))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeUniqueIdentifierCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeUniqueIdentifier>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityExtensionContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityContextCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.EntityContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityModelContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityHierarchyContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityMoveContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ReParentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ExtensionRelationshipCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityChangeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.LocaleChangeContextCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.LocaleChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.LocaleChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.LocaleChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.LocaleChangeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeChangeContextCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.AttributeChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.AttributeChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeChangeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipChangeContextCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.RelationshipChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.RelationshipChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.RelationshipChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipChangeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.ExtensionRelationship>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ExtensionRelationship))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.RelationshipDirection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipBaseCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.RelationshipBase>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ContainerType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.HierarchyRelationshipCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.HierarchyRelationship>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.HierarchyRelationship))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Relationship>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Relationship))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InheritanceMode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.RelationshipStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.CommentsRequired))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AssignmentType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.JobAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.JobStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.JobSubType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.JobType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BaseProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ProfileType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.Core.MDMObject>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ExportJobStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.LookupExportFileFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.LookupExportGroupOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.LocaleCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Locale>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Locale))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.EntityTypeMode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CategoryCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.Category>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.Category>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Category>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Category))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CategoryBaseProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CategoryLocaleProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CategoryBasePropertiesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.CategoryBaseProperties>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CategoryLocalePropertiesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.CategoryLocaleProperties>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchMDMRuleRuleGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ConditionalOperator))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SearchMDMRuleRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchMDMRuleRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AuditInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.MDMRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRuleDisplayList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.DisplayType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipTypeCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.RelationshipType>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.RelationshipType>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.RelationshipType>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRuleContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.MDMRuleAttributeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRuleAttributeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.MDMRuleEntityExtensionContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRuleEntityExtensionContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.MDMRuleRelationshipContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRuleRelationshipContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.RuleStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchAttributeRuleGroupCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SearchAttributeRuleGroup>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchAttributeRuleGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchValidationStatesRuleGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SearchValidationStatesRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchValidationStatesRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.SystemAttributes))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.DQMJobType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MergingProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MergeMode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.Core.ExposableMergeContextFlag>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ExposableMergeContextFlag))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MatchingEngineType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.SaveAttributeValuesType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ExportProfileType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRuleAttributeMapping>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessRuleAttributeMapping))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRuleSetRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessRuleSetRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.ContainerRelationshipTypeEntityTypeMapping>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ContainerRelationshipTypeEntityTypeMapping))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipTypeEntityTypeMapping))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ConstraintType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.DynamicTableType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeVersionCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeVersion>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeVersion))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.TimeZone>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.TimeZone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBColumnCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DynamicTableSchema.DBColumn>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBColumn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBConstraintCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DynamicTableSchema.DBConstraint>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBConstraint))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBRelationshipCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DynamicTableSchema.DBRelationship>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBRelationship))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBTableCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DynamicTableSchema.DBTable>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Tuple<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Jobs.Job>, System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExportProfile>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.DQM.NormalizationResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.DQM.NormalizationResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.TraceSettings))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.TracingLevel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.TracingMode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.ExecutionSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.ExecutionSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.MDMObjectGroup>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.MDMObjectGroup>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.Core.MDMObject>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.Core.MDMObject>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.EmailNotification>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.EmailNotification>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.NotificationSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.NotificationSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.DataFormatterSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.DataFormatterSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.DataSubscriber>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.DataSubscriber>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.LookupExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.LookupExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.ProfileSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.ProfileSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.ExportSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.ExportSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.ExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.ExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CallerContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Workflow.WorkflowActionContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Workflow.WorkflowStateCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Workflow.WorkflowState>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Workflow.WorkflowState))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Workflow.WorkflowActivity>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Workflow.WorkflowActivity))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Workflow.ActivityAction>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Workflow.ActivityAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Jobs.Job>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.Job))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.JobData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.ExecutionStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.JobExecutionStepCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Jobs.JobExecutionStep>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.JobExecutionStep))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.JobParameterCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Jobs.JobParameter>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.JobParameter))]
        System.Data.DataSet SearchEntities(MDM.BusinessObjects.SearchCriteria searchCriteria, MDM.BusinessObjects.SearchContext searchContext, string totalCount, MDM.BusinessObjects.OperationResult searchOperationResult, MDM.BusinessObjects.CallerContext callerContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/SearchEntities", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/SearchEntitiesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchEntitiesAsync(MDM.BusinessObjects.SearchCriteria searchCriteria, MDM.BusinessObjects.SearchContext searchContext, string totalCount, MDM.BusinessObjects.OperationResult searchOperationResult, MDM.BusinessObjects.CallerContext callerContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ExportSubscriberExists", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ExportSubscriberExistsR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ExportSubscriberExistsM" +
            "DMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Collections.Generic.Dictionary<string, object> ExportSubscriberExists(string objectName, string objectType, int objectId, string objectParentName, int objectParentId, bool raiseError, string errorMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ExportSubscriberExists", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ExportSubscriberExistsR" +
            "esponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, object>> ExportSubscriberExistsAsync(string objectName, string objectType, int objectId, string objectParentName, int objectParentId, bool raiseError, string errorMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAffectedInfo", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAffectedInfoResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAffectedInfoMDMExcep" +
            "tionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetAffectedInfo(System.Collections.ObjectModel.Collection<long> entityIds, string attributeIdList, int containerId, int currentDataLocaleId, int systemDataLocaleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAffectedInfo", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAffectedInfoResponse" +
            "")]
        System.Threading.Tasks.Task<string> GetAffectedInfoAsync(System.Collections.ObjectModel.Collection<long> entityIds, string attributeIdList, int containerId, int currentDataLocaleId, int systemDataLocaleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetWorkflowStatusXml", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetWorkflowStatusXmlRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetWorkflowStatusXmlMDM" +
            "ExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetWorkflowStatusXml(string entityIdList, int activityId, string workflowType, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetWorkflowStatusXml", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetWorkflowStatusXmlRes" +
            "ponse")]
        System.Threading.Tasks.Task<string> GetWorkflowStatusXmlAsync(string entityIdList, int activityId, string workflowType, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMDLsByIdList", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMDLsByIdListResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMDLsByIdListMDMExcep" +
            "tionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity> GetMDLsByIdList(string entityIdList, long categoryId, int containerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMDLsByIdList", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMDLsByIdListResponse" +
            "")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity>> GetMDLsByIdListAsync(string entityIdList, long categoryId, int containerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetImpactedEntities", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetImpactedEntitiesResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetImpactedEntitiesMDME" +
            "xceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Collections.Generic.Dictionary<string, object> GetImpactedEntities(int localeId, long cnodeId, int catalogId, int attributeId, int toTotalImpacted, int totalAffected, int maxReturnCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetImpactedEntities", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetImpactedEntitiesResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, object>> GetImpactedEntitiesAsync(int localeId, long cnodeId, int catalogId, int attributeId, int toTotalImpacted, int totalAffected, int maxReturnCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetParent", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetParentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetParentMDMExceptionDe" +
            "tailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetParent(long cnodeId, long cnodeParentId, int containerId, bool bitUseDraftTax, int dataLocale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetParent", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetParentResponse")]
        System.Threading.Tasks.Task<string> GetParentAsync(long cnodeId, long cnodeParentId, int containerId, bool bitUseDraftTax, int dataLocale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeValuesForMD" +
            "Ls", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeValuesForMD" +
            "LsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeValuesForMD" +
            "LsMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetAttributeValuesForMDLs(int extSystemId, string inputXML, string coreAttrList, string techAttrList, int localeId, string programName, bool includeInheritedValue, bool computeInheritedValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeValuesForMD" +
            "Ls", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeValuesForMD" +
            "LsResponse")]
        System.Threading.Tasks.Task<string> GetAttributeValuesForMDLsAsync(int extSystemId, string inputXML, string coreAttrList, string techAttrList, int localeId, string programName, bool includeInheritedValue, bool computeInheritedValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMDL", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMDLResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMDLMDMExceptionDetai" +
            "lsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity> GetMDL(long cnodeId, string catalogIdList, string delimiter, bool returnSelf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMDL", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMDLResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity>> GetMDLAsync(long cnodeId, string catalogIdList, string delimiter, bool returnSelf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetParentOPBL", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetParentOPBLResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetParentOPBLMDMExcepti" +
            "onDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity> GetParentOPBL(long cnodeId, long cnodeParentId, int containerId, int dataLocale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetParentOPBL", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetParentOPBLResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity>> GetParentOPBLAsync(long cnodeId, long cnodeParentId, int containerId, int dataLocale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMDLBasedOnConfig", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMDLBasedOnConfigResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMDLBasedOnConfigMDME" +
            "xceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity> GetMDLBasedOnConfig(long cnodeId, string dataConfigXML, string catalogIdList, string delimiter, bool returnSelf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMDLBasedOnConfig", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMDLBasedOnConfigResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity>> GetMDLBasedOnConfigAsync(long cnodeId, string dataConfigXML, string catalogIdList, string delimiter, bool returnSelf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetWorkflowTasks", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetWorkflowTasksRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetWorkflowTasksMDMExce" +
            "ptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Workflow.WorkflowActivity> GetWorkflowTasks(long cNodeId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetWorkflowTasks", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetWorkflowTasksRespons" +
            "e")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Workflow.WorkflowActivity>> GetWorkflowTasksAsync(long cNodeId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/Reclassify", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ReclassifyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ReclassifyMDMExceptionD" +
            "etailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        bool Reclassify(string dataXml, string userName, bool isCategoryReclassify);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/Reclassify", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ReclassifyResponse")]
        System.Threading.Tasks.Task<bool> ReclassifyAsync(string dataXml, string userName, bool isCategoryReclassify);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/UpdateUserAction", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/UpdateUserActionRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/UpdateUserActionMDMExce" +
            "ptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        bool UpdateUserAction(int jobId, MDM.Core.JobAction jobAction, string jobType, MDM.Core.MDMCenterApplication application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/UpdateUserAction", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/UpdateUserActionRespons" +
            "e")]
        System.Threading.Tasks.Task<bool> UpdateUserActionAsync(int jobId, MDM.Core.JobAction jobAction, string jobType, MDM.Core.MDMCenterApplication application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetChildJobsInXml", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetChildJobsInXmlRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetChildJobsInXmlMDMExc" +
            "eptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetChildJobsInXml(int parentJobId, MDM.Core.MDMCenterApplication application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetChildJobsInXml", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetChildJobsInXmlRespon" +
            "se")]
        System.Threading.Tasks.Task<string> GetChildJobsInXmlAsync(int parentJobId, MDM.Core.MDMCenterApplication application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSchedule", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetScheduleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetScheduleMDMException" +
            "DetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Tuple<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Jobs.Job>, System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExportProfile>> GetSchedule(int scheduleId, string jobType, MDM.Core.MDMCenterApplication application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSchedule", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetScheduleResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Jobs.Job>, System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExportProfile>>> GetScheduleAsync(int scheduleId, string jobType, MDM.Core.MDMCenterApplication application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/AddSchedule", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/AddScheduleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/AddScheduleMDMException" +
            "DetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        bool AddSchedule(string scheduleName, string scheduleLongName, string content, bool isEnable, string profiles, string programName, string jobType, MDM.Core.MDMCenterApplication application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/AddSchedule", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/AddScheduleResponse")]
        System.Threading.Tasks.Task<bool> AddScheduleAsync(string scheduleName, string scheduleLongName, string content, bool isEnable, string profiles, string programName, string jobType, MDM.Core.MDMCenterApplication application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/UpdateSchedule", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/UpdateScheduleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/UpdateScheduleMDMExcept" +
            "ionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        bool UpdateSchedule(int scheduleId, string scheduleName, string scheduleLongName, string content, bool isEnable, string profiles, string programName, string jobType, MDM.Core.MDMCenterApplication application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/UpdateSchedule", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/UpdateScheduleResponse")]
        System.Threading.Tasks.Task<bool> UpdateScheduleAsync(int scheduleId, string scheduleName, string scheduleLongName, string content, bool isEnable, string profiles, string programName, string jobType, MDM.Core.MDMCenterApplication application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRulesById", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRulesByIdRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRulesByIdMDM" +
            "ExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRule> GetBusinessRulesById(System.Collections.ObjectModel.Collection<int> ruleIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRulesById", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRulesByIdRes" +
            "ponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRule>> GetBusinessRulesByIdAsync(System.Collections.ObjectModel.Collection<int> ruleIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRulesByUserI" +
            "d", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRulesByUserI" +
            "dResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRulesByUserI" +
            "dMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRule> GetBusinessRulesByUserId(string loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRulesByUserI" +
            "d", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRulesByUserI" +
            "dResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRule>> GetBusinessRulesByUserIdAsync(string loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessBusinessRules", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessBusinessRulesRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessBusinessRulesMDM" +
            "ExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        bool ProcessBusinessRules(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRule> businessRules, string loginUser, string programName, string action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessBusinessRules", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessBusinessRulesRes" +
            "ponse")]
        System.Threading.Tasks.Task<bool> ProcessBusinessRulesAsync(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRule> businessRules, string loginUser, string programName, string action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRulesByConte" +
            "xt", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRulesByConte" +
            "xtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRulesByConte" +
            "xtMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRule> GetBusinessRulesByContext(int eventSourceID, int eventSubscriberID, int loginUserID, int loginUserRole, int orgID, int containerID, int entityTypeID, string businessRuleTypeIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRulesByConte" +
            "xt", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRulesByConte" +
            "xtResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRule>> GetBusinessRulesByContextAsync(int eventSourceID, int eventSubscriberID, int loginUserID, int loginUserRole, int orgID, int containerID, int entityTypeID, string businessRuleTypeIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRuleAttribut" +
            "eMappingsByRuleId", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRuleAttribut" +
            "eMappingsByRuleIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRuleAttribut" +
            "eMappingsByRuleIdMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRuleAttributeMapping> GetBusinessRuleAttributeMappingsByRuleId(int businessRuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRuleAttribut" +
            "eMappingsByRuleId", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRuleAttribut" +
            "eMappingsByRuleIdResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRuleAttributeMapping>> GetBusinessRuleAttributeMappingsByRuleIdAsync(int businessRuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessBusinessRuleMapp" +
            "ings", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessBusinessRuleMapp" +
            "ingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessBusinessRuleMapp" +
            "ingsMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        bool ProcessBusinessRuleMappings(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRuleAttributeMapping> businessRuleAttributeMappings, string ViewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessBusinessRuleMapp" +
            "ings", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessBusinessRuleMapp" +
            "ingsResponse")]
        System.Threading.Tasks.Task<bool> ProcessBusinessRuleMappingsAsync(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRuleAttributeMapping> businessRuleAttributeMappings, string ViewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessBusinessRuleCont" +
            "ext", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessBusinessRuleCont" +
            "extResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessBusinessRuleCont" +
            "extMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        bool ProcessBusinessRuleContext(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRuleSetRule> businessRuleSetRules, string loginUser, string programName, string action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessBusinessRuleCont" +
            "ext", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessBusinessRuleCont" +
            "extResponse")]
        System.Threading.Tasks.Task<bool> ProcessBusinessRuleContextAsync(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRuleSetRule> businessRuleSetRules, string loginUser, string programName, string action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTableStructure", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTableStructureRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTableStructureMDMExc" +
            "eptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetTableStructure(string tableName, bool getFromSysObj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTableStructure", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTableStructureRespon" +
            "se")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetTableStructureAsync(string tableName, bool getFromSysObj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTableTypeTemplate", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTableTypeTemplateRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTableTypeTemplateMDM" +
            "ExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetTableTypeTemplate(int TableType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTableTypeTemplate", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTableTypeTemplateRes" +
            "ponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetTableTypeTemplateAsync(int TableType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTableTypes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTableTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTableTypesMDMExcepti" +
            "onDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetTableTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTableTypes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTableTypesResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetTableTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTableNames", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTableNamesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTableNamesMDMExcepti" +
            "onDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetTableNames(int objectType, string searchString, bool getFromSysObj, bool getAttrCountColumn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTableNames", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTableNamesResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetTableNamesAsync(int objectType, string searchString, bool getFromSysObj, bool getAttrCountColumn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRefTableData", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRefTableDataResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRefTableDataMDMExcep" +
            "tionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetRefTableData(string tableName, string refColumnName, string refMask, string displayColumns, string sortOrder, string searchColumns);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRefTableData", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRefTableDataResponse" +
            "")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetRefTableDataAsync(string tableName, string refColumnName, string refMask, string displayColumns, string sortOrder, string searchColumns);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNormalizationJobResu" +
            "lts", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNormalizationJobResu" +
            "ltsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNormalizationJobResu" +
            "ltsMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetNormalizationJobResults(int jobServiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNormalizationJobResu" +
            "lts", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNormalizationJobResu" +
            "ltsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetNormalizationJobResultsAsync(int jobServiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTranslationMemory", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTranslationMemoryRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTranslationMemoryMDM" +
            "ExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetTranslationMemory(string origLocale, string transLocale, string origText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTranslationMemory", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTranslationMemoryRes" +
            "ponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetTranslationMemoryAsync(string origLocale, string transLocale, string origText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCNode", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCNodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCNodeMDMExceptionDet" +
            "ailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetCNode(int catalogId, long cnodeId, string viewPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCNode", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCNodeResponse")]
        System.Threading.Tasks.Task<string> GetCNodeAsync(int catalogId, long cnodeId, string viewPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRelationshipCardinal" +
            "ity", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRelationshipCardinal" +
            "ityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRelationshipCardinal" +
            "ityMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetRelationshipCardinality(int catalogId, int nodeTypeFrom, int relationshipType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRelationshipCardinal" +
            "ity", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRelationshipCardinal" +
            "ityResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetRelationshipCardinalityAsync(int catalogId, int nodeTypeFrom, int relationshipType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRelationshipCard" +
            "inality", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRelationshipCard" +
            "inalityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRelationshipCard" +
            "inalityMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        int ProcessRelationshipCardinality(string txtXML, string userName, string programName, int returnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRelationshipCard" +
            "inality", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRelationshipCard" +
            "inalityResponse")]
        System.Threading.Tasks.Task<int> ProcessRelationshipCardinalityAsync(string txtXML, string userName, string programName, int returnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRelationshipType" +
            "EntityTypeCardinality", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRelationshipType" +
            "EntityTypeCardinalityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRelationshipType" +
            "EntityTypeCardinalityMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        int ProcessRelationshipTypeEntityTypeCardinality(string txtXML, string userName, string programName, int returnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRelationshipType" +
            "EntityTypeCardinality", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRelationshipType" +
            "EntityTypeCardinalityResponse")]
        System.Threading.Tasks.Task<int> ProcessRelationshipTypeEntityTypeCardinalityAsync(string txtXML, string userName, string programName, int returnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRelationshipTypeEnti" +
            "tyTypeCardinality", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRelationshipTypeEnti" +
            "tyTypeCardinalityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRelationshipTypeEnti" +
            "tyTypeCardinalityMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetRelationshipTypeEntityTypeCardinality(int nodeTypeFrom, int relationshipType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRelationshipTypeEnti" +
            "tyTypeCardinality", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRelationshipTypeEnti" +
            "tyTypeCardinalityResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetRelationshipTypeEntityTypeCardinalityAsync(int nodeTypeFrom, int relationshipType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessTranslationMemor" +
            "y", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessTranslationMemor" +
            "yResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessTranslationMemor" +
            "yMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        bool ProcessTranslationMemory(string origLocale, string transLocale, string OrigText, string transText, string moduser, int returnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessTranslationMemor" +
            "y", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessTranslationMemor" +
            "yResponse")]
        System.Threading.Tasks.Task<bool> ProcessTranslationMemoryAsync(string origLocale, string transLocale, string OrigText, string transText, string moduser, int returnValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetContainerRelationshi" +
            "pTypeEntityTypeMappingsByCnodes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetContainerRelationshi" +
            "pTypeEntityTypeMappingsByCnodesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetContainerRelationshi" +
            "pTypeEntityTypeMappingsByCnodesMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Collections.ObjectModel.Collection<MDM.BusinessObjects.ContainerRelationshipTypeEntityTypeMapping> GetContainerRelationshipTypeEntityTypeMappingsByCnodes(string user, string cnodeGroupIds, int catalogId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetContainerRelationshi" +
            "pTypeEntityTypeMappingsByCnodes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetContainerRelationshi" +
            "pTypeEntityTypeMappingsByCnodesResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.ContainerRelationshipTypeEntityTypeMapping>> GetContainerRelationshipTypeEntityTypeMappingsByCnodesAsync(string user, string cnodeGroupIds, int catalogId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessDynamicTableSche" +
            "ma", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessDynamicTableSche" +
            "maResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessDynamicTableSche" +
            "maMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DataModel.DataModelOperationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityOperationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeOperationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipOperationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessRuleOperationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExportProfile>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExportProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EntityExportProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EntityExportProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EntityExportSyndicationProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExecutionSpecification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExecutionSettingCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExecutionSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExecutionSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.TriggeringDataSpecification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.MDMObjectGroupCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.MDMObjectGroup>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.MDMObjectGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.MDMObjectCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.Notification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EmailNotificationCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.EmailNotification>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EmailNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.NotificationSettingCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.NotificationSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.NotificationSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.OutputSpecification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.DataFormatter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.DataFormatterSettingCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.DataFormatterSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.DataFormatterSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.DataSubscriberCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.DataSubscriber>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.DataSubscriber))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.LookupExportScopeCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.LookupExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.LookupExportScope))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.OutputDataSpecification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ProfileSettingCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ProfileSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ProfileSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ScopeSpecification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExportSettingCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExportSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExportSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExportScopeCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExportScope))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.CategoryGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EntityExportUIProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.LookupExportProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.LookupExportProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.LookupExportSyndicationProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.TranslationExportProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.TranslationExportProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQMNormalization.NormalizationProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQMNormalization.NormalizationRulesetsCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQMNormalization.NormalizationRuleset>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQMNormalization.NormalizationRuleset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<long>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<int>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<object, object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.Collection<long>>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.Collection<long>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, MDM.BusinessObjects.Row>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, long>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, long>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<string, string>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, MDM.BusinessObjects.AttributeModelCollection>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<short>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQM.NamedDataQualityIndicatorValue>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.NamedDataQualityIndicatorValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.DataQualityIndicatorValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.DataQualityIndicatorFailureInfoCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQM.DataQualityIndicatorFailureInfo>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.DataQualityIndicatorFailureInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.NormalizationResultsCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQM.NormalizationResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.NormalizationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.ValidationProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.DQMJobProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.JobSourceScopeFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.JobScopeFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.MatchingProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.MatchResultSet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQM.MatchResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.MatchResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQM.MatchSourceAttribute>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.MatchSourceAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.Core.UserAction>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.UserAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.Core.LocaleEnum>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.LocaleEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MDMObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ObjectBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ObjectAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DependentAttributeCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DependentAttribute>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DependentAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ApplicationContextCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.ApplicationContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.ApplicationContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.ApplicationContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ApplicationContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ApplicationContextType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.DependencyType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelBaseProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AttributeModelType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AttributeTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelBasePropertiesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModelBaseProperties>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelMappingProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelLocaleProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelLocalePropertiesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModelLocaleProperties>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelMappingPropertiesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModelMappingProperties>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeGroup>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchCriteria))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessConditionStatusCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.BusinessConditionStatus>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.BusinessConditionStatus>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessConditionStatus>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessConditionStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ValidityStateValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SearchAttributeRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchAttributeRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Attribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AttributeDataType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Attribute>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AttributeValueSource))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ValueCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Value>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Value))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SourceInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.SearchOperator))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SearchWeightageAttribute>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchWeightageAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ErrorCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Error>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Error))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ReasonType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InformationCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Information>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Information))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.OperationResultStatusEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.WarningCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Warning>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Warning))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Table))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ColumnCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Column>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Column))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.SortOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RowCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Row))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CellCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Cell>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Cell))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeOperationResultCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeOperationResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipOperationResultCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.RelationshipOperationResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ObjectType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SecurityUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AuthenticationType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SecurityRoleCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SecurityRole>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SecurityRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.SecurityUserType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SecurityUserCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SecurityUser>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.UserPreferences))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.UserPreferencesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.UserPreferences>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MDMRuleType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.DQM.DataQualityIndicatorFailureInfo>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.DQM.DataQualityIndicatorFailureInfo>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MDMCenterApplication))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MDMPublisher))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.EventSource))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.EventSubscriber))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MDMCenterModules))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Entity))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ContainerBranchLevel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ValidationStates))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeUniqueIdentifier))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeUniqueIdentifierCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeUniqueIdentifier>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityExtensionContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityContextCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.EntityContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityModelContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityHierarchyContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityMoveContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ReParentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ExtensionRelationshipCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityChangeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.LocaleChangeContextCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.LocaleChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.LocaleChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.LocaleChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.LocaleChangeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeChangeContextCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.AttributeChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.AttributeChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeChangeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipChangeContextCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.RelationshipChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.RelationshipChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.RelationshipChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipChangeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.ExtensionRelationship>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ExtensionRelationship))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.RelationshipDirection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipBaseCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.RelationshipBase>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ContainerType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.HierarchyRelationshipCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.HierarchyRelationship>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.HierarchyRelationship))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Relationship>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Relationship))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InheritanceMode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.RelationshipStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.CommentsRequired))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AssignmentType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.JobAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.JobStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.JobSubType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.JobType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BaseProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ProfileType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.Core.MDMObject>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ExportJobStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.LookupExportFileFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.LookupExportGroupOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.LocaleCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Locale>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Locale))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.EntityTypeMode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CategoryCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.Category>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.Category>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Category>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Category))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CategoryBaseProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CategoryLocaleProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CategoryBasePropertiesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.CategoryBaseProperties>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CategoryLocalePropertiesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.CategoryLocaleProperties>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchMDMRuleRuleGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ConditionalOperator))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SearchMDMRuleRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchMDMRuleRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AuditInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.MDMRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRuleDisplayList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.DisplayType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipTypeCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.RelationshipType>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.RelationshipType>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.RelationshipType>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRuleContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.MDMRuleAttributeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRuleAttributeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.MDMRuleEntityExtensionContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRuleEntityExtensionContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.MDMRuleRelationshipContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRuleRelationshipContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.RuleStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchAttributeRuleGroupCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SearchAttributeRuleGroup>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchAttributeRuleGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchValidationStatesRuleGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SearchValidationStatesRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchValidationStatesRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.SystemAttributes))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.DQMJobType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MergingProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MergeMode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.Core.ExposableMergeContextFlag>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ExposableMergeContextFlag))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MatchingEngineType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.SaveAttributeValuesType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ExportProfileType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRuleAttributeMapping>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessRuleAttributeMapping))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRuleSetRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessRuleSetRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.ContainerRelationshipTypeEntityTypeMapping>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ContainerRelationshipTypeEntityTypeMapping))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipTypeEntityTypeMapping))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ConstraintType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.DynamicTableType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeVersionCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeVersion>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeVersion))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.TimeZone>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.TimeZone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBColumnCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DynamicTableSchema.DBColumn>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBColumn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBConstraintCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DynamicTableSchema.DBConstraint>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBConstraint))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBRelationshipCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DynamicTableSchema.DBRelationship>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBRelationship))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBTableCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DynamicTableSchema.DBTable>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Tuple<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Jobs.Job>, System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExportProfile>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.DQM.NormalizationResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.DQM.NormalizationResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.TraceSettings))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.TracingLevel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.TracingMode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.ExecutionSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.ExecutionSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.MDMObjectGroup>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.MDMObjectGroup>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.Core.MDMObject>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.Core.MDMObject>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.EmailNotification>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.EmailNotification>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.NotificationSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.NotificationSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.DataFormatterSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.DataFormatterSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.DataSubscriber>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.DataSubscriber>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.LookupExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.LookupExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.ProfileSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.ProfileSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.ExportSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.ExportSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.ExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.ExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CallerContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Workflow.WorkflowActionContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Workflow.WorkflowStateCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Workflow.WorkflowState>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Workflow.WorkflowState))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Workflow.WorkflowActivity>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Workflow.WorkflowActivity))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Workflow.ActivityAction>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Workflow.ActivityAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Jobs.Job>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.Job))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.JobData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.ExecutionStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.JobExecutionStepCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Jobs.JobExecutionStep>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.JobExecutionStep))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.JobParameterCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Jobs.JobParameter>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.JobParameter))]
        MDM.BusinessObjects.OperationResult ProcessDynamicTableSchema(MDM.BusinessObjects.DynamicTableSchema.DBTable dbTable, MDM.Core.DynamicTableType dynamicTableType, MDM.BusinessObjects.CallerContext callerContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessDynamicTableSche" +
            "ma", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessDynamicTableSche" +
            "maResponse")]
        System.Threading.Tasks.Task<MDM.BusinessObjects.OperationResult> ProcessDynamicTableSchemaAsync(MDM.BusinessObjects.DynamicTableSchema.DBTable dbTable, MDM.Core.DynamicTableType dynamicTableType, MDM.BusinessObjects.CallerContext callerContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessDynamicTableSche" +
            "mas", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessDynamicTableSche" +
            "masResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessDynamicTableSche" +
            "masMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DataModel.DataModelOperationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityOperationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeOperationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipOperationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessRuleOperationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExportProfile>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExportProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EntityExportProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EntityExportProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EntityExportSyndicationProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExecutionSpecification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExecutionSettingCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExecutionSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExecutionSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.TriggeringDataSpecification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.MDMObjectGroupCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.MDMObjectGroup>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.MDMObjectGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.MDMObjectCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.Notification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EmailNotificationCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.EmailNotification>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EmailNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.NotificationSettingCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.NotificationSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.NotificationSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.OutputSpecification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.DataFormatter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.DataFormatterSettingCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.DataFormatterSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.DataFormatterSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.DataSubscriberCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.DataSubscriber>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.DataSubscriber))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.LookupExportScopeCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.LookupExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.LookupExportScope))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.OutputDataSpecification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ProfileSettingCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ProfileSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ProfileSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ScopeSpecification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExportSettingCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExportSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExportSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExportScopeCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExportScope))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.CategoryGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EntityExportUIProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.LookupExportProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.LookupExportProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.LookupExportSyndicationProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.TranslationExportProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.TranslationExportProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQMNormalization.NormalizationProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQMNormalization.NormalizationRulesetsCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQMNormalization.NormalizationRuleset>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQMNormalization.NormalizationRuleset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<long>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<int>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<object, object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.Collection<long>>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.Collection<long>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, MDM.BusinessObjects.Row>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, long>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, long>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<string, string>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, MDM.BusinessObjects.AttributeModelCollection>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<short>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQM.NamedDataQualityIndicatorValue>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.NamedDataQualityIndicatorValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.DataQualityIndicatorValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.DataQualityIndicatorFailureInfoCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQM.DataQualityIndicatorFailureInfo>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.DataQualityIndicatorFailureInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.NormalizationResultsCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQM.NormalizationResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.NormalizationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.ValidationProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.DQMJobProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.JobSourceScopeFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.JobScopeFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.MatchingProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.MatchResultSet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQM.MatchResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.MatchResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQM.MatchSourceAttribute>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.MatchSourceAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.Core.UserAction>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.UserAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.Core.LocaleEnum>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.LocaleEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MDMObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ObjectBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ObjectAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DependentAttributeCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DependentAttribute>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DependentAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ApplicationContextCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.ApplicationContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.ApplicationContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.ApplicationContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ApplicationContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ApplicationContextType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.DependencyType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelBaseProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AttributeModelType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AttributeTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelBasePropertiesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModelBaseProperties>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelMappingProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelLocaleProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelLocalePropertiesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModelLocaleProperties>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelMappingPropertiesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModelMappingProperties>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeGroup>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchCriteria))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessConditionStatusCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.BusinessConditionStatus>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.BusinessConditionStatus>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessConditionStatus>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessConditionStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ValidityStateValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SearchAttributeRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchAttributeRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Attribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AttributeDataType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Attribute>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AttributeValueSource))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ValueCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Value>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Value))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SourceInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.SearchOperator))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SearchWeightageAttribute>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchWeightageAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ErrorCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Error>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Error))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ReasonType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InformationCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Information>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Information))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.OperationResultStatusEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.WarningCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Warning>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Warning))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Table))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ColumnCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Column>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Column))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.SortOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RowCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Row))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CellCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Cell>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Cell))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeOperationResultCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeOperationResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipOperationResultCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.RelationshipOperationResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ObjectType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SecurityUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AuthenticationType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SecurityRoleCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SecurityRole>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SecurityRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.SecurityUserType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SecurityUserCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SecurityUser>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.UserPreferences))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.UserPreferencesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.UserPreferences>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MDMRuleType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.DQM.DataQualityIndicatorFailureInfo>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.DQM.DataQualityIndicatorFailureInfo>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MDMCenterApplication))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MDMPublisher))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.EventSource))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.EventSubscriber))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MDMCenterModules))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Entity))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ContainerBranchLevel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ValidationStates))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeUniqueIdentifier))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeUniqueIdentifierCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeUniqueIdentifier>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityExtensionContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityContextCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.EntityContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityModelContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityHierarchyContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityMoveContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ReParentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ExtensionRelationshipCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityChangeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.LocaleChangeContextCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.LocaleChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.LocaleChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.LocaleChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.LocaleChangeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeChangeContextCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.AttributeChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.AttributeChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeChangeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipChangeContextCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.RelationshipChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.RelationshipChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.RelationshipChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipChangeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.ExtensionRelationship>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ExtensionRelationship))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.RelationshipDirection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipBaseCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.RelationshipBase>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ContainerType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.HierarchyRelationshipCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.HierarchyRelationship>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.HierarchyRelationship))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Relationship>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Relationship))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InheritanceMode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.RelationshipStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.CommentsRequired))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AssignmentType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.JobAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.JobStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.JobSubType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.JobType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BaseProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ProfileType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.Core.MDMObject>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ExportJobStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.LookupExportFileFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.LookupExportGroupOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.LocaleCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Locale>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Locale))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.EntityTypeMode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CategoryCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.Category>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.Category>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Category>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Category))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CategoryBaseProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CategoryLocaleProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CategoryBasePropertiesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.CategoryBaseProperties>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CategoryLocalePropertiesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.CategoryLocaleProperties>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchMDMRuleRuleGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ConditionalOperator))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SearchMDMRuleRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchMDMRuleRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AuditInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.MDMRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRuleDisplayList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.DisplayType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipTypeCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.RelationshipType>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.RelationshipType>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.RelationshipType>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRuleContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.MDMRuleAttributeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRuleAttributeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.MDMRuleEntityExtensionContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRuleEntityExtensionContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.MDMRuleRelationshipContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRuleRelationshipContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.RuleStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchAttributeRuleGroupCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SearchAttributeRuleGroup>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchAttributeRuleGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchValidationStatesRuleGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SearchValidationStatesRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchValidationStatesRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.SystemAttributes))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.DQMJobType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MergingProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MergeMode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.Core.ExposableMergeContextFlag>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ExposableMergeContextFlag))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MatchingEngineType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.SaveAttributeValuesType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ExportProfileType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRuleAttributeMapping>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessRuleAttributeMapping))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRuleSetRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessRuleSetRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.ContainerRelationshipTypeEntityTypeMapping>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ContainerRelationshipTypeEntityTypeMapping))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipTypeEntityTypeMapping))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ConstraintType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.DynamicTableType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeVersionCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeVersion>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeVersion))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.TimeZone>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.TimeZone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBColumnCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DynamicTableSchema.DBColumn>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBColumn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBConstraintCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DynamicTableSchema.DBConstraint>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBConstraint))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBRelationshipCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DynamicTableSchema.DBRelationship>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBRelationship))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBTableCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DynamicTableSchema.DBTable>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Tuple<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Jobs.Job>, System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExportProfile>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.DQM.NormalizationResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.DQM.NormalizationResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.TraceSettings))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.TracingLevel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.TracingMode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.ExecutionSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.ExecutionSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.MDMObjectGroup>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.MDMObjectGroup>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.Core.MDMObject>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.Core.MDMObject>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.EmailNotification>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.EmailNotification>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.NotificationSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.NotificationSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.DataFormatterSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.DataFormatterSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.DataSubscriber>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.DataSubscriber>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.LookupExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.LookupExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.ProfileSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.ProfileSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.ExportSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.ExportSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.ExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.ExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CallerContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Workflow.WorkflowActionContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Workflow.WorkflowStateCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Workflow.WorkflowState>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Workflow.WorkflowState))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Workflow.WorkflowActivity>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Workflow.WorkflowActivity))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Workflow.ActivityAction>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Workflow.ActivityAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Jobs.Job>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.Job))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.JobData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.ExecutionStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.JobExecutionStepCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Jobs.JobExecutionStep>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.JobExecutionStep))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.JobParameterCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Jobs.JobParameter>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.JobParameter))]
        MDM.BusinessObjects.OperationResult ProcessDynamicTableSchemas(MDM.BusinessObjects.DynamicTableSchema.DBTableCollection dbTables, MDM.Core.DynamicTableType dynamicTableType, MDM.BusinessObjects.CallerContext callerContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessDynamicTableSche" +
            "mas", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessDynamicTableSche" +
            "masResponse")]
        System.Threading.Tasks.Task<MDM.BusinessObjects.OperationResult> ProcessDynamicTableSchemasAsync(MDM.BusinessObjects.DynamicTableSchema.DBTableCollection dbTables, MDM.Core.DynamicTableType dynamicTableType, MDM.BusinessObjects.CallerContext callerContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetDynamicTableSchema", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetDynamicTableSchemaRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetDynamicTableSchemaMD" +
            "MExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DataModel.DataModelOperationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityOperationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeOperationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipOperationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessRuleOperationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExportProfile>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExportProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EntityExportProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EntityExportProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EntityExportSyndicationProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExecutionSpecification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExecutionSettingCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExecutionSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExecutionSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.TriggeringDataSpecification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.MDMObjectGroupCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.MDMObjectGroup>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.MDMObjectGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.MDMObjectCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.Notification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EmailNotificationCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.EmailNotification>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EmailNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.NotificationSettingCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.NotificationSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.NotificationSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.OutputSpecification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.DataFormatter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.DataFormatterSettingCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.DataFormatterSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.DataFormatterSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.DataSubscriberCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.DataSubscriber>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.DataSubscriber))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.LookupExportScopeCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.LookupExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.LookupExportScope))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.OutputDataSpecification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ProfileSettingCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ProfileSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ProfileSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ScopeSpecification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExportSettingCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExportSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExportSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExportScopeCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.ExportScope))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.CategoryGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.EntityExportUIProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.LookupExportProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.LookupExportProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.LookupExportSyndicationProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.TranslationExportProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Exports.TranslationExportProfileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQMNormalization.NormalizationProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQMNormalization.NormalizationRulesetsCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQMNormalization.NormalizationRuleset>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQMNormalization.NormalizationRuleset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<long>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<int>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<object, object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.Collection<long>>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.Collection<long>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, MDM.BusinessObjects.Row>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, long>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, long>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<string, string>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, MDM.BusinessObjects.AttributeModelCollection>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<short>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQM.NamedDataQualityIndicatorValue>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.NamedDataQualityIndicatorValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.DataQualityIndicatorValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.DataQualityIndicatorFailureInfoCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQM.DataQualityIndicatorFailureInfo>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.DataQualityIndicatorFailureInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.NormalizationResultsCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQM.NormalizationResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.NormalizationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.ValidationProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.DQMJobProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.JobSourceScopeFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.JobScopeFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.MatchingProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.MatchResultSet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQM.MatchResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.MatchResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DQM.MatchSourceAttribute>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DQM.MatchSourceAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.Core.UserAction>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.UserAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.Core.LocaleEnum>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.LocaleEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MDMObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ObjectBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ObjectAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DependentAttributeCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DependentAttribute>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DependentAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ApplicationContextCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.ApplicationContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.ApplicationContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.ApplicationContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ApplicationContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ApplicationContextType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.DependencyType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelBaseProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AttributeModelType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AttributeTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelBasePropertiesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModelBaseProperties>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelMappingProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelLocaleProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelLocalePropertiesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModelLocaleProperties>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeModelMappingPropertiesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModelMappingProperties>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeGroup>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchCriteria))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessConditionStatusCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.BusinessConditionStatus>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.BusinessConditionStatus>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessConditionStatus>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessConditionStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ValidityStateValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SearchAttributeRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchAttributeRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Attribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AttributeDataType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Attribute>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AttributeValueSource))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ValueCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Value>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Value))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SourceInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.SearchOperator))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SearchWeightageAttribute>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchWeightageAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ErrorCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Error>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Error))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ReasonType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InformationCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Information>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Information))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.OperationResultStatusEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.WarningCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Warning>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Warning))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Table))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ColumnCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Column>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Column))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.SortOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RowCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Row))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CellCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Cell>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Cell))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeOperationResultCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeOperationResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipOperationResultCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.RelationshipOperationResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ObjectType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SecurityUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AuthenticationType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SecurityRoleCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SecurityRole>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SecurityRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.SecurityUserType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SecurityUserCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SecurityUser>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.UserPreferences))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.UserPreferencesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.UserPreferences>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MDMRuleType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.DQM.DataQualityIndicatorFailureInfo>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.DQM.DataQualityIndicatorFailureInfo>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MDMCenterApplication))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MDMPublisher))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.EventSource))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.EventSubscriber))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MDMCenterModules))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Entity))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ContainerBranchLevel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ValidationStates))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeUniqueIdentifier))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeUniqueIdentifierCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeUniqueIdentifier>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityExtensionContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityContextCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.EntityContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityModelContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityHierarchyContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityMoveContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ReParentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ExtensionRelationshipCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.EntityChangeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.LocaleChangeContextCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.LocaleChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.LocaleChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.LocaleChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.LocaleChangeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeChangeContextCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.AttributeChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.AttributeChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeChangeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipChangeContextCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.RelationshipChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.RelationshipChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.RelationshipChangeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipChangeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.ExtensionRelationship>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ExtensionRelationship))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.RelationshipDirection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipBaseCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.RelationshipBase>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ContainerType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.HierarchyRelationshipCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.HierarchyRelationship>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.HierarchyRelationship))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Relationship>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Relationship))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InheritanceMode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.RelationshipStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.CommentsRequired))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.AssignmentType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.JobAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.JobStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.JobSubType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.JobType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BaseProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ProfileType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.Core.MDMObject>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ExportJobStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.LookupExportFileFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.LookupExportGroupOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.LocaleCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Locale>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Locale))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.EntityTypeMode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CategoryCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.Category>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.Category>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Category>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Category))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CategoryBaseProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CategoryLocaleProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CategoryBasePropertiesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.CategoryBaseProperties>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CategoryLocalePropertiesCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.CategoryLocaleProperties>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchMDMRuleRuleGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ConditionalOperator))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SearchMDMRuleRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchMDMRuleRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AuditInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.MDMRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRuleDisplayList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.DisplayType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipTypeCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.InterfaceContractCollection<object, MDM.BusinessObjects.RelationshipType>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ItemContractCollection<MDM.BusinessObjects.RelationshipType>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.RelationshipType>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRuleContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.MDMRuleAttributeContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRuleAttributeContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.MDMRuleEntityExtensionContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRuleEntityExtensionContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.MDMRuleRelationshipContext>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MDMRuleRelationshipContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.RuleStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchAttributeRuleGroupCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SearchAttributeRuleGroup>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchAttributeRuleGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchValidationStatesRuleGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.SearchValidationStatesRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.SearchValidationStatesRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.SystemAttributes))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.DQMJobType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.MergingProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MergeMode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.Core.ExposableMergeContextFlag>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ExposableMergeContextFlag))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.MatchingEngineType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.SaveAttributeValuesType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ExportProfileType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRuleAttributeMapping>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessRuleAttributeMapping))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRuleSetRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.BusinessRuleSetRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.ContainerRelationshipTypeEntityTypeMapping>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.ContainerRelationshipTypeEntityTypeMapping))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.RelationshipTypeEntityTypeMapping))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ConstraintType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.DynamicTableType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeVersionCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeVersion>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.AttributeVersion))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.TimeZone>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.TimeZone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBColumnCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DynamicTableSchema.DBColumn>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBColumn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBConstraintCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DynamicTableSchema.DBConstraint>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBConstraint))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBRelationshipCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DynamicTableSchema.DBRelationship>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBRelationship))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.DynamicTableSchema.DBTableCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.DynamicTableSchema.DBTable>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Tuple<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Jobs.Job>, System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExportProfile>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.DQM.NormalizationResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.DQM.NormalizationResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.TraceSettings))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.TracingLevel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.TracingMode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.ExecutionSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.ExecutionSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.MDMObjectGroup>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.MDMObjectGroup>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.Core.MDMObject>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.Core.MDMObject>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.EmailNotification>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.EmailNotification>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.NotificationSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.NotificationSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.DataFormatterSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.DataFormatterSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.DataSubscriber>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.DataSubscriber>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.LookupExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.LookupExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.ProfileSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.ProfileSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.ExportSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.ExportSetting>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.InterfaceContractCollection<object, MDM.BusinessObjects.Exports.ExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.Core.ItemContractCollection<MDM.BusinessObjects.Exports.ExportScope>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.CallerContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Workflow.WorkflowActionContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Workflow.WorkflowStateCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Workflow.WorkflowState>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Workflow.WorkflowState))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Workflow.WorkflowActivity>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Workflow.WorkflowActivity))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Workflow.ActivityAction>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Workflow.ActivityAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Jobs.Job>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.Job))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.JobData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.ExecutionStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.JobExecutionStepCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Jobs.JobExecutionStep>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.JobExecutionStep))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.JobParameterCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Jobs.JobParameter>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MDM.BusinessObjects.Jobs.JobParameter))]
        MDM.BusinessObjects.OperationResult GetDynamicTableSchema(int id, MDM.Core.DynamicTableType dynamicTableType, MDM.BusinessObjects.CallerContext callerContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetDynamicTableSchema", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetDynamicTableSchemaRe" +
            "sponse")]
        System.Threading.Tasks.Task<MDM.BusinessObjects.OperationResult> GetDynamicTableSchemaAsync(int id, MDM.Core.DynamicTableType dynamicTableType, MDM.BusinessObjects.CallerContext callerContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCoreAttrXml", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCoreAttrXmlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCoreAttrXmlMDMExcept" +
            "ionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetCoreAttrXml(int localeID, int customerID, long CNodeID, long CNodeParentID, int attrGroupID, int catalogID, int orgID, string user, int backupLocaleID, string viewPath, bool useDraftTaxonomy, bool encodeCollections, string attrIDList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCoreAttrXml", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCoreAttrXmlResponse")]
        System.Threading.Tasks.Task<string> GetCoreAttrXmlAsync(int localeID, int customerID, long CNodeID, long CNodeParentID, int attrGroupID, int catalogID, int orgID, string user, int backupLocaleID, string viewPath, bool useDraftTaxonomy, bool encodeCollections, string attrIDList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechAttrXml", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechAttrXmlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechAttrXmlMDMExcept" +
            "ionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetTechAttrXml(int CNodeID, int CNodeParentID, int catalogID, int attrGroupID, int localeID, int customerID, string user, int backupLocaleID, string viewPath, bool useDraftTaxonomy, bool encodeCollections, string attrIDList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechAttrXml", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechAttrXmlResponse")]
        System.Threading.Tasks.Task<string> GetTechAttrXmlAsync(int CNodeID, int CNodeParentID, int catalogID, int attrGroupID, int localeID, int customerID, string user, int backupLocaleID, string viewPath, bool useDraftTaxonomy, bool encodeCollections, string attrIDList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetApplicationConfigDat" +
            "a", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetApplicationConfigDat" +
            "aResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetApplicationConfigDat" +
            "aMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetApplicationConfigData(int eventSourceId, int eventSubscriberId, int securityRoleId, int securityUserId, int orgId, int catalogId, int categoryId, int cNodeId, int attributeId, int nodeTypeId, int relationshipTypeId, int localId, int applicationConfigId, string categoryPath, string objectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetApplicationConfigDat" +
            "a", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetApplicationConfigDat" +
            "aResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetApplicationConfigDataAsync(int eventSourceId, int eventSubscriberId, int securityRoleId, int securityUserId, int orgId, int catalogId, int categoryId, int cNodeId, int attributeId, int nodeTypeId, int relationshipTypeId, int localId, int applicationConfigId, string categoryPath, string objectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/UpdateApplicationConfig" +
            "XML", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/UpdateApplicationConfig" +
            "XMLResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/UpdateApplicationConfig" +
            "XMLMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        int UpdateApplicationConfigXML(
                    int FK_Application_ContextDefinition, 
                    int FK_Application_ConfigParent, 
                    string ShortName, 
                    string LongName, 
                    int FK_Event_Source, 
                    int FK_Event_Subscriber, 
                    int FK_Org, 
                    int FK_Catalog, 
                    int FK_Category, 
                    int FK_CNode, 
                    int FK_Attribute, 
                    int FK_NodeType, 
                    int FK_RelationshipType, 
                    int FK_Security_Role, 
                    int FK_Security_user, 
                    string ConfigXML, 
                    string Description, 
                    string PreCondition, 
                    string PostCondition, 
                    string XSDSchema, 
                    string SampleXML, 
                    string loginUser, 
                    string userProgram, 
                    int FK_Locale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/UpdateApplicationConfig" +
            "XML", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/UpdateApplicationConfig" +
            "XMLResponse")]
        System.Threading.Tasks.Task<int> UpdateApplicationConfigXMLAsync(
                    int FK_Application_ContextDefinition, 
                    int FK_Application_ConfigParent, 
                    string ShortName, 
                    string LongName, 
                    int FK_Event_Source, 
                    int FK_Event_Subscriber, 
                    int FK_Org, 
                    int FK_Catalog, 
                    int FK_Category, 
                    int FK_CNode, 
                    int FK_Attribute, 
                    int FK_NodeType, 
                    int FK_RelationshipType, 
                    int FK_Security_Role, 
                    int FK_Security_user, 
                    string ConfigXML, 
                    string Description, 
                    string PreCondition, 
                    string PostCondition, 
                    string XSDSchema, 
                    string SampleXML, 
                    string loginUser, 
                    string userProgram, 
                    int FK_Locale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetContextualApplicatio" +
            "nConfigData", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetContextualApplicatio" +
            "nConfigDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetContextualApplicatio" +
            "nConfigDataMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetContextualApplicationConfigData(int eventSourceId, int eventSubscriberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetContextualApplicatio" +
            "nConfigData", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetContextualApplicatio" +
            "nConfigDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetContextualApplicationConfigDataAsync(int eventSourceId, int eventSubscriberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSearchCriterias", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSearchCriteriasRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSearchCriteriasMDMEx" +
            "ceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetSearchCriterias(int searchCriteriaID, int loginId, int catalogId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSearchCriterias", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSearchCriteriasRespo" +
            "nse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetSearchCriteriasAsync(int searchCriteriaID, int loginId, int catalogId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCategoryNavPanel", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCategoryNavPanelResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCategoryNavPanelMDME" +
            "xceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetCategoryNavPanel(int catalogID, string sysAttrSelectionXml, string categorySearchColumn, string categorySearchString, long parentCategoryId, int countFrom, int countTo, string strvchrUserLogin, int currentDataLocale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCategoryNavPanel", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCategoryNavPanelResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetCategoryNavPanelAsync(int catalogID, string sysAttrSelectionXml, string categorySearchColumn, string categorySearchString, long parentCategoryId, int countFrom, int countTo, string strvchrUserLogin, int currentDataLocale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessSearchCriteria", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessSearchCriteriaRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessSearchCriteriaMD" +
            "MExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        int ProcessSearchCriteria(string action, int criteriaId, string criteriaName, int loginId, int catalogId, bool isGlobalSearch, string searchXml, string loginUser, string userProgram);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessSearchCriteria", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessSearchCriteriaRe" +
            "sponse")]
        System.Threading.Tasks.Task<int> ProcessSearchCriteriaAsync(string action, int criteriaId, string criteriaName, int loginId, int catalogId, bool isGlobalSearch, string searchXml, string loginUser, string userProgram);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllCategories", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllCategoriesRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllCategoriesMDMExce" +
            "ptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetAllCategories(int altTaxId, int currentDataLocale, string filter, string loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllCategories", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllCategoriesRespons" +
            "e")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllCategoriesAsync(int altTaxId, int currentDataLocale, string filter, string loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSystemAttributes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSystemAttributesResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSystemAttributesMDME" +
            "xceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetSystemAttributes(int orgId, bool excludeSearchable, int currentDataLocale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSystemAttributes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSystemAttributesResp" +
            "onse")]
        System.Threading.Tasks.Task<string> GetSystemAttributesAsync(int orgId, bool excludeSearchable, int currentDataLocale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCharacteristicTempla" +
            "te", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCharacteristicTempla" +
            "teResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCharacteristicTempla" +
            "teMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetCharacteristicTemplate(int selectedCategoryId, int catalogID, int currentDataLocale, bool useDraftAccess, int usesChilds, int orgID, bool excludeSearchable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCharacteristicTempla" +
            "te", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCharacteristicTempla" +
            "teResponse")]
        System.Threading.Tasks.Task<string> GetCharacteristicTemplateAsync(int selectedCategoryId, int catalogID, int currentDataLocale, bool useDraftAccess, int usesChilds, int orgID, bool excludeSearchable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRuleViewAttributes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRuleViewAttributesRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRuleViewAttributesMD" +
            "MExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetRuleViewAttributes(int cNodeId, int businessRuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRuleViewAttributes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRuleViewAttributesRe" +
            "sponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetRuleViewAttributesAsync(int cNodeId, int businessRuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRuleFromCont" +
            "ext", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRuleFromCont" +
            "extResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRuleFromCont" +
            "extMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetBusinessRuleFromContext(string strContentXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRuleFromCont" +
            "ext", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBusinessRuleFromCont" +
            "extResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetBusinessRuleFromContextAsync(string strContentXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/DeleteSearchCriteria", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/DeleteSearchCriteriaRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/DeleteSearchCriteriaMDM" +
            "ExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        int DeleteSearchCriteria(int searchCriteriaId, string loginUser, string modProgram);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/DeleteSearchCriteria", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/DeleteSearchCriteriaRes" +
            "ponse")]
        System.Threading.Tasks.Task<int> DeleteSearchCriteriaAsync(int searchCriteriaId, string loginUser, string modProgram);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserVisibleOrgsDT", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserVisibleOrgsDTRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserVisibleOrgsDTMDM" +
            "ExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetUserVisibleOrgsDT(string targetLoginUser, string loginUser, int localId, int countFrom, int countTo, string sortColumn, string searchColumn, string searchParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserVisibleOrgsDT", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserVisibleOrgsDTRes" +
            "ponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetUserVisibleOrgsDTAsync(string targetLoginUser, string loginUser, int localId, int countFrom, int countTo, string sortColumn, string searchColumn, string searchParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserVisibleCatalogsD" +
            "T", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserVisibleCatalogsD" +
            "TResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserVisibleCatalogsD" +
            "TMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetUserVisibleCatalogsDT(
                    string targetLoginUser, 
                    string loginUser, 
                    int orgId, 
                    int localeId, 
                    int countFrom, 
                    int countTo, 
                    string sortColumn, 
                    string searchColumn, 
                    string searchParameter, 
                    int catalogId, 
                    bool includeTaxonomy, 
                    bool includeDynamicTaxonomy, 
                    bool includeCatalog, 
                    bool includeView, 
                    bool includeProduction, 
                    bool includeDraft);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserVisibleCatalogsD" +
            "T", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserVisibleCatalogsD" +
            "TResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetUserVisibleCatalogsDTAsync(
                    string targetLoginUser, 
                    string loginUser, 
                    int orgId, 
                    int localeId, 
                    int countFrom, 
                    int countTo, 
                    string sortColumn, 
                    string searchColumn, 
                    string searchParameter, 
                    int catalogId, 
                    bool includeTaxonomy, 
                    bool includeDynamicTaxonomy, 
                    bool includeCatalog, 
                    bool includeView, 
                    bool includeProduction, 
                    bool includeDraft);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAssignmentButtons", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAssignmentButtonsRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAssignmentButtonsMDM" +
            "ExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetAssignmentButtons(string assignmentStatus, string cNodeList, string toolbarButtonXml, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAssignmentButtons", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAssignmentButtonsRes" +
            "ponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAssignmentButtonsAsync(string assignmentStatus, string cNodeList, string toolbarButtonXml, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBreadcrumbAttributeV" +
            "alueString", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBreadcrumbAttributeV" +
            "alueStringResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBreadcrumbAttributeV" +
            "alueStringMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetBreadcrumbAttributeValueString(string breadcrumbConfigXML, int fkOrgId, int catalogId, long cNodeId, int localeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBreadcrumbAttributeV" +
            "alueString", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetBreadcrumbAttributeV" +
            "alueStringResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetBreadcrumbAttributeValueStringAsync(string breadcrumbConfigXML, int fkOrgId, int catalogId, long cNodeId, int localeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/Get", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMDMExceptionDetailsF" +
            "ault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        MDM.BusinessObjects.AttributeVersionCollection Get(long entityId, int attributeId, int localeId, int catalogId, long entityParentId, MDM.BusinessObjects.CallerContext callerContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/Get", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetResponse")]
        System.Threading.Tasks.Task<MDM.BusinessObjects.AttributeVersionCollection> GetAsync(long entityId, int attributeId, int localeId, int catalogId, long entityParentId, MDM.BusinessObjects.CallerContext callerContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessServiceResult", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessServiceResultRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessServiceResultMDM" +
            "ExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        int ProcessServiceResult(int eventSource, int applicationConfig, string dataXmlString, string loginUser, string userProgram);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessServiceResult", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessServiceResultRes" +
            "ponse")]
        System.Threading.Tasks.Task<int> ProcessServiceResultAsync(int eventSource, int applicationConfig, string dataXmlString, string loginUser, string userProgram);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetJobTypeEventSourceMa" +
            "pping", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetJobTypeEventSourceMa" +
            "ppingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetJobTypeEventSourceMa" +
            "ppingMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetJobTypeEventSourceMapping(int eventSourceId, int jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetJobTypeEventSourceMa" +
            "pping", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetJobTypeEventSourceMa" +
            "ppingResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetJobTypeEventSourceMappingAsync(int eventSourceId, int jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRelationshipTypeHier" +
            "archy", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRelationshipTypeHier" +
            "archyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRelationshipTypeHier" +
            "archyMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetRelationshipTypeHierarchy(int FK_Catalog, int FK_RelationshipType_Top, int MaxLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRelationshipTypeHier" +
            "archy", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRelationshipTypeHier" +
            "archyResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetRelationshipTypeHierarchyAsync(int FK_Catalog, int FK_RelationshipType_Top, int MaxLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractCatalogByIDLocal" +
            "Rel", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractCatalogByIDLocal" +
            "RelResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractCatalogByIDLocal" +
            "RelMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string ExtractCatalogByIDLocalRel(int intExtSystemID, string txtXML, string vchrRelAttrList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractCatalogByIDLocal" +
            "Rel", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractCatalogByIDLocal" +
            "RelResponse")]
        System.Threading.Tasks.Task<string> ExtractCatalogByIDLocalRelAsync(int intExtSystemID, string txtXML, string vchrRelAttrList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractBulkAttributeMet" +
            "adata", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractBulkAttributeMet" +
            "adataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractBulkAttributeMet" +
            "adataMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string ExtractBulkAttributeMetadata(string vchrTargetUserLogin, string vchrUserLogin, string txtXML, bool bitUseDraftTax, int localeId, bool ignoreComplexAttributes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractBulkAttributeMet" +
            "adata", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractBulkAttributeMet" +
            "adataResponse")]
        System.Threading.Tasks.Task<string> ExtractBulkAttributeMetadataAsync(string vchrTargetUserLogin, string vchrUserLogin, string txtXML, bool bitUseDraftTax, int localeId, bool ignoreComplexAttributes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractBulkAttributeMet" +
            "adataRel", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractBulkAttributeMet" +
            "adataRelResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractBulkAttributeMet" +
            "adataRelMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string ExtractBulkAttributeMetadataRel(string vchrTargetUserLogin, string vchrUserLogin, string txtXML, bool bitUseDraftTax, int localeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractBulkAttributeMet" +
            "adataRel", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractBulkAttributeMet" +
            "adataRelResponse")]
        System.Threading.Tasks.Task<string> ExtractBulkAttributeMetadataRelAsync(string vchrTargetUserLogin, string vchrUserLogin, string txtXML, bool bitUseDraftTax, int localeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractAttributes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractAttributesRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractAttributesMDMExc" +
            "eptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string ExtractAttributes(string vchrTargetUserLogin, string vchrUserLogin, string txtXML, bool bitUseDraftTax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractAttributes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractAttributesRespon" +
            "se")]
        System.Threading.Tasks.Task<string> ExtractAttributesAsync(string vchrTargetUserLogin, string vchrUserLogin, string txtXML, bool bitUseDraftTax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCategoryAttributeMap" +
            "", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCategoryAttributeMap" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCategoryAttributeMap" +
            "MDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetCategoryAttributeMap(int intCategoryID, int intCatalogID, int intLocaleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCategoryAttributeMap" +
            "", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCategoryAttributeMap" +
            "Response")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetCategoryAttributeMapAsync(int intCategoryID, int intCatalogID, int intLocaleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCharacteristicTempla" +
            "teDT", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCharacteristicTempla" +
            "teDTResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCharacteristicTempla" +
            "teDTMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetCharacteristicTemplateDT(int intCategoryID, int intLocaleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCharacteristicTempla" +
            "teDT", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCharacteristicTempla" +
            "teDTResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetCharacteristicTemplateDTAsync(int intCategoryID, int intLocaleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserVisibleCatalogs", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserVisibleCatalogsR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserVisibleCatalogsM" +
            "DMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetUserVisibleCatalogs(
                    string vchrTargetUserLogin, 
                    string vchrUserLogin, 
                    int FK_Org, 
                    int FK_Locale, 
                    int intCountFrom, 
                    int intCountTo, 
                    string vchrSortColumn, 
                    string vchrSearchColumn, 
                    string vchrSearchParameter, 
                    int PK_Catalog, 
                    bool IncludeTaxonomy, 
                    bool IncludeDynamicTaxonomy, 
                    bool IncludeCatalog, 
                    bool IncludeView, 
                    bool IncludeProduction, 
                    bool IncludeDraft);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserVisibleCatalogs", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserVisibleCatalogsR" +
            "esponse")]
        System.Threading.Tasks.Task<string> GetUserVisibleCatalogsAsync(
                    string vchrTargetUserLogin, 
                    string vchrUserLogin, 
                    int FK_Org, 
                    int FK_Locale, 
                    int intCountFrom, 
                    int intCountTo, 
                    string vchrSortColumn, 
                    string vchrSearchColumn, 
                    string vchrSearchParameter, 
                    int PK_Catalog, 
                    bool IncludeTaxonomy, 
                    bool IncludeDynamicTaxonomy, 
                    bool IncludeCatalog, 
                    bool IncludeView, 
                    bool IncludeProduction, 
                    bool IncludeDraft);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogPermissionsBy" +
            "Org", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogPermissionsBy" +
            "OrgResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogPermissionsBy" +
            "OrgMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetCatalogPermissionsByOrg(
                    string vchrTargetUserLogin, 
                    string vchrUserLogin, 
                    int FK_Org, 
                    int FK_Locale, 
                    int intCountFrom, 
                    int intCountTo, 
                    string vchrSortColumn, 
                    string vchrSearchColumn, 
                    string vchrSearchParameter, 
                    int PK_Catalog, 
                    bool IncludeTaxonomy, 
                    bool IncludeDynamicTaxonomy, 
                    bool IncludeCatalog, 
                    bool IncludeView, 
                    bool IncludeProduction, 
                    bool IncludeDraft);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogPermissionsBy" +
            "Org", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogPermissionsBy" +
            "OrgResponse")]
        System.Threading.Tasks.Task<string> GetCatalogPermissionsByOrgAsync(
                    string vchrTargetUserLogin, 
                    string vchrUserLogin, 
                    int FK_Org, 
                    int FK_Locale, 
                    int intCountFrom, 
                    int intCountTo, 
                    string vchrSortColumn, 
                    string vchrSearchColumn, 
                    string vchrSearchParameter, 
                    int PK_Catalog, 
                    bool IncludeTaxonomy, 
                    bool IncludeDynamicTaxonomy, 
                    bool IncludeCatalog, 
                    bool IncludeView, 
                    bool IncludeProduction, 
                    bool IncludeDraft);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogDT", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogDTResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogDTMDMExceptio" +
            "nDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetCatalogDT(
                    string vchrTargetUserLogin, 
                    string vchrUserLogin, 
                    int FK_Org, 
                    int FK_Locale, 
                    int intCountFrom, 
                    int intCountTo, 
                    string vchrSortColumn, 
                    string vchrSearchColumn, 
                    string vchrSearchParameter, 
                    int PK_Catalog, 
                    bool IncludeTaxonomy, 
                    bool IncludeDynamicTaxonomy, 
                    bool IncludeCatalog, 
                    bool IncludeView, 
                    bool IncludeProduction, 
                    bool IncludeDraft);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogDT", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogDTResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetCatalogDTAsync(
                    string vchrTargetUserLogin, 
                    string vchrUserLogin, 
                    int FK_Org, 
                    int FK_Locale, 
                    int intCountFrom, 
                    int intCountTo, 
                    string vchrSortColumn, 
                    string vchrSearchColumn, 
                    string vchrSearchParameter, 
                    int PK_Catalog, 
                    bool IncludeTaxonomy, 
                    bool IncludeDynamicTaxonomy, 
                    bool IncludeCatalog, 
                    bool IncludeView, 
                    bool IncludeProduction, 
                    bool IncludeDraft);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogsByOrg", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogsByOrgRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogsByOrgMDMExce" +
            "ptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetCatalogsByOrg(string orgId, string vchrTargetUserLogin, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogsByOrg", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogsByOrgRespons" +
            "e")]
        System.Threading.Tasks.Task<string> GetCatalogsByOrgAsync(string orgId, string vchrTargetUserLogin, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessCatalogs", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessCatalogsResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessCatalogsMDMExcep" +
            "tionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable ProcessCatalogs(string txtXML, int PK_Org, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessCatalogs", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessCatalogsResponse" +
            "")]
        System.Threading.Tasks.Task<System.Data.DataTable> ProcessCatalogsAsync(string txtXML, int PK_Org, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogLocaleByID", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogLocaleByIDRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogLocaleByIDMDM" +
            "ExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetCatalogLocaleByID(int PK_Catalog, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogLocaleByID", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogLocaleByIDRes" +
            "ponse")]
        System.Threading.Tasks.Task<string> GetCatalogLocaleByIDAsync(int PK_Catalog, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessCatalogLocales", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessCatalogLocalesRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessCatalogLocalesMD" +
            "MExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        bool ProcessCatalogLocales(string txtXML, int PK_Org, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessCatalogLocales", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessCatalogLocalesRe" +
            "sponse")]
        System.Threading.Tasks.Task<bool> ProcessCatalogLocalesAsync(string txtXML, int PK_Org, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNodePermissions", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNodePermissionsRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNodePermissionsMDMEx" +
            "ceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetNodePermissions(
                    string vchrTargetUserLogin, 
                    string vchrUserLogin, 
                    int PK_Catalog, 
                    int FK_ParentCNode, 
                    int FK_Locale, 
                    int FK_Customer, 
                    int intCountFrom, 
                    int intCountTo, 
                    string vchrSortColumn, 
                    string vchrSearchColumn, 
                    string vchrSearchParameter, 
                    int PK_CNode, 
                    bool bitIncludeComponents, 
                    bool bitEnableComponentMapping, 
                    bool bitUseDrafTax, 
                    bool bitEnableUnassignedCategory, 
                    string ToolTipAttributeList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNodePermissions", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNodePermissionsRespo" +
            "nse")]
        System.Threading.Tasks.Task<string> GetNodePermissionsAsync(
                    string vchrTargetUserLogin, 
                    string vchrUserLogin, 
                    int PK_Catalog, 
                    int FK_ParentCNode, 
                    int FK_Locale, 
                    int FK_Customer, 
                    int intCountFrom, 
                    int intCountTo, 
                    string vchrSortColumn, 
                    string vchrSearchColumn, 
                    string vchrSearchParameter, 
                    int PK_CNode, 
                    bool bitIncludeComponents, 
                    bool bitEnableComponentMapping, 
                    bool bitUseDrafTax, 
                    bool bitEnableUnassignedCategory, 
                    string ToolTipAttributeList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNodePermissionsByCNo" +
            "de", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNodePermissionsByCNo" +
            "deResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNodePermissionsByCNo" +
            "deMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetNodePermissionsByCNode(string vchrTargetUserLogin, string vchrUserLogin, int PK_Catalog, int CnodeId, int FK_Locale, int FK_Customer, int intCountFrom, int intCountTo, string vchrSortColumn, string vchrSearchColumn, string vchrSearchParameter, bool bitIncludeComponents, bool bitEnableComponentMapping, bool bitUseDrafTax, bool bitEnableUnassignedCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNodePermissionsByCNo" +
            "de", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNodePermissionsByCNo" +
            "deResponse")]
        System.Threading.Tasks.Task<string> GetNodePermissionsByCNodeAsync(string vchrTargetUserLogin, string vchrUserLogin, int PK_Catalog, int CnodeId, int FK_Locale, int FK_Customer, int intCountFrom, int intCountTo, string vchrSortColumn, string vchrSearchColumn, string vchrSearchParameter, bool bitIncludeComponents, bool bitEnableComponentMapping, bool bitUseDrafTax, bool bitEnableUnassignedCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCoreAttrByGroup", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCoreAttrByGroupRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCoreAttrByGroupMDMEx" +
            "ceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetCoreAttrByGroup(int intLocaleID, int intCustomerID, long intCNodeID, long intCNodeParentID, int intGroupID, int intCatalogID, int intOrgID, string vchrUserID, int intBackLocaleID, string vchrViewPath, bool bitUseDraftTax, bool ShowAtCreation, string AttrIDList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCoreAttrByGroup", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCoreAttrByGroupRespo" +
            "nse")]
        System.Threading.Tasks.Task<string> GetCoreAttrByGroupAsync(int intLocaleID, int intCustomerID, long intCNodeID, long intCNodeParentID, int intGroupID, int intCatalogID, int intOrgID, string vchrUserID, int intBackLocaleID, string vchrViewPath, bool bitUseDraftTax, bool ShowAtCreation, string AttrIDList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessCoreAttr", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessCoreAttrResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessCoreAttrMDMExcep" +
            "tionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        long ProcessCoreAttr(string txtXML, int intCatalogID, int intOrgID, string vchrUserID, string vchrProgramName, int LocaleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessCoreAttr", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessCoreAttrResponse" +
            "")]
        System.Threading.Tasks.Task<long> ProcessCoreAttrAsync(string txtXML, int intCatalogID, int intOrgID, string vchrUserID, string vchrProgramName, int LocaleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessTechAttr", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessTechAttrResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessTechAttrMDMExcep" +
            "tionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        long ProcessTechAttr(string txtXML, int intCatalogID, int intOrgID, string vchrUserID, string vchrProgramName, int LocaleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessTechAttr", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessTechAttrResponse" +
            "")]
        System.Threading.Tasks.Task<long> ProcessTechAttrAsync(string txtXML, int intCatalogID, int intOrgID, string vchrUserID, string vchrProgramName, int LocaleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechAttr", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechAttrResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechAttrMDMException" +
            "DetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetTechAttr(int intCnodeID, int intCnodeParentID, int intCatalogID, int intGroupID, int intLocaleID, int intCustomerID, string vchrUserID, int intBackupLocaleID, string vchrViewPath, bool bitUseDraftTax, string AttrIDList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechAttr", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechAttrResponse")]
        System.Threading.Tasks.Task<string> GetTechAttrAsync(int intCnodeID, int intCnodeParentID, int intCatalogID, int intGroupID, int intLocaleID, int intCustomerID, string vchrUserID, int intBackupLocaleID, string vchrViewPath, bool bitUseDraftTax, string AttrIDList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetStatuses", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetStatusesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetStatusesMDMException" +
            "DetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetStatuses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetStatuses", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetStatusesResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetStatusesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/SchemaValidationRulesEx" +
            "ecution", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/SchemaValidationRulesEx" +
            "ecutionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/SchemaValidationRulesEx" +
            "ecutionMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        bool SchemaValidationRulesExecution(int JobId, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/SchemaValidationRulesEx" +
            "ecution", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/SchemaValidationRulesEx" +
            "ecutionResponse")]
        System.Threading.Tasks.Task<bool> SchemaValidationRulesExecutionAsync(int JobId, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogAttributes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogAttributesRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogAttributesMDM" +
            "ExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataSet GetCatalogAttributes(string UserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogAttributes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogAttributesRes" +
            "ponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCatalogAttributesAsync(string UserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/CopyCatalogAttributes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/CopyCatalogAttributesRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/CopyCatalogAttributesMD" +
            "MExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        bool CopyCatalogAttributes(int intFromCatalogId, int intToCatalogId, string CreateProgram, string CreateUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/CopyCatalogAttributes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/CopyCatalogAttributesRe" +
            "sponse")]
        System.Threading.Tasks.Task<bool> CopyCatalogAttributesAsync(int intFromCatalogId, int intToCatalogId, string CreateProgram, string CreateUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNameValCollection", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNameValCollectionRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNameValCollectionMDM" +
            "ExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetNameValCollection(string IdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNameValCollection", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNameValCollectionRes" +
            "ponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetNameValCollectionAsync(string IdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCollectionValues", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCollectionValuesResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCollectionValuesMDME" +
            "xceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetCollectionValues(int FK_CNode, int ParentId, int FK_Catalog, int FK_Customer, int FK_Locale, string InheritanceMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCollectionValues", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCollectionValuesResp" +
            "onse")]
        System.Threading.Tasks.Task<string> GetCollectionValuesAsync(int FK_CNode, int ParentId, int FK_Catalog, int FK_Customer, int FK_Locale, string InheritanceMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogNodeTypeAttri" +
            "butesXML", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogNodeTypeAttri" +
            "butesXMLResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogNodeTypeAttri" +
            "butesXMLMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetCatalogNodeTypeAttributesXML(int intOrgID, int intCatalogID, string nvchrNodeType, int intBranchLevel, bool IncludeComplexAttrChildren, bool ExcludeSearchable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogNodeTypeAttri" +
            "butesXML", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCatalogNodeTypeAttri" +
            "butesXMLResponse")]
        System.Threading.Tasks.Task<string> GetCatalogNodeTypeAttributesXMLAsync(int intOrgID, int intCatalogID, string nvchrNodeType, int intBranchLevel, bool IncludeComplexAttrChildren, bool ExcludeSearchable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSearchCategoriesByCr" +
            "iteria", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSearchCategoriesByCr" +
            "iteriaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSearchCategoriesByCr" +
            "iteriaMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetSearchCategoriesByCriteria(string vchrSearchValue, int intCatalogID, int intParentID, string toolTipAttributeList, string vchrUserLogin, int dataLocale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSearchCategoriesByCr" +
            "iteria", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSearchCategoriesByCr" +
            "iteriaResponse")]
        System.Threading.Tasks.Task<string> GetSearchCategoriesByCriteriaAsync(string vchrSearchValue, int intCatalogID, int intParentID, string toolTipAttributeList, string vchrUserLogin, int dataLocale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetVisibleComponents", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetVisibleComponentsRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetVisibleComponentsMDM" +
            "ExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetVisibleComponents(string vchrTargetUserLogin, string vchrUserLogin, int intOrgId, int intCatalogId, int intNodeId, bool bitRecursive, bool bitUseDraftTaxonomy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetVisibleComponents", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetVisibleComponentsRes" +
            "ponse")]
        System.Threading.Tasks.Task<string> GetVisibleComponentsAsync(string vchrTargetUserLogin, string vchrUserLogin, int intOrgId, int intCatalogId, int intNodeId, bool bitRecursive, bool bitUseDraftTaxonomy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRelAttr", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRelAttrResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRelAttrMDMExcept" +
            "ionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        int ProcessRelAttr(string txtXML, int intCatalogID, int intOrgID, string vchrUserID, string vchrProgramName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRelAttr", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRelAttrResponse")]
        System.Threading.Tasks.Task<int> ProcessRelAttrAsync(string txtXML, int intCatalogID, int intOrgID, string vchrUserID, string vchrProgramName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserConfigContextDat" +
            "a", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserConfigContextDat" +
            "aResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserConfigContextDat" +
            "aMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataSet GetUserConfigContextData(int applicationContextType, string seqDataTableforUI);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserConfigContextDat" +
            "a", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserConfigContextDat" +
            "aResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUserConfigContextDataAsync(int applicationContextType, string seqDataTableforUI);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllUOMsByUOMType", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllUOMsByUOMTypeResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllUOMsByUOMTypeMDME" +
            "xceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetAllUOMsByUOMType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllUOMsByUOMType", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllUOMsByUOMTypeResp" +
            "onse")]
        System.Threading.Tasks.Task<string> GetAllUOMsByUOMTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserConfigMetadata", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserConfigMetadataRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserConfigMetadataMD" +
            "MExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataSet GetUserConfigMetadata(string configXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserConfigMetadata", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserConfigMetadataRe" +
            "sponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUserConfigMetadataAsync(string configXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetEventSources", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetEventSourcesResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetEventSourcesMDMExcep" +
            "tionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetEventSources(int eventSourceId, string eventSourceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetEventSources", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetEventSourcesResponse" +
            "")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetEventSourcesAsync(int eventSourceId, string eventSourceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetEventSubscribers", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetEventSubscribersResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetEventSubscribersMDME" +
            "xceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetEventSubscribers(int eventSubscriberId, string eventSubscriberName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetEventSubscribers", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetEventSubscribersResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetEventSubscribersAsync(int eventSubscriberId, string eventSubscriberName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetApplicationConfigTyp" +
            "es", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetApplicationConfigTyp" +
            "esResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetApplicationConfigTyp" +
            "esMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetApplicationConfigTypes(int applicationConfigTypeId, string applicationConfigTypeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetApplicationConfigTyp" +
            "es", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetApplicationConfigTyp" +
            "esResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetApplicationConfigTypesAsync(int applicationConfigTypeId, string applicationConfigTypeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMatchingRuleSets", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMatchingRuleSetsResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMatchingRuleSetsMDME" +
            "xceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetMatchingRuleSets(int orgId, int catalogId, int eventSourceId, int eventSubscriberId, int securityUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMatchingRuleSets", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMatchingRuleSetsResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetMatchingRuleSetsAsync(int orgId, int catalogId, int eventSourceId, int eventSubscriberId, int securityUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetViewContext", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetViewContextResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetViewContextMDMExcept" +
            "ionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetViewContext(int viewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetViewContext", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetViewContextResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetViewContextAsync(int viewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetViewContextDetail", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetViewContextDetailRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetViewContextDetailMDM" +
            "ExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataSet GetViewContextDetail(int contextId, string loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetViewContextDetail", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetViewContextDetailRes" +
            "ponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetViewContextDetailAsync(int contextId, string loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/CreateServicesJob", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/CreateServicesJobRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/CreateServicesJobMDMExc" +
            "eptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string CreateServicesJob(string xml, string userId, int serviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/CreateServicesJob", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/CreateServicesJobRespon" +
            "se")]
        System.Threading.Tasks.Task<string> CreateServicesJobAsync(string xml, string userId, int serviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRSPLMatchingStatus", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRSPLMatchingStatusRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRSPLMatchingStatusMD" +
            "MExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetRSPLMatchingStatus(string cNodes, int catalogId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRSPLMatchingStatus", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRSPLMatchingStatusRe" +
            "sponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetRSPLMatchingStatusAsync(string cNodes, int catalogId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMatchedCnodes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMatchedCnodesRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMatchedCnodesMDMExce" +
            "ptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetMatchedCnodes(string nodeName, string dataXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMatchedCnodes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetMatchedCnodesRespons" +
            "e")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetMatchedCnodesAsync(string nodeName, string dataXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractBulkOperationAtt" +
            "ributeMetaData", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractBulkOperationAtt" +
            "ributeMetaDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractBulkOperationAtt" +
            "ributeMetaDataMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string ExtractBulkOperationAttributeMetaData(string targetUserLogin, string userLogin, string inputDataMode, string selectedNodeTypes, string txtXML, bool bitUseDraftTax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractBulkOperationAtt" +
            "ributeMetaData", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ExtractBulkOperationAtt" +
            "ributeMetaDataResponse")]
        System.Threading.Tasks.Task<string> ExtractBulkOperationAttributeMetaDataAsync(string targetUserLogin, string userLogin, string inputDataMode, string selectedNodeTypes, string txtXML, bool bitUseDraftTax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllLocales", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllLocalesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllLocalesMDMExcepti" +
            "onDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetAllLocales();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllLocales", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllLocalesResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllLocalesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllCategoriesByHiera" +
            "rchy", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllCategoriesByHiera" +
            "rchyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllCategoriesByHiera" +
            "rchyMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity> GetAllCategoriesByHierarchy(int localeId, int taxonomyId, string searchParameter, int countTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllCategoriesByHiera" +
            "rchy", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllCategoriesByHiera" +
            "rchyResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity>> GetAllCategoriesByHierarchyAsync(int localeId, int taxonomyId, string searchParameter, int countTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAll", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllMDMExceptionDetai" +
            "lsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Collections.ObjectModel.Collection<MDM.BusinessObjects.TimeZone> GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAll", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.TimeZone>> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUnitsXML", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUnitsXMLResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUnitsXMLMDMException" +
            "DetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetUnitsXML();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUnitsXML", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUnitsXMLResponse")]
        System.Threading.Tasks.Task<string> GetUnitsXMLAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetEntityRelationshipDe" +
            "tails", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetEntityRelationshipDe" +
            "tailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetEntityRelationshipDe" +
            "tailsMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetEntityRelationshipDetails(long entityId, MDM.BusinessObjects.EntityContext entityContext, MDM.BusinessObjects.CallerContext callerContext, bool publishEvents, bool applyAVS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetEntityRelationshipDe" +
            "tails", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetEntityRelationshipDe" +
            "tailsResponse")]
        System.Threading.Tasks.Task<string> GetEntityRelationshipDetailsAsync(long entityId, MDM.BusinessObjects.EntityContext entityContext, MDM.BusinessObjects.CallerContext callerContext, bool publishEvents, bool applyAVS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRoleMenus", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRoleMenusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRoleMenusMDMExceptio" +
            "nDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetRoleMenus(int securityRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRoleMenus", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRoleMenusResponse")]
        System.Threading.Tasks.Task<string> GetRoleMenusAsync(int securityRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUsers", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUsersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUsersMDMExceptionDet" +
            "ailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetUsers(int securityUser, int userType, int countFrom, int countTo, string vchrSortColumn, string vchrSearchColumn, string vchrSearchParameter, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUsers", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUsersResponse")]
        System.Threading.Tasks.Task<string> GetUsersAsync(int securityUser, int userType, int countFrom, int countTo, string vchrSortColumn, string vchrSearchColumn, string vchrSearchParameter, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUsersWithRoles", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUsersWithRolesRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUsersWithRolesMDMExc" +
            "eptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetUsersWithRoles(int securityUser, int countFrom, int countTo, string vchrSearchColumn, string vchrSearchParameter, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUsersWithRoles", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUsersWithRolesRespon" +
            "se")]
        System.Threading.Tasks.Task<string> GetUsersWithRolesAsync(int securityUser, int countFrom, int countTo, string vchrSearchColumn, string vchrSearchParameter, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessUsers", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessUsersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessUsersMDMExceptio" +
            "nDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        bool ProcessUsers(string txtXML, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessUsers", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessUsersResponse")]
        System.Threading.Tasks.Task<bool> ProcessUsersAsync(string txtXML, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRoles", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRolesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRolesMDMExceptionDet" +
            "ailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetRoles(int securityRole, int userType, string chrGetPermissionSetOnly, int intCountFrom, int intCountTo, string vchrSortColumn, string vchrSearchColumn, string vchrSearchParameter, string vchrUserLogin, bool bitDisplaySystemRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRoles", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRolesResponse")]
        System.Threading.Tasks.Task<string> GetRolesAsync(int securityRole, int userType, string chrGetPermissionSetOnly, int intCountFrom, int intCountTo, string vchrSortColumn, string vchrSearchColumn, string vchrSearchParameter, string vchrUserLogin, bool bitDisplaySystemRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRolesWithUsers", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRolesWithUsersRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRolesWithUsersMDMExc" +
            "eptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetRolesWithUsers(int pkSecurityRole, string chrGetPermissionSetOnly, int intCountFrom, int intCountTo, string vchrSearchColumn, string vchrSearchParameter, string vchrUserLogin, bool bitDisplaySystemRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRolesWithUsers", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetRolesWithUsersRespon" +
            "se")]
        System.Threading.Tasks.Task<string> GetRolesWithUsersAsync(int pkSecurityRole, string chrGetPermissionSetOnly, int intCountFrom, int intCountTo, string vchrSearchColumn, string vchrSearchParameter, string vchrUserLogin, bool bitDisplaySystemRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRoles", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRolesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRolesMDMExceptio" +
            "nDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable ProcessRoles(string txtXML, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRoles", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRolesResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> ProcessRolesAsync(string txtXML, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRoleMenus", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRoleMenusRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRoleMenusMDMExce" +
            "ptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        bool ProcessRoleMenus(string txtXML, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRoleMenus", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessRoleMenusRespons" +
            "e")]
        System.Threading.Tasks.Task<bool> ProcessRoleMenusAsync(string txtXML, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetObjectTypeAction", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetObjectTypeActionResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetObjectTypeActionMDME" +
            "xceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetObjectTypeAction();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetObjectTypeAction", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetObjectTypeActionResp" +
            "onse")]
        System.Threading.Tasks.Task<string> GetObjectTypeActionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetHierarchyAction", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetHierarchyActionRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetHierarchyActionMDMEx" +
            "ceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetHierarchyAction();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetHierarchyAction", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetHierarchyActionRespo" +
            "nse")]
        System.Threading.Tasks.Task<string> GetHierarchyActionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetPermissions", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetPermissionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetPermissionsMDMExcept" +
            "ionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetPermissions(int securityRole, string chrPermissionSet, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetPermissions", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetPermissionsResponse")]
        System.Threading.Tasks.Task<string> GetPermissionsAsync(int securityRole, string chrPermissionSet, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessPermissions", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessPermissionsRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessPermissionsMDMEx" +
            "ceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        bool ProcessPermissions(string txtXML, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessPermissions", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessPermissionsRespo" +
            "nse")]
        System.Threading.Tasks.Task<bool> ProcessPermissionsAsync(string txtXML, string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllOrganizationsAndC" +
            "atalogs", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllOrganizationsAndC" +
            "atalogsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllOrganizationsAndC" +
            "atalogsMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetAllOrganizationsAndCatalogs(string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllOrganizationsAndC" +
            "atalogs", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllOrganizationsAndC" +
            "atalogsResponse")]
        System.Threading.Tasks.Task<string> GetAllOrganizationsAndCatalogsAsync(string vchrUserLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/IsSystemUser", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/IsSystemUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/IsSystemUserMDMExceptio" +
            "nDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string IsSystemUser(string nvchrUserLogin, [System.ServiceModel.MessageParameterAttribute(Name="isSystemUser")] string isSystemUser1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/IsSystemUser", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/IsSystemUserResponse")]
        System.Threading.Tasks.Task<string> IsSystemUserAsync(string nvchrUserLogin, string isSystemUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/HasPermission", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/HasPermissionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/HasPermissionMDMExcepti" +
            "onDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        bool HasPermission(string vchrUserLogin, string objectTypeSN, string actionSN, string parentObjectTypeSN, int orgId, int catalogId, long categoryCNode, long componentCNode, int attribute, int relationship, bool bitForDraft, bool bitHasPermission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/HasPermission", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/HasPermissionResponse")]
        System.Threading.Tasks.Task<bool> HasPermissionAsync(string vchrUserLogin, string objectTypeSN, string actionSN, string parentObjectTypeSN, int orgId, int catalogId, long categoryCNode, long componentCNode, int attribute, int relationship, bool bitForDraft, bool bitHasPermission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserVisibleOrgs", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserVisibleOrgsRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserVisibleOrgsMDMEx" +
            "ceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetUserVisibleOrgs(string targetUserLogin, string userLogin, int localeId, int intCountFrom, int intCountTo, string sortColumn, string searchColumn, string searchParameter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserVisibleOrgs", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserVisibleOrgsRespo" +
            "nse")]
        System.Threading.Tasks.Task<string> GetUserVisibleOrgsAsync(string targetUserLogin, string userLogin, int localeId, int intCountFrom, int intCountTo, string sortColumn, string searchColumn, string searchParameter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgsWithPermissions", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgsWithPermissionsR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgsWithPermissionsM" +
            "DMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetOrgsWithPermissions(string targetUserLogin, string userLogin, int localeId, int intCountFrom, int intCountTo, string sortColumn, string searchColumn, string searchParameter, int orgParentId, int orgClassificationId, string catalogObjectType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgsWithPermissions", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgsWithPermissionsR" +
            "esponse")]
        System.Threading.Tasks.Task<string> GetOrgsWithPermissionsAsync(string targetUserLogin, string userLogin, int localeId, int intCountFrom, int intCountTo, string sortColumn, string searchColumn, string searchParameter, int orgParentId, int orgClassificationId, string catalogObjectType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgsByOrgClassificat" +
            "ion", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgsByOrgClassificat" +
            "ionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgsByOrgClassificat" +
            "ionMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetOrgsByOrgClassification(string targetUserLogin, string userLogin, int localeId, int intCountFrom, int intCountTo, string sortColumn, string searchColumn, string searchParameter, int orgClassificationId, string catalogObjectType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgsByOrgClassificat" +
            "ion", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgsByOrgClassificat" +
            "ionResponse")]
        System.Threading.Tasks.Task<string> GetOrgsByOrgClassificationAsync(string targetUserLogin, string userLogin, int localeId, int intCountFrom, int intCountTo, string sortColumn, string searchColumn, string searchParameter, int orgClassificationId, string catalogObjectType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllOrgTypes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllOrgTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllOrgTypesMDMExcept" +
            "ionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetAllOrgTypes(int orgTypeId, int intCountFrom, int intCountTo, string sortColumn, string searchColumn, string searchParameter, string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllOrgTypes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllOrgTypesResponse")]
        System.Threading.Tasks.Task<string> GetAllOrgTypesAsync(int orgTypeId, int intCountFrom, int intCountTo, string sortColumn, string searchColumn, string searchParameter, string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgTypes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgTypesMDMException" +
            "DetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetOrgTypes(int orgTypeId, int intCountFrom, int intCountTo, string sortColumn, string searchColumn, string searchParameter, string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgTypes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgTypesResponse")]
        System.Threading.Tasks.Task<string> GetOrgTypesAsync(int orgTypeId, int intCountFrom, int intCountTo, string sortColumn, string searchColumn, string searchParameter, string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessOrgTypes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessOrgTypesResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessOrgTypesMDMExcep" +
            "tionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        bool ProcessOrgTypes(string txtXML, string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessOrgTypes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessOrgTypesResponse" +
            "")]
        System.Threading.Tasks.Task<bool> ProcessOrgTypesAsync(string txtXML, string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllOrgHierarchies", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllOrgHierarchiesRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllOrgHierarchiesMDM" +
            "ExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetAllOrgHierarchies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllOrgHierarchies", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllOrgHierarchiesRes" +
            "ponse")]
        System.Threading.Tasks.Task<string> GetAllOrgHierarchiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgsWithLocales", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgsWithLocalesRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgsWithLocalesMDMEx" +
            "ceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetOrgsWithLocales(int orgClassificationId, int localeId, string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgsWithLocales", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgsWithLocalesRespo" +
            "nse")]
        System.Threading.Tasks.Task<string> GetOrgsWithLocalesAsync(int orgClassificationId, int localeId, string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessOrgLocales", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessOrgLocalesRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessOrgLocalesMDMExc" +
            "eptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        bool ProcessOrgLocales(string txtXML, string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessOrgLocales", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessOrgLocalesRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> ProcessOrgLocalesAsync(string txtXML, string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgsWithPermissionsO" +
            "rg", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgsWithPermissionsO" +
            "rgResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgsWithPermissionsO" +
            "rgMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetOrgsWithPermissionsOrg(string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgsWithPermissionsO" +
            "rg", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgsWithPermissionsO" +
            "rgResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetOrgsWithPermissionsOrgAsync(string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgCatalogInfo", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgCatalogInfoRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgCatalogInfoMDMExc" +
            "eptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetOrgCatalogInfo(int orgId, int catalogId, string findWhat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgCatalogInfo", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetOrgCatalogInfoRespon" +
            "se")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetOrgCatalogInfoAsync(int orgId, int catalogId, string findWhat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDetails", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDetailsResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDetailsMDME" +
            "xceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetAttributeDetails(int attributeId, string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDetails", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDetailsResp" +
            "onse")]
        System.Threading.Tasks.Task<string> GetAttributeDetailsAsync(int attributeId, string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllAttributes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllAttributesRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllAttributesMDMExce" +
            "ptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetAllAttributes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllAttributes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAllAttributesRespons" +
            "e")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllAttributesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCNodeAttributeValue", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCNodeAttributeValueR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCNodeAttributeValueM" +
            "DMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetCNodeAttributeValue(long cNodeId, int catalogId, int attributeId, int localeId, string userName, int returnAttrType, bool showAtCreation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCNodeAttributeValue", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCNodeAttributeValueR" +
            "esponse")]
        System.Threading.Tasks.Task<string> GetCNodeAttributeValueAsync(long cNodeId, int catalogId, int attributeId, int localeId, string userName, int returnAttrType, bool showAtCreation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeGroupsXML", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeGroupsXMLRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeGroupsXMLMD" +
            "MExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetAttributeGroupsXML();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeGroupsXML", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeGroupsXMLRe" +
            "sponse")]
        System.Threading.Tasks.Task<string> GetAttributeGroupsXMLAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechSpecsByGroup", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechSpecsByGroupResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechSpecsByGroupMDME" +
            "xceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetTechSpecsByGroup(int attrParentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechSpecsByGroup", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetTechSpecsByGroupResp" +
            "onse")]
        System.Threading.Tasks.Task<string> GetTechSpecsByGroupAsync(int attrParentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ComplexMetadata_GetDT", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ComplexMetadata_GetDTRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ComplexMetadata_GetDTMD" +
            "MExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataSet ComplexMetadata_GetDT(string inputStr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ComplexMetadata_GetDT", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ComplexMetadata_GetDTRe" +
            "sponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> ComplexMetadata_GetDTAsync(string inputStr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeChildrenByT" +
            "ype", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeChildrenByT" +
            "ypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeChildrenByT" +
            "ypeMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetAttributeChildrenByType(int attributeTypeId, string attributeId, string userId, int orgId, int catalogId, long cNodeId, string viewPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeChildrenByT" +
            "ype", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeChildrenByT" +
            "ypeResponse")]
        System.Threading.Tasks.Task<string> GetAttributeChildrenByTypeAsync(int attributeTypeId, string attributeId, string userId, int orgId, int catalogId, long cNodeId, string viewPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSysObjectAttributesX" +
            "ML", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSysObjectAttributesX" +
            "MLResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSysObjectAttributesX" +
            "MLMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetSysObjectAttributesXML(string objectType, int objectId, int localeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSysObjectAttributesX" +
            "ML", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetSysObjectAttributesX" +
            "MLResponse")]
        System.Threading.Tasks.Task<string> GetSysObjectAttributesXMLAsync(string objectType, int objectId, int localeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessObjectAttributes" +
            "", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessObjectAttributes" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessObjectAttributes" +
            "MDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        bool ProcessObjectAttributes(string attributeXML, int objectId, string objectType, int localeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessObjectAttributes" +
            "", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ProcessObjectAttributes" +
            "Response")]
        System.Threading.Tasks.Task<bool> ProcessObjectAttributesAsync(string attributeXML, int objectId, string objectType, int localeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/UniqueComplxAttrid", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/UniqueComplxAttridRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/UniqueComplxAttridMDMEx" +
            "ceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataSet UniqueComplxAttrid();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/UniqueComplxAttrid", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/UniqueComplxAttridRespo" +
            "nse")]
        System.Threading.Tasks.Task<System.Data.DataSet> UniqueComplxAttridAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeConfig", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeConfigRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeConfigMDMEx" +
            "ceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetAttributeConfig(string tableName, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeConfig", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeConfigRespo" +
            "nse")]
        System.Threading.Tasks.Task<string> GetAttributeConfigAsync(string tableName, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeUsage", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeUsageRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeUsageMDMExc" +
            "eptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetAttributeUsage(int attributeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeUsage", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeUsageRespon" +
            "se")]
        System.Threading.Tasks.Task<string> GetAttributeUsageAsync(int attributeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeGroupChildr" +
            "en", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeGroupChildr" +
            "enResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeGroupChildr" +
            "enMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetAttributeGroupChildren(System.Nullable<int> parentId, int localeId, string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeGroupChildr" +
            "en", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeGroupChildr" +
            "enResponse")]
        System.Threading.Tasks.Task<string> GetAttributeGroupChildrenAsync(System.Nullable<int> parentId, int localeId, string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributesMDMExcepti" +
            "onDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetAttributes(int parentId, int countFrom, int countTo, string searchParameter, string searchColumn, string sortColumn, int localeId, bool bitUnusedOnly, string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributesResponse")]
        System.Threading.Tasks.Task<string> GetAttributesAsync(int parentId, int countFrom, int countTo, string searchParameter, string searchColumn, string sortColumn, int localeId, bool bitUnusedOnly, string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNodeAttributeDetails" +
            "", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNodeAttributeDetails" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNodeAttributeDetails" +
            "MDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetNodeAttributeDetails(int attributeId, int cNodeId, string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNodeAttributeDetails" +
            "", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetNodeAttributeDetails" +
            "Response")]
        System.Threading.Tasks.Task<string> GetNodeAttributeDetailsAsync(int attributeId, int cNodeId, string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDataTypeMap" +
            "", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDataTypeMap" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDataTypeMap" +
            "MDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetAttributeDataTypeMap(string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDataTypeMap" +
            "", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDataTypeMap" +
            "Response")]
        System.Threading.Tasks.Task<string> GetAttributeDataTypeMapAsync(string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDataTypes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDataTypesRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDataTypesMD" +
            "MExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetAttributeDataTypes(string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDataTypes", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDataTypesRe" +
            "sponse")]
        System.Threading.Tasks.Task<string> GetAttributeDataTypesAsync(string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDisplayType" +
            "Map", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDisplayType" +
            "MapResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDisplayType" +
            "MapMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetAttributeDisplayTypeMap(string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDisplayType" +
            "Map", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDisplayType" +
            "MapResponse")]
        System.Threading.Tasks.Task<string> GetAttributeDisplayTypeMapAsync(string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDisplayType" +
            "s", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDisplayType" +
            "sResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDisplayType" +
            "sMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetAttributeDisplayTypes(string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDisplayType" +
            "s", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDisplayType" +
            "sResponse")]
        System.Threading.Tasks.Task<string> GetAttributeDisplayTypesAsync(string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetFormattersXML", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetFormattersXMLRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetFormattersXMLMDMExce" +
            "ptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetFormattersXML();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetFormattersXML", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetFormattersXMLRespons" +
            "e")]
        System.Threading.Tasks.Task<string> GetFormattersXMLAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/UpdateTargetAttributeVa" +
            "lue", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/UpdateTargetAttributeVa" +
            "lueResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/UpdateTargetAttributeVa" +
            "lueMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string UpdateTargetAttributeValue(string txtXML, int targetAttributeId, int maxAllowableChars, string inTestPage, string retAttrValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/UpdateTargetAttributeVa" +
            "lue", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/UpdateTargetAttributeVa" +
            "lueResponse")]
        System.Threading.Tasks.Task<string> UpdateTargetAttributeValueAsync(string txtXML, int targetAttributeId, int maxAllowableChars, string inTestPage, string retAttrValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/getAttributesXml", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/getAttributesXmlRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/getAttributesXmlMDMExce" +
            "ptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string getAttributesXml(int intGroupId, string searchValue, int level, bool getComplexChildren, int localeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/getAttributesXml", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/getAttributesXmlRespons" +
            "e")]
        System.Threading.Tasks.Task<string> getAttributesXmlAsync(int intGroupId, string searchValue, int level, bool getComplexChildren, int localeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ComplexMetadataRollBack" +
            "", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ComplexMetadataRollBack" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ComplexMetadataRollBack" +
            "MDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        bool ComplexMetadataRollBack(int versionId, int cNodeId, int attributeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ComplexMetadataRollBack" +
            "", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ComplexMetadataRollBack" +
            "Response")]
        System.Threading.Tasks.Task<bool> ComplexMetadataRollBackAsync(int versionId, int cNodeId, int attributeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDataForLook" +
            "upControl", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDataForLook" +
            "upControlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDataForLook" +
            "upControlMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataSet GetAttributeDataForLookupControl(string complexTableName, string lookUpColumnName, int isCheckingOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDataForLook" +
            "upControl", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetAttributeDataForLook" +
            "upControlResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAttributeDataForLookupControlAsync(string complexTableName, string lookUpColumnName, int isCheckingOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCategoriesFromRuleXM" +
            "L", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCategoriesFromRuleXM" +
            "LResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCategoriesFromRuleXM" +
            "LMDMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        string GetCategoriesFromRuleXML(string txtRulesXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCategoriesFromRuleXM" +
            "L", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetCategoriesFromRuleXM" +
            "LResponse")]
        System.Threading.Tasks.Task<string> GetCategoriesFromRuleXMLAsync(string txtRulesXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/QuickSearchByShortName", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/QuickSearchByShortNameR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/QuickSearchByShortNameM" +
            "DMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable QuickSearchByShortName(int catalogId, string searchValue, int cnodeId, string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/QuickSearchByShortName", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/QuickSearchByShortNameR" +
            "esponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> QuickSearchByShortNameAsync(int catalogId, string searchValue, int cnodeId, string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetObject", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetObjectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetObjectMDMExceptionDe" +
            "tailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataSet GetObject(string objectValue, int objectId, string searchValue, int topRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetObject", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetObjectResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetObjectAsync(string objectValue, int objectId, string searchValue, int topRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ObjectGet", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ObjectGetResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ObjectGetMDMExceptionDe" +
            "tailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable ObjectGet(string objectValue, int objectId, string searchValue, int topRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ObjectGet", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ObjectGetResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> ObjectGetAsync(string objectValue, int objectId, string searchValue, int topRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetStatusesByType", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetStatusesByTypeRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetStatusesByTypeMDMExc" +
            "eptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetStatusesByType(int statusType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetStatusesByType", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetStatusesByTypeRespon" +
            "se")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetStatusesByTypeAsync(int statusType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetItemMetaDataActions", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetItemMetaDataActionsR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetItemMetaDataActionsM" +
            "DMExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetItemMetaDataActions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetItemMetaDataActions", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetItemMetaDataActionsR" +
            "esponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetItemMetaDataActionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/LookupSearch", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/LookupSearchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/LookupSearchMDMExceptio" +
            "nDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable LookupSearch(string objectValue, string tableName, string searchValue, int localeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/LookupSearch", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/LookupSearchResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> LookupSearchAsync(string objectValue, string tableName, string searchValue, int localeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/LookupRuleDataSearch", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/LookupRuleDataSearchRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/LookupRuleDataSearchMDM" +
            "ExceptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable LookupRuleDataSearch(string objectValue, string tableName, string searchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/LookupRuleDataSearch", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/LookupRuleDataSearchRes" +
            "ponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> LookupRuleDataSearchAsync(string objectValue, string tableName, string searchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserConfig", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserConfigResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserConfigMDMExcepti" +
            "onDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetUserConfig(int securityUserId, int orgId, int userConfigTypeId, string userConfigShortName, bool getFromAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserConfig", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetUserConfigResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetUserConfigAsync(int securityUserId, int orgId, int userConfigTypeId, string userConfigShortName, bool getFromAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ObjectDependency", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ObjectDependencyRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ObjectDependencyMDMExce" +
            "ptionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable ObjectDependency(string objectName, int objectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/ObjectDependency", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/ObjectDependencyRespons" +
            "e")]
        System.Threading.Tasks.Task<System.Data.DataTable> ObjectDependencyAsync(string objectName, int objectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetFileDetails", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetFileDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MDM.BusinessObjects.MDMExceptionDetails), Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetFileDetailsMDMExcept" +
            "ionDetailsFault", Name="MDMExceptionDetails", Namespace="http://mdmobjects.riversand.com/")]
        System.Data.DataTable GetFileDetails(int fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcfservices.riversand.com/ILegacyDataAccessService/GetFileDetails", ReplyAction="http://wcfservices.riversand.com/ILegacyDataAccessService/GetFileDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetFileDetailsAsync(int fileId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILegacyDataAccessServiceChannel : MDM.Services.LegacyDataAccessServiceClient.ILegacyDataAccessService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LegacyDataAccessServiceClient : System.ServiceModel.ClientBase<MDM.Services.LegacyDataAccessServiceClient.ILegacyDataAccessService>, MDM.Services.LegacyDataAccessServiceClient.ILegacyDataAccessService {
        
        public LegacyDataAccessServiceClient() {
        }
        
        public LegacyDataAccessServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LegacyDataAccessServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LegacyDataAccessServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LegacyDataAccessServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable GetFile(int fileId, string chrDetailsOnly) {
            return base.Channel.GetFile(fileId, chrDetailsOnly);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetFileAsync(int fileId, string chrDetailsOnly) {
            return base.Channel.GetFileAsync(fileId, chrDetailsOnly);
        }
        
        public System.Collections.ObjectModel.Collection<MDM.Core.UserAction> GetImportPermission() {
            return base.Channel.GetImportPermission();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.Core.UserAction>> GetImportPermissionAsync() {
            return base.Channel.GetImportPermissionAsync();
        }
        
        public int SaveProfile(string name, string domain, string textProfile, string fileType, int profileId, int orgId, int catalogId, string userId, string programName) {
            return base.Channel.SaveProfile(name, domain, textProfile, fileType, profileId, orgId, catalogId, userId, programName);
        }
        
        public System.Threading.Tasks.Task<int> SaveProfileAsync(string name, string domain, string textProfile, string fileType, int profileId, int orgId, int catalogId, string userId, string programName) {
            return base.Channel.SaveProfileAsync(name, domain, textProfile, fileType, profileId, orgId, catalogId, userId, programName);
        }
        
        public int DeleteProfile(string profileId, string domain) {
            return base.Channel.DeleteProfile(profileId, domain);
        }
        
        public System.Threading.Tasks.Task<int> DeleteProfileAsync(string profileId, string domain) {
            return base.Channel.DeleteProfileAsync(profileId, domain);
        }
        
        public System.Data.DataTable GetSubscribers(int subscriberId, string subscriberName, string searchStr, bool inBound, bool outBound) {
            return base.Channel.GetSubscribers(subscriberId, subscriberName, searchStr, inBound, outBound);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetSubscribersAsync(int subscriberId, string subscriberName, string searchStr, bool inBound, bool outBound) {
            return base.Channel.GetSubscribersAsync(subscriberId, subscriberName, searchStr, inBound, outBound);
        }
        
        public System.Data.DataTable GetProfiles(string user, int profilesId, string profileName, int profileTypeId, string typeShortName, string searchStr, bool bitIncludeData) {
            return base.Channel.GetProfiles(user, profilesId, profileName, profileTypeId, typeShortName, searchStr, bitIncludeData);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetProfilesAsync(string user, int profilesId, string profileName, int profileTypeId, string typeShortName, string searchStr, bool bitIncludeData) {
            return base.Channel.GetProfilesAsync(user, profilesId, profileName, profileTypeId, typeShortName, searchStr, bitIncludeData);
        }
        
        public System.Data.DataTable GetChannels() {
            return base.Channel.GetChannels();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetChannelsAsync() {
            return base.Channel.GetChannelsAsync();
        }
        
        public System.Data.DataTable GetCatalogCharacteristicTemplate(int catalogId, int cNodeId, int localeId, bool includeComplexAttrChildren) {
            return base.Channel.GetCatalogCharacteristicTemplate(catalogId, cNodeId, localeId, includeComplexAttrChildren);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetCatalogCharacteristicTemplateAsync(int catalogId, int cNodeId, int localeId, bool includeComplexAttrChildren) {
            return base.Channel.GetCatalogCharacteristicTemplateAsync(catalogId, cNodeId, localeId, includeComplexAttrChildren);
        }
        
        public string GetRelTypesXML() {
            return base.Channel.GetRelTypesXML();
        }
        
        public System.Threading.Tasks.Task<string> GetRelTypesXMLAsync() {
            return base.Channel.GetRelTypesXMLAsync();
        }
        
        public System.Data.DataSet GetCatalogNodeTypeAttr(int catalogId, int nodeTypeId, int localeId) {
            return base.Channel.GetCatalogNodeTypeAttr(catalogId, nodeTypeId, localeId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCatalogNodeTypeAttrAsync(int catalogId, int nodeTypeId, int localeId) {
            return base.Channel.GetCatalogNodeTypeAttrAsync(catalogId, nodeTypeId, localeId);
        }
        
        public System.Data.DataTable GetAttributeRegEx(int attribute) {
            return base.Channel.GetAttributeRegEx(attribute);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAttributeRegExAsync(int attribute) {
            return base.Channel.GetAttributeRegExAsync(attribute);
        }
        
        public System.Data.DataTable GetTechSpecsMap(int intCategoryId, int intLocaleId) {
            return base.Channel.GetTechSpecsMap(intCategoryId, intLocaleId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetTechSpecsMapAsync(int intCategoryId, int intLocaleId) {
            return base.Channel.GetTechSpecsMapAsync(intCategoryId, intLocaleId);
        }
        
        public System.Data.DataTable GetTaxonomyByCatalog(int catalogId) {
            return base.Channel.GetTaxonomyByCatalog(catalogId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetTaxonomyByCatalogAsync(int catalogId) {
            return base.Channel.GetTaxonomyByCatalogAsync(catalogId);
        }
        
        public System.Data.DataTable EstimateChanges(string changeProgram, string cNodeList) {
            return base.Channel.EstimateChanges(changeProgram, cNodeList);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> EstimateChangesAsync(string changeProgram, string cNodeList) {
            return base.Channel.EstimateChangesAsync(changeProgram, cNodeList);
        }
        
        public string GetCatalogNodeTypeAttrbiuteAsXml(int organizationId, int catalogId, string nodeType, int branchLevel, bool includeComplexAttrChildren, bool excludeableSearchable, System.Collections.ObjectModel.Collection<MDM.Core.LocaleEnum> locales, MDM.Core.LocaleEnum systemDataLocale) {
            return base.Channel.GetCatalogNodeTypeAttrbiuteAsXml(organizationId, catalogId, nodeType, branchLevel, includeComplexAttrChildren, excludeableSearchable, locales, systemDataLocale);
        }
        
        public System.Threading.Tasks.Task<string> GetCatalogNodeTypeAttrbiuteAsXmlAsync(int organizationId, int catalogId, string nodeType, int branchLevel, bool includeComplexAttrChildren, bool excludeableSearchable, System.Collections.ObjectModel.Collection<MDM.Core.LocaleEnum> locales, MDM.Core.LocaleEnum systemDataLocale) {
            return base.Channel.GetCatalogNodeTypeAttrbiuteAsXmlAsync(organizationId, catalogId, nodeType, branchLevel, includeComplexAttrChildren, excludeableSearchable, locales, systemDataLocale);
        }
        
        public System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel> GetAllCommonAttributes(int localeId) {
            return base.Channel.GetAllCommonAttributes(localeId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel>> GetAllCommonAttributesAsync(int localeId) {
            return base.Channel.GetAllCommonAttributesAsync(localeId);
        }
        
        public System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel> GetAllTechnicalAttributes(int localeId) {
            return base.Channel.GetAllTechnicalAttributes(localeId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel>> GetAllTechnicalAttributesAsync(int localeId) {
            return base.Channel.GetAllTechnicalAttributesAsync(localeId);
        }
        
        public System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel> GetCommonAttributesByContainerAndEntityType(int catalogId, int entityTypeId, int localeId) {
            return base.Channel.GetCommonAttributesByContainerAndEntityType(catalogId, entityTypeId, localeId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel>> GetCommonAttributesByContainerAndEntityTypeAsync(int catalogId, int entityTypeId, int localeId) {
            return base.Channel.GetCommonAttributesByContainerAndEntityTypeAsync(catalogId, entityTypeId, localeId);
        }
        
        public System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel> GetTechAttributesByTaxonomyAndCategory(int categoryId, int taxonomyId, int localeId) {
            return base.Channel.GetTechAttributesByTaxonomyAndCategory(categoryId, taxonomyId, localeId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel>> GetTechAttributesByTaxonomyAndCategoryAsync(int categoryId, int taxonomyId, int localeId) {
            return base.Channel.GetTechAttributesByTaxonomyAndCategoryAsync(categoryId, taxonomyId, localeId);
        }
        
        public System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeGroup> GetByAttributeType(int common, int technical, int relationship, System.Collections.ObjectModel.Collection<MDM.Core.LocaleEnum> locales, MDM.Core.LocaleEnum systemLocale) {
            return base.Channel.GetByAttributeType(common, technical, relationship, locales, systemLocale);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeGroup>> GetByAttributeTypeAsync(int common, int technical, int relationship, System.Collections.ObjectModel.Collection<MDM.Core.LocaleEnum> locales, MDM.Core.LocaleEnum systemLocale) {
            return base.Channel.GetByAttributeTypeAsync(common, technical, relationship, locales, systemLocale);
        }
        
        public System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel> GetByAttributeGroup(int attributeGroupId, System.Collections.ObjectModel.Collection<MDM.Core.LocaleEnum> locales) {
            return base.Channel.GetByAttributeGroup(attributeGroupId, locales);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.AttributeModel>> GetByAttributeGroupAsync(int attributeGroupId, System.Collections.ObjectModel.Collection<MDM.Core.LocaleEnum> locales) {
            return base.Channel.GetByAttributeGroupAsync(attributeGroupId, locales);
        }
        
        public System.Data.DataSet SearchEntities(MDM.BusinessObjects.SearchCriteria searchCriteria, MDM.BusinessObjects.SearchContext searchContext, string totalCount, MDM.BusinessObjects.OperationResult searchOperationResult, MDM.BusinessObjects.CallerContext callerContext) {
            return base.Channel.SearchEntities(searchCriteria, searchContext, totalCount, searchOperationResult, callerContext);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchEntitiesAsync(MDM.BusinessObjects.SearchCriteria searchCriteria, MDM.BusinessObjects.SearchContext searchContext, string totalCount, MDM.BusinessObjects.OperationResult searchOperationResult, MDM.BusinessObjects.CallerContext callerContext) {
            return base.Channel.SearchEntitiesAsync(searchCriteria, searchContext, totalCount, searchOperationResult, callerContext);
        }
        
        public System.Collections.Generic.Dictionary<string, object> ExportSubscriberExists(string objectName, string objectType, int objectId, string objectParentName, int objectParentId, bool raiseError, string errorMessage) {
            return base.Channel.ExportSubscriberExists(objectName, objectType, objectId, objectParentName, objectParentId, raiseError, errorMessage);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, object>> ExportSubscriberExistsAsync(string objectName, string objectType, int objectId, string objectParentName, int objectParentId, bool raiseError, string errorMessage) {
            return base.Channel.ExportSubscriberExistsAsync(objectName, objectType, objectId, objectParentName, objectParentId, raiseError, errorMessage);
        }
        
        public string GetAffectedInfo(System.Collections.ObjectModel.Collection<long> entityIds, string attributeIdList, int containerId, int currentDataLocaleId, int systemDataLocaleId) {
            return base.Channel.GetAffectedInfo(entityIds, attributeIdList, containerId, currentDataLocaleId, systemDataLocaleId);
        }
        
        public System.Threading.Tasks.Task<string> GetAffectedInfoAsync(System.Collections.ObjectModel.Collection<long> entityIds, string attributeIdList, int containerId, int currentDataLocaleId, int systemDataLocaleId) {
            return base.Channel.GetAffectedInfoAsync(entityIds, attributeIdList, containerId, currentDataLocaleId, systemDataLocaleId);
        }
        
        public string GetWorkflowStatusXml(string entityIdList, int activityId, string workflowType, int userId) {
            return base.Channel.GetWorkflowStatusXml(entityIdList, activityId, workflowType, userId);
        }
        
        public System.Threading.Tasks.Task<string> GetWorkflowStatusXmlAsync(string entityIdList, int activityId, string workflowType, int userId) {
            return base.Channel.GetWorkflowStatusXmlAsync(entityIdList, activityId, workflowType, userId);
        }
        
        public System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity> GetMDLsByIdList(string entityIdList, long categoryId, int containerId) {
            return base.Channel.GetMDLsByIdList(entityIdList, categoryId, containerId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity>> GetMDLsByIdListAsync(string entityIdList, long categoryId, int containerId) {
            return base.Channel.GetMDLsByIdListAsync(entityIdList, categoryId, containerId);
        }
        
        public System.Collections.Generic.Dictionary<string, object> GetImpactedEntities(int localeId, long cnodeId, int catalogId, int attributeId, int toTotalImpacted, int totalAffected, int maxReturnCount) {
            return base.Channel.GetImpactedEntities(localeId, cnodeId, catalogId, attributeId, toTotalImpacted, totalAffected, maxReturnCount);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, object>> GetImpactedEntitiesAsync(int localeId, long cnodeId, int catalogId, int attributeId, int toTotalImpacted, int totalAffected, int maxReturnCount) {
            return base.Channel.GetImpactedEntitiesAsync(localeId, cnodeId, catalogId, attributeId, toTotalImpacted, totalAffected, maxReturnCount);
        }
        
        public string GetParent(long cnodeId, long cnodeParentId, int containerId, bool bitUseDraftTax, int dataLocale) {
            return base.Channel.GetParent(cnodeId, cnodeParentId, containerId, bitUseDraftTax, dataLocale);
        }
        
        public System.Threading.Tasks.Task<string> GetParentAsync(long cnodeId, long cnodeParentId, int containerId, bool bitUseDraftTax, int dataLocale) {
            return base.Channel.GetParentAsync(cnodeId, cnodeParentId, containerId, bitUseDraftTax, dataLocale);
        }
        
        public string GetAttributeValuesForMDLs(int extSystemId, string inputXML, string coreAttrList, string techAttrList, int localeId, string programName, bool includeInheritedValue, bool computeInheritedValues) {
            return base.Channel.GetAttributeValuesForMDLs(extSystemId, inputXML, coreAttrList, techAttrList, localeId, programName, includeInheritedValue, computeInheritedValues);
        }
        
        public System.Threading.Tasks.Task<string> GetAttributeValuesForMDLsAsync(int extSystemId, string inputXML, string coreAttrList, string techAttrList, int localeId, string programName, bool includeInheritedValue, bool computeInheritedValues) {
            return base.Channel.GetAttributeValuesForMDLsAsync(extSystemId, inputXML, coreAttrList, techAttrList, localeId, programName, includeInheritedValue, computeInheritedValues);
        }
        
        public System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity> GetMDL(long cnodeId, string catalogIdList, string delimiter, bool returnSelf) {
            return base.Channel.GetMDL(cnodeId, catalogIdList, delimiter, returnSelf);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity>> GetMDLAsync(long cnodeId, string catalogIdList, string delimiter, bool returnSelf) {
            return base.Channel.GetMDLAsync(cnodeId, catalogIdList, delimiter, returnSelf);
        }
        
        public System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity> GetParentOPBL(long cnodeId, long cnodeParentId, int containerId, int dataLocale) {
            return base.Channel.GetParentOPBL(cnodeId, cnodeParentId, containerId, dataLocale);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity>> GetParentOPBLAsync(long cnodeId, long cnodeParentId, int containerId, int dataLocale) {
            return base.Channel.GetParentOPBLAsync(cnodeId, cnodeParentId, containerId, dataLocale);
        }
        
        public System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity> GetMDLBasedOnConfig(long cnodeId, string dataConfigXML, string catalogIdList, string delimiter, bool returnSelf) {
            return base.Channel.GetMDLBasedOnConfig(cnodeId, dataConfigXML, catalogIdList, delimiter, returnSelf);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity>> GetMDLBasedOnConfigAsync(long cnodeId, string dataConfigXML, string catalogIdList, string delimiter, bool returnSelf) {
            return base.Channel.GetMDLBasedOnConfigAsync(cnodeId, dataConfigXML, catalogIdList, delimiter, returnSelf);
        }
        
        public System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Workflow.WorkflowActivity> GetWorkflowTasks(long cNodeId, int userId) {
            return base.Channel.GetWorkflowTasks(cNodeId, userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Workflow.WorkflowActivity>> GetWorkflowTasksAsync(long cNodeId, int userId) {
            return base.Channel.GetWorkflowTasksAsync(cNodeId, userId);
        }
        
        public bool Reclassify(string dataXml, string userName, bool isCategoryReclassify) {
            return base.Channel.Reclassify(dataXml, userName, isCategoryReclassify);
        }
        
        public System.Threading.Tasks.Task<bool> ReclassifyAsync(string dataXml, string userName, bool isCategoryReclassify) {
            return base.Channel.ReclassifyAsync(dataXml, userName, isCategoryReclassify);
        }
        
        public bool UpdateUserAction(int jobId, MDM.Core.JobAction jobAction, string jobType, MDM.Core.MDMCenterApplication application) {
            return base.Channel.UpdateUserAction(jobId, jobAction, jobType, application);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserActionAsync(int jobId, MDM.Core.JobAction jobAction, string jobType, MDM.Core.MDMCenterApplication application) {
            return base.Channel.UpdateUserActionAsync(jobId, jobAction, jobType, application);
        }
        
        public string GetChildJobsInXml(int parentJobId, MDM.Core.MDMCenterApplication application) {
            return base.Channel.GetChildJobsInXml(parentJobId, application);
        }
        
        public System.Threading.Tasks.Task<string> GetChildJobsInXmlAsync(int parentJobId, MDM.Core.MDMCenterApplication application) {
            return base.Channel.GetChildJobsInXmlAsync(parentJobId, application);
        }
        
        public System.Tuple<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Jobs.Job>, System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExportProfile>> GetSchedule(int scheduleId, string jobType, MDM.Core.MDMCenterApplication application) {
            return base.Channel.GetSchedule(scheduleId, jobType, application);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Jobs.Job>, System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Exports.ExportProfile>>> GetScheduleAsync(int scheduleId, string jobType, MDM.Core.MDMCenterApplication application) {
            return base.Channel.GetScheduleAsync(scheduleId, jobType, application);
        }
        
        public bool AddSchedule(string scheduleName, string scheduleLongName, string content, bool isEnable, string profiles, string programName, string jobType, MDM.Core.MDMCenterApplication application) {
            return base.Channel.AddSchedule(scheduleName, scheduleLongName, content, isEnable, profiles, programName, jobType, application);
        }
        
        public System.Threading.Tasks.Task<bool> AddScheduleAsync(string scheduleName, string scheduleLongName, string content, bool isEnable, string profiles, string programName, string jobType, MDM.Core.MDMCenterApplication application) {
            return base.Channel.AddScheduleAsync(scheduleName, scheduleLongName, content, isEnable, profiles, programName, jobType, application);
        }
        
        public bool UpdateSchedule(int scheduleId, string scheduleName, string scheduleLongName, string content, bool isEnable, string profiles, string programName, string jobType, MDM.Core.MDMCenterApplication application) {
            return base.Channel.UpdateSchedule(scheduleId, scheduleName, scheduleLongName, content, isEnable, profiles, programName, jobType, application);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateScheduleAsync(int scheduleId, string scheduleName, string scheduleLongName, string content, bool isEnable, string profiles, string programName, string jobType, MDM.Core.MDMCenterApplication application) {
            return base.Channel.UpdateScheduleAsync(scheduleId, scheduleName, scheduleLongName, content, isEnable, profiles, programName, jobType, application);
        }
        
        public System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRule> GetBusinessRulesById(System.Collections.ObjectModel.Collection<int> ruleIds) {
            return base.Channel.GetBusinessRulesById(ruleIds);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRule>> GetBusinessRulesByIdAsync(System.Collections.ObjectModel.Collection<int> ruleIds) {
            return base.Channel.GetBusinessRulesByIdAsync(ruleIds);
        }
        
        public System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRule> GetBusinessRulesByUserId(string loginUser) {
            return base.Channel.GetBusinessRulesByUserId(loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRule>> GetBusinessRulesByUserIdAsync(string loginUser) {
            return base.Channel.GetBusinessRulesByUserIdAsync(loginUser);
        }
        
        public bool ProcessBusinessRules(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRule> businessRules, string loginUser, string programName, string action) {
            return base.Channel.ProcessBusinessRules(businessRules, loginUser, programName, action);
        }
        
        public System.Threading.Tasks.Task<bool> ProcessBusinessRulesAsync(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRule> businessRules, string loginUser, string programName, string action) {
            return base.Channel.ProcessBusinessRulesAsync(businessRules, loginUser, programName, action);
        }
        
        public System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRule> GetBusinessRulesByContext(int eventSourceID, int eventSubscriberID, int loginUserID, int loginUserRole, int orgID, int containerID, int entityTypeID, string businessRuleTypeIDs) {
            return base.Channel.GetBusinessRulesByContext(eventSourceID, eventSubscriberID, loginUserID, loginUserRole, orgID, containerID, entityTypeID, businessRuleTypeIDs);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRule>> GetBusinessRulesByContextAsync(int eventSourceID, int eventSubscriberID, int loginUserID, int loginUserRole, int orgID, int containerID, int entityTypeID, string businessRuleTypeIDs) {
            return base.Channel.GetBusinessRulesByContextAsync(eventSourceID, eventSubscriberID, loginUserID, loginUserRole, orgID, containerID, entityTypeID, businessRuleTypeIDs);
        }
        
        public System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRuleAttributeMapping> GetBusinessRuleAttributeMappingsByRuleId(int businessRuleId) {
            return base.Channel.GetBusinessRuleAttributeMappingsByRuleId(businessRuleId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRuleAttributeMapping>> GetBusinessRuleAttributeMappingsByRuleIdAsync(int businessRuleId) {
            return base.Channel.GetBusinessRuleAttributeMappingsByRuleIdAsync(businessRuleId);
        }
        
        public bool ProcessBusinessRuleMappings(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRuleAttributeMapping> businessRuleAttributeMappings, string ViewId) {
            return base.Channel.ProcessBusinessRuleMappings(businessRuleAttributeMappings, ViewId);
        }
        
        public System.Threading.Tasks.Task<bool> ProcessBusinessRuleMappingsAsync(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRuleAttributeMapping> businessRuleAttributeMappings, string ViewId) {
            return base.Channel.ProcessBusinessRuleMappingsAsync(businessRuleAttributeMappings, ViewId);
        }
        
        public bool ProcessBusinessRuleContext(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRuleSetRule> businessRuleSetRules, string loginUser, string programName, string action) {
            return base.Channel.ProcessBusinessRuleContext(businessRuleSetRules, loginUser, programName, action);
        }
        
        public System.Threading.Tasks.Task<bool> ProcessBusinessRuleContextAsync(System.Collections.ObjectModel.Collection<MDM.BusinessObjects.BusinessRuleSetRule> businessRuleSetRules, string loginUser, string programName, string action) {
            return base.Channel.ProcessBusinessRuleContextAsync(businessRuleSetRules, loginUser, programName, action);
        }
        
        public System.Data.DataTable GetTableStructure(string tableName, bool getFromSysObj) {
            return base.Channel.GetTableStructure(tableName, getFromSysObj);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetTableStructureAsync(string tableName, bool getFromSysObj) {
            return base.Channel.GetTableStructureAsync(tableName, getFromSysObj);
        }
        
        public System.Data.DataTable GetTableTypeTemplate(int TableType) {
            return base.Channel.GetTableTypeTemplate(TableType);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetTableTypeTemplateAsync(int TableType) {
            return base.Channel.GetTableTypeTemplateAsync(TableType);
        }
        
        public System.Data.DataTable GetTableTypes() {
            return base.Channel.GetTableTypes();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetTableTypesAsync() {
            return base.Channel.GetTableTypesAsync();
        }
        
        public System.Data.DataTable GetTableNames(int objectType, string searchString, bool getFromSysObj, bool getAttrCountColumn) {
            return base.Channel.GetTableNames(objectType, searchString, getFromSysObj, getAttrCountColumn);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetTableNamesAsync(int objectType, string searchString, bool getFromSysObj, bool getAttrCountColumn) {
            return base.Channel.GetTableNamesAsync(objectType, searchString, getFromSysObj, getAttrCountColumn);
        }
        
        public System.Data.DataTable GetRefTableData(string tableName, string refColumnName, string refMask, string displayColumns, string sortOrder, string searchColumns) {
            return base.Channel.GetRefTableData(tableName, refColumnName, refMask, displayColumns, sortOrder, searchColumns);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetRefTableDataAsync(string tableName, string refColumnName, string refMask, string displayColumns, string sortOrder, string searchColumns) {
            return base.Channel.GetRefTableDataAsync(tableName, refColumnName, refMask, displayColumns, sortOrder, searchColumns);
        }
        
        public System.Data.DataTable GetNormalizationJobResults(int jobServiceId) {
            return base.Channel.GetNormalizationJobResults(jobServiceId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetNormalizationJobResultsAsync(int jobServiceId) {
            return base.Channel.GetNormalizationJobResultsAsync(jobServiceId);
        }
        
        public System.Data.DataTable GetTranslationMemory(string origLocale, string transLocale, string origText) {
            return base.Channel.GetTranslationMemory(origLocale, transLocale, origText);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetTranslationMemoryAsync(string origLocale, string transLocale, string origText) {
            return base.Channel.GetTranslationMemoryAsync(origLocale, transLocale, origText);
        }
        
        public string GetCNode(int catalogId, long cnodeId, string viewPath) {
            return base.Channel.GetCNode(catalogId, cnodeId, viewPath);
        }
        
        public System.Threading.Tasks.Task<string> GetCNodeAsync(int catalogId, long cnodeId, string viewPath) {
            return base.Channel.GetCNodeAsync(catalogId, cnodeId, viewPath);
        }
        
        public System.Data.DataTable GetRelationshipCardinality(int catalogId, int nodeTypeFrom, int relationshipType) {
            return base.Channel.GetRelationshipCardinality(catalogId, nodeTypeFrom, relationshipType);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetRelationshipCardinalityAsync(int catalogId, int nodeTypeFrom, int relationshipType) {
            return base.Channel.GetRelationshipCardinalityAsync(catalogId, nodeTypeFrom, relationshipType);
        }
        
        public int ProcessRelationshipCardinality(string txtXML, string userName, string programName, int returnValue) {
            return base.Channel.ProcessRelationshipCardinality(txtXML, userName, programName, returnValue);
        }
        
        public System.Threading.Tasks.Task<int> ProcessRelationshipCardinalityAsync(string txtXML, string userName, string programName, int returnValue) {
            return base.Channel.ProcessRelationshipCardinalityAsync(txtXML, userName, programName, returnValue);
        }
        
        public int ProcessRelationshipTypeEntityTypeCardinality(string txtXML, string userName, string programName, int returnValue) {
            return base.Channel.ProcessRelationshipTypeEntityTypeCardinality(txtXML, userName, programName, returnValue);
        }
        
        public System.Threading.Tasks.Task<int> ProcessRelationshipTypeEntityTypeCardinalityAsync(string txtXML, string userName, string programName, int returnValue) {
            return base.Channel.ProcessRelationshipTypeEntityTypeCardinalityAsync(txtXML, userName, programName, returnValue);
        }
        
        public System.Data.DataTable GetRelationshipTypeEntityTypeCardinality(int nodeTypeFrom, int relationshipType) {
            return base.Channel.GetRelationshipTypeEntityTypeCardinality(nodeTypeFrom, relationshipType);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetRelationshipTypeEntityTypeCardinalityAsync(int nodeTypeFrom, int relationshipType) {
            return base.Channel.GetRelationshipTypeEntityTypeCardinalityAsync(nodeTypeFrom, relationshipType);
        }
        
        public bool ProcessTranslationMemory(string origLocale, string transLocale, string OrigText, string transText, string moduser, int returnValue) {
            return base.Channel.ProcessTranslationMemory(origLocale, transLocale, OrigText, transText, moduser, returnValue);
        }
        
        public System.Threading.Tasks.Task<bool> ProcessTranslationMemoryAsync(string origLocale, string transLocale, string OrigText, string transText, string moduser, int returnValue) {
            return base.Channel.ProcessTranslationMemoryAsync(origLocale, transLocale, OrigText, transText, moduser, returnValue);
        }
        
        public System.Collections.ObjectModel.Collection<MDM.BusinessObjects.ContainerRelationshipTypeEntityTypeMapping> GetContainerRelationshipTypeEntityTypeMappingsByCnodes(string user, string cnodeGroupIds, int catalogId) {
            return base.Channel.GetContainerRelationshipTypeEntityTypeMappingsByCnodes(user, cnodeGroupIds, catalogId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.ContainerRelationshipTypeEntityTypeMapping>> GetContainerRelationshipTypeEntityTypeMappingsByCnodesAsync(string user, string cnodeGroupIds, int catalogId) {
            return base.Channel.GetContainerRelationshipTypeEntityTypeMappingsByCnodesAsync(user, cnodeGroupIds, catalogId);
        }
        
        public MDM.BusinessObjects.OperationResult ProcessDynamicTableSchema(MDM.BusinessObjects.DynamicTableSchema.DBTable dbTable, MDM.Core.DynamicTableType dynamicTableType, MDM.BusinessObjects.CallerContext callerContext) {
            return base.Channel.ProcessDynamicTableSchema(dbTable, dynamicTableType, callerContext);
        }
        
        public System.Threading.Tasks.Task<MDM.BusinessObjects.OperationResult> ProcessDynamicTableSchemaAsync(MDM.BusinessObjects.DynamicTableSchema.DBTable dbTable, MDM.Core.DynamicTableType dynamicTableType, MDM.BusinessObjects.CallerContext callerContext) {
            return base.Channel.ProcessDynamicTableSchemaAsync(dbTable, dynamicTableType, callerContext);
        }
        
        public MDM.BusinessObjects.OperationResult ProcessDynamicTableSchemas(MDM.BusinessObjects.DynamicTableSchema.DBTableCollection dbTables, MDM.Core.DynamicTableType dynamicTableType, MDM.BusinessObjects.CallerContext callerContext) {
            return base.Channel.ProcessDynamicTableSchemas(dbTables, dynamicTableType, callerContext);
        }
        
        public System.Threading.Tasks.Task<MDM.BusinessObjects.OperationResult> ProcessDynamicTableSchemasAsync(MDM.BusinessObjects.DynamicTableSchema.DBTableCollection dbTables, MDM.Core.DynamicTableType dynamicTableType, MDM.BusinessObjects.CallerContext callerContext) {
            return base.Channel.ProcessDynamicTableSchemasAsync(dbTables, dynamicTableType, callerContext);
        }
        
        public MDM.BusinessObjects.OperationResult GetDynamicTableSchema(int id, MDM.Core.DynamicTableType dynamicTableType, MDM.BusinessObjects.CallerContext callerContext) {
            return base.Channel.GetDynamicTableSchema(id, dynamicTableType, callerContext);
        }
        
        public System.Threading.Tasks.Task<MDM.BusinessObjects.OperationResult> GetDynamicTableSchemaAsync(int id, MDM.Core.DynamicTableType dynamicTableType, MDM.BusinessObjects.CallerContext callerContext) {
            return base.Channel.GetDynamicTableSchemaAsync(id, dynamicTableType, callerContext);
        }
        
        public string GetCoreAttrXml(int localeID, int customerID, long CNodeID, long CNodeParentID, int attrGroupID, int catalogID, int orgID, string user, int backupLocaleID, string viewPath, bool useDraftTaxonomy, bool encodeCollections, string attrIDList) {
            return base.Channel.GetCoreAttrXml(localeID, customerID, CNodeID, CNodeParentID, attrGroupID, catalogID, orgID, user, backupLocaleID, viewPath, useDraftTaxonomy, encodeCollections, attrIDList);
        }
        
        public System.Threading.Tasks.Task<string> GetCoreAttrXmlAsync(int localeID, int customerID, long CNodeID, long CNodeParentID, int attrGroupID, int catalogID, int orgID, string user, int backupLocaleID, string viewPath, bool useDraftTaxonomy, bool encodeCollections, string attrIDList) {
            return base.Channel.GetCoreAttrXmlAsync(localeID, customerID, CNodeID, CNodeParentID, attrGroupID, catalogID, orgID, user, backupLocaleID, viewPath, useDraftTaxonomy, encodeCollections, attrIDList);
        }
        
        public string GetTechAttrXml(int CNodeID, int CNodeParentID, int catalogID, int attrGroupID, int localeID, int customerID, string user, int backupLocaleID, string viewPath, bool useDraftTaxonomy, bool encodeCollections, string attrIDList) {
            return base.Channel.GetTechAttrXml(CNodeID, CNodeParentID, catalogID, attrGroupID, localeID, customerID, user, backupLocaleID, viewPath, useDraftTaxonomy, encodeCollections, attrIDList);
        }
        
        public System.Threading.Tasks.Task<string> GetTechAttrXmlAsync(int CNodeID, int CNodeParentID, int catalogID, int attrGroupID, int localeID, int customerID, string user, int backupLocaleID, string viewPath, bool useDraftTaxonomy, bool encodeCollections, string attrIDList) {
            return base.Channel.GetTechAttrXmlAsync(CNodeID, CNodeParentID, catalogID, attrGroupID, localeID, customerID, user, backupLocaleID, viewPath, useDraftTaxonomy, encodeCollections, attrIDList);
        }
        
        public System.Data.DataTable GetApplicationConfigData(int eventSourceId, int eventSubscriberId, int securityRoleId, int securityUserId, int orgId, int catalogId, int categoryId, int cNodeId, int attributeId, int nodeTypeId, int relationshipTypeId, int localId, int applicationConfigId, string categoryPath, string objectName) {
            return base.Channel.GetApplicationConfigData(eventSourceId, eventSubscriberId, securityRoleId, securityUserId, orgId, catalogId, categoryId, cNodeId, attributeId, nodeTypeId, relationshipTypeId, localId, applicationConfigId, categoryPath, objectName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetApplicationConfigDataAsync(int eventSourceId, int eventSubscriberId, int securityRoleId, int securityUserId, int orgId, int catalogId, int categoryId, int cNodeId, int attributeId, int nodeTypeId, int relationshipTypeId, int localId, int applicationConfigId, string categoryPath, string objectName) {
            return base.Channel.GetApplicationConfigDataAsync(eventSourceId, eventSubscriberId, securityRoleId, securityUserId, orgId, catalogId, categoryId, cNodeId, attributeId, nodeTypeId, relationshipTypeId, localId, applicationConfigId, categoryPath, objectName);
        }
        
        public int UpdateApplicationConfigXML(
                    int FK_Application_ContextDefinition, 
                    int FK_Application_ConfigParent, 
                    string ShortName, 
                    string LongName, 
                    int FK_Event_Source, 
                    int FK_Event_Subscriber, 
                    int FK_Org, 
                    int FK_Catalog, 
                    int FK_Category, 
                    int FK_CNode, 
                    int FK_Attribute, 
                    int FK_NodeType, 
                    int FK_RelationshipType, 
                    int FK_Security_Role, 
                    int FK_Security_user, 
                    string ConfigXML, 
                    string Description, 
                    string PreCondition, 
                    string PostCondition, 
                    string XSDSchema, 
                    string SampleXML, 
                    string loginUser, 
                    string userProgram, 
                    int FK_Locale) {
            return base.Channel.UpdateApplicationConfigXML(FK_Application_ContextDefinition, FK_Application_ConfigParent, ShortName, LongName, FK_Event_Source, FK_Event_Subscriber, FK_Org, FK_Catalog, FK_Category, FK_CNode, FK_Attribute, FK_NodeType, FK_RelationshipType, FK_Security_Role, FK_Security_user, ConfigXML, Description, PreCondition, PostCondition, XSDSchema, SampleXML, loginUser, userProgram, FK_Locale);
        }
        
        public System.Threading.Tasks.Task<int> UpdateApplicationConfigXMLAsync(
                    int FK_Application_ContextDefinition, 
                    int FK_Application_ConfigParent, 
                    string ShortName, 
                    string LongName, 
                    int FK_Event_Source, 
                    int FK_Event_Subscriber, 
                    int FK_Org, 
                    int FK_Catalog, 
                    int FK_Category, 
                    int FK_CNode, 
                    int FK_Attribute, 
                    int FK_NodeType, 
                    int FK_RelationshipType, 
                    int FK_Security_Role, 
                    int FK_Security_user, 
                    string ConfigXML, 
                    string Description, 
                    string PreCondition, 
                    string PostCondition, 
                    string XSDSchema, 
                    string SampleXML, 
                    string loginUser, 
                    string userProgram, 
                    int FK_Locale) {
            return base.Channel.UpdateApplicationConfigXMLAsync(FK_Application_ContextDefinition, FK_Application_ConfigParent, ShortName, LongName, FK_Event_Source, FK_Event_Subscriber, FK_Org, FK_Catalog, FK_Category, FK_CNode, FK_Attribute, FK_NodeType, FK_RelationshipType, FK_Security_Role, FK_Security_user, ConfigXML, Description, PreCondition, PostCondition, XSDSchema, SampleXML, loginUser, userProgram, FK_Locale);
        }
        
        public System.Data.DataTable GetContextualApplicationConfigData(int eventSourceId, int eventSubscriberId) {
            return base.Channel.GetContextualApplicationConfigData(eventSourceId, eventSubscriberId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetContextualApplicationConfigDataAsync(int eventSourceId, int eventSubscriberId) {
            return base.Channel.GetContextualApplicationConfigDataAsync(eventSourceId, eventSubscriberId);
        }
        
        public System.Data.DataTable GetSearchCriterias(int searchCriteriaID, int loginId, int catalogId) {
            return base.Channel.GetSearchCriterias(searchCriteriaID, loginId, catalogId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetSearchCriteriasAsync(int searchCriteriaID, int loginId, int catalogId) {
            return base.Channel.GetSearchCriteriasAsync(searchCriteriaID, loginId, catalogId);
        }
        
        public System.Data.DataTable GetCategoryNavPanel(int catalogID, string sysAttrSelectionXml, string categorySearchColumn, string categorySearchString, long parentCategoryId, int countFrom, int countTo, string strvchrUserLogin, int currentDataLocale) {
            return base.Channel.GetCategoryNavPanel(catalogID, sysAttrSelectionXml, categorySearchColumn, categorySearchString, parentCategoryId, countFrom, countTo, strvchrUserLogin, currentDataLocale);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetCategoryNavPanelAsync(int catalogID, string sysAttrSelectionXml, string categorySearchColumn, string categorySearchString, long parentCategoryId, int countFrom, int countTo, string strvchrUserLogin, int currentDataLocale) {
            return base.Channel.GetCategoryNavPanelAsync(catalogID, sysAttrSelectionXml, categorySearchColumn, categorySearchString, parentCategoryId, countFrom, countTo, strvchrUserLogin, currentDataLocale);
        }
        
        public int ProcessSearchCriteria(string action, int criteriaId, string criteriaName, int loginId, int catalogId, bool isGlobalSearch, string searchXml, string loginUser, string userProgram) {
            return base.Channel.ProcessSearchCriteria(action, criteriaId, criteriaName, loginId, catalogId, isGlobalSearch, searchXml, loginUser, userProgram);
        }
        
        public System.Threading.Tasks.Task<int> ProcessSearchCriteriaAsync(string action, int criteriaId, string criteriaName, int loginId, int catalogId, bool isGlobalSearch, string searchXml, string loginUser, string userProgram) {
            return base.Channel.ProcessSearchCriteriaAsync(action, criteriaId, criteriaName, loginId, catalogId, isGlobalSearch, searchXml, loginUser, userProgram);
        }
        
        public System.Data.DataTable GetAllCategories(int altTaxId, int currentDataLocale, string filter, string loginUser) {
            return base.Channel.GetAllCategories(altTaxId, currentDataLocale, filter, loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllCategoriesAsync(int altTaxId, int currentDataLocale, string filter, string loginUser) {
            return base.Channel.GetAllCategoriesAsync(altTaxId, currentDataLocale, filter, loginUser);
        }
        
        public string GetSystemAttributes(int orgId, bool excludeSearchable, int currentDataLocale) {
            return base.Channel.GetSystemAttributes(orgId, excludeSearchable, currentDataLocale);
        }
        
        public System.Threading.Tasks.Task<string> GetSystemAttributesAsync(int orgId, bool excludeSearchable, int currentDataLocale) {
            return base.Channel.GetSystemAttributesAsync(orgId, excludeSearchable, currentDataLocale);
        }
        
        public string GetCharacteristicTemplate(int selectedCategoryId, int catalogID, int currentDataLocale, bool useDraftAccess, int usesChilds, int orgID, bool excludeSearchable) {
            return base.Channel.GetCharacteristicTemplate(selectedCategoryId, catalogID, currentDataLocale, useDraftAccess, usesChilds, orgID, excludeSearchable);
        }
        
        public System.Threading.Tasks.Task<string> GetCharacteristicTemplateAsync(int selectedCategoryId, int catalogID, int currentDataLocale, bool useDraftAccess, int usesChilds, int orgID, bool excludeSearchable) {
            return base.Channel.GetCharacteristicTemplateAsync(selectedCategoryId, catalogID, currentDataLocale, useDraftAccess, usesChilds, orgID, excludeSearchable);
        }
        
        public System.Data.DataTable GetRuleViewAttributes(int cNodeId, int businessRuleId) {
            return base.Channel.GetRuleViewAttributes(cNodeId, businessRuleId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetRuleViewAttributesAsync(int cNodeId, int businessRuleId) {
            return base.Channel.GetRuleViewAttributesAsync(cNodeId, businessRuleId);
        }
        
        public System.Data.DataTable GetBusinessRuleFromContext(string strContentXml) {
            return base.Channel.GetBusinessRuleFromContext(strContentXml);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetBusinessRuleFromContextAsync(string strContentXml) {
            return base.Channel.GetBusinessRuleFromContextAsync(strContentXml);
        }
        
        public int DeleteSearchCriteria(int searchCriteriaId, string loginUser, string modProgram) {
            return base.Channel.DeleteSearchCriteria(searchCriteriaId, loginUser, modProgram);
        }
        
        public System.Threading.Tasks.Task<int> DeleteSearchCriteriaAsync(int searchCriteriaId, string loginUser, string modProgram) {
            return base.Channel.DeleteSearchCriteriaAsync(searchCriteriaId, loginUser, modProgram);
        }
        
        public System.Data.DataTable GetUserVisibleOrgsDT(string targetLoginUser, string loginUser, int localId, int countFrom, int countTo, string sortColumn, string searchColumn, string searchParameters) {
            return base.Channel.GetUserVisibleOrgsDT(targetLoginUser, loginUser, localId, countFrom, countTo, sortColumn, searchColumn, searchParameters);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetUserVisibleOrgsDTAsync(string targetLoginUser, string loginUser, int localId, int countFrom, int countTo, string sortColumn, string searchColumn, string searchParameters) {
            return base.Channel.GetUserVisibleOrgsDTAsync(targetLoginUser, loginUser, localId, countFrom, countTo, sortColumn, searchColumn, searchParameters);
        }
        
        public System.Data.DataTable GetUserVisibleCatalogsDT(
                    string targetLoginUser, 
                    string loginUser, 
                    int orgId, 
                    int localeId, 
                    int countFrom, 
                    int countTo, 
                    string sortColumn, 
                    string searchColumn, 
                    string searchParameter, 
                    int catalogId, 
                    bool includeTaxonomy, 
                    bool includeDynamicTaxonomy, 
                    bool includeCatalog, 
                    bool includeView, 
                    bool includeProduction, 
                    bool includeDraft) {
            return base.Channel.GetUserVisibleCatalogsDT(targetLoginUser, loginUser, orgId, localeId, countFrom, countTo, sortColumn, searchColumn, searchParameter, catalogId, includeTaxonomy, includeDynamicTaxonomy, includeCatalog, includeView, includeProduction, includeDraft);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetUserVisibleCatalogsDTAsync(
                    string targetLoginUser, 
                    string loginUser, 
                    int orgId, 
                    int localeId, 
                    int countFrom, 
                    int countTo, 
                    string sortColumn, 
                    string searchColumn, 
                    string searchParameter, 
                    int catalogId, 
                    bool includeTaxonomy, 
                    bool includeDynamicTaxonomy, 
                    bool includeCatalog, 
                    bool includeView, 
                    bool includeProduction, 
                    bool includeDraft) {
            return base.Channel.GetUserVisibleCatalogsDTAsync(targetLoginUser, loginUser, orgId, localeId, countFrom, countTo, sortColumn, searchColumn, searchParameter, catalogId, includeTaxonomy, includeDynamicTaxonomy, includeCatalog, includeView, includeProduction, includeDraft);
        }
        
        public System.Data.DataTable GetAssignmentButtons(string assignmentStatus, string cNodeList, string toolbarButtonXml, string vchrUserLogin) {
            return base.Channel.GetAssignmentButtons(assignmentStatus, cNodeList, toolbarButtonXml, vchrUserLogin);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAssignmentButtonsAsync(string assignmentStatus, string cNodeList, string toolbarButtonXml, string vchrUserLogin) {
            return base.Channel.GetAssignmentButtonsAsync(assignmentStatus, cNodeList, toolbarButtonXml, vchrUserLogin);
        }
        
        public System.Data.DataTable GetBreadcrumbAttributeValueString(string breadcrumbConfigXML, int fkOrgId, int catalogId, long cNodeId, int localeId) {
            return base.Channel.GetBreadcrumbAttributeValueString(breadcrumbConfigXML, fkOrgId, catalogId, cNodeId, localeId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetBreadcrumbAttributeValueStringAsync(string breadcrumbConfigXML, int fkOrgId, int catalogId, long cNodeId, int localeId) {
            return base.Channel.GetBreadcrumbAttributeValueStringAsync(breadcrumbConfigXML, fkOrgId, catalogId, cNodeId, localeId);
        }
        
        public MDM.BusinessObjects.AttributeVersionCollection Get(long entityId, int attributeId, int localeId, int catalogId, long entityParentId, MDM.BusinessObjects.CallerContext callerContext) {
            return base.Channel.Get(entityId, attributeId, localeId, catalogId, entityParentId, callerContext);
        }
        
        public System.Threading.Tasks.Task<MDM.BusinessObjects.AttributeVersionCollection> GetAsync(long entityId, int attributeId, int localeId, int catalogId, long entityParentId, MDM.BusinessObjects.CallerContext callerContext) {
            return base.Channel.GetAsync(entityId, attributeId, localeId, catalogId, entityParentId, callerContext);
        }
        
        public int ProcessServiceResult(int eventSource, int applicationConfig, string dataXmlString, string loginUser, string userProgram) {
            return base.Channel.ProcessServiceResult(eventSource, applicationConfig, dataXmlString, loginUser, userProgram);
        }
        
        public System.Threading.Tasks.Task<int> ProcessServiceResultAsync(int eventSource, int applicationConfig, string dataXmlString, string loginUser, string userProgram) {
            return base.Channel.ProcessServiceResultAsync(eventSource, applicationConfig, dataXmlString, loginUser, userProgram);
        }
        
        public System.Data.DataTable GetJobTypeEventSourceMapping(int eventSourceId, int jobId) {
            return base.Channel.GetJobTypeEventSourceMapping(eventSourceId, jobId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetJobTypeEventSourceMappingAsync(int eventSourceId, int jobId) {
            return base.Channel.GetJobTypeEventSourceMappingAsync(eventSourceId, jobId);
        }
        
        public System.Data.DataTable GetRelationshipTypeHierarchy(int FK_Catalog, int FK_RelationshipType_Top, int MaxLevel) {
            return base.Channel.GetRelationshipTypeHierarchy(FK_Catalog, FK_RelationshipType_Top, MaxLevel);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetRelationshipTypeHierarchyAsync(int FK_Catalog, int FK_RelationshipType_Top, int MaxLevel) {
            return base.Channel.GetRelationshipTypeHierarchyAsync(FK_Catalog, FK_RelationshipType_Top, MaxLevel);
        }
        
        public string ExtractCatalogByIDLocalRel(int intExtSystemID, string txtXML, string vchrRelAttrList) {
            return base.Channel.ExtractCatalogByIDLocalRel(intExtSystemID, txtXML, vchrRelAttrList);
        }
        
        public System.Threading.Tasks.Task<string> ExtractCatalogByIDLocalRelAsync(int intExtSystemID, string txtXML, string vchrRelAttrList) {
            return base.Channel.ExtractCatalogByIDLocalRelAsync(intExtSystemID, txtXML, vchrRelAttrList);
        }
        
        public string ExtractBulkAttributeMetadata(string vchrTargetUserLogin, string vchrUserLogin, string txtXML, bool bitUseDraftTax, int localeId, bool ignoreComplexAttributes) {
            return base.Channel.ExtractBulkAttributeMetadata(vchrTargetUserLogin, vchrUserLogin, txtXML, bitUseDraftTax, localeId, ignoreComplexAttributes);
        }
        
        public System.Threading.Tasks.Task<string> ExtractBulkAttributeMetadataAsync(string vchrTargetUserLogin, string vchrUserLogin, string txtXML, bool bitUseDraftTax, int localeId, bool ignoreComplexAttributes) {
            return base.Channel.ExtractBulkAttributeMetadataAsync(vchrTargetUserLogin, vchrUserLogin, txtXML, bitUseDraftTax, localeId, ignoreComplexAttributes);
        }
        
        public string ExtractBulkAttributeMetadataRel(string vchrTargetUserLogin, string vchrUserLogin, string txtXML, bool bitUseDraftTax, int localeId) {
            return base.Channel.ExtractBulkAttributeMetadataRel(vchrTargetUserLogin, vchrUserLogin, txtXML, bitUseDraftTax, localeId);
        }
        
        public System.Threading.Tasks.Task<string> ExtractBulkAttributeMetadataRelAsync(string vchrTargetUserLogin, string vchrUserLogin, string txtXML, bool bitUseDraftTax, int localeId) {
            return base.Channel.ExtractBulkAttributeMetadataRelAsync(vchrTargetUserLogin, vchrUserLogin, txtXML, bitUseDraftTax, localeId);
        }
        
        public string ExtractAttributes(string vchrTargetUserLogin, string vchrUserLogin, string txtXML, bool bitUseDraftTax) {
            return base.Channel.ExtractAttributes(vchrTargetUserLogin, vchrUserLogin, txtXML, bitUseDraftTax);
        }
        
        public System.Threading.Tasks.Task<string> ExtractAttributesAsync(string vchrTargetUserLogin, string vchrUserLogin, string txtXML, bool bitUseDraftTax) {
            return base.Channel.ExtractAttributesAsync(vchrTargetUserLogin, vchrUserLogin, txtXML, bitUseDraftTax);
        }
        
        public System.Data.DataTable GetCategoryAttributeMap(int intCategoryID, int intCatalogID, int intLocaleID) {
            return base.Channel.GetCategoryAttributeMap(intCategoryID, intCatalogID, intLocaleID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetCategoryAttributeMapAsync(int intCategoryID, int intCatalogID, int intLocaleID) {
            return base.Channel.GetCategoryAttributeMapAsync(intCategoryID, intCatalogID, intLocaleID);
        }
        
        public System.Data.DataTable GetCharacteristicTemplateDT(int intCategoryID, int intLocaleID) {
            return base.Channel.GetCharacteristicTemplateDT(intCategoryID, intLocaleID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetCharacteristicTemplateDTAsync(int intCategoryID, int intLocaleID) {
            return base.Channel.GetCharacteristicTemplateDTAsync(intCategoryID, intLocaleID);
        }
        
        public string GetUserVisibleCatalogs(
                    string vchrTargetUserLogin, 
                    string vchrUserLogin, 
                    int FK_Org, 
                    int FK_Locale, 
                    int intCountFrom, 
                    int intCountTo, 
                    string vchrSortColumn, 
                    string vchrSearchColumn, 
                    string vchrSearchParameter, 
                    int PK_Catalog, 
                    bool IncludeTaxonomy, 
                    bool IncludeDynamicTaxonomy, 
                    bool IncludeCatalog, 
                    bool IncludeView, 
                    bool IncludeProduction, 
                    bool IncludeDraft) {
            return base.Channel.GetUserVisibleCatalogs(vchrTargetUserLogin, vchrUserLogin, FK_Org, FK_Locale, intCountFrom, intCountTo, vchrSortColumn, vchrSearchColumn, vchrSearchParameter, PK_Catalog, IncludeTaxonomy, IncludeDynamicTaxonomy, IncludeCatalog, IncludeView, IncludeProduction, IncludeDraft);
        }
        
        public System.Threading.Tasks.Task<string> GetUserVisibleCatalogsAsync(
                    string vchrTargetUserLogin, 
                    string vchrUserLogin, 
                    int FK_Org, 
                    int FK_Locale, 
                    int intCountFrom, 
                    int intCountTo, 
                    string vchrSortColumn, 
                    string vchrSearchColumn, 
                    string vchrSearchParameter, 
                    int PK_Catalog, 
                    bool IncludeTaxonomy, 
                    bool IncludeDynamicTaxonomy, 
                    bool IncludeCatalog, 
                    bool IncludeView, 
                    bool IncludeProduction, 
                    bool IncludeDraft) {
            return base.Channel.GetUserVisibleCatalogsAsync(vchrTargetUserLogin, vchrUserLogin, FK_Org, FK_Locale, intCountFrom, intCountTo, vchrSortColumn, vchrSearchColumn, vchrSearchParameter, PK_Catalog, IncludeTaxonomy, IncludeDynamicTaxonomy, IncludeCatalog, IncludeView, IncludeProduction, IncludeDraft);
        }
        
        public string GetCatalogPermissionsByOrg(
                    string vchrTargetUserLogin, 
                    string vchrUserLogin, 
                    int FK_Org, 
                    int FK_Locale, 
                    int intCountFrom, 
                    int intCountTo, 
                    string vchrSortColumn, 
                    string vchrSearchColumn, 
                    string vchrSearchParameter, 
                    int PK_Catalog, 
                    bool IncludeTaxonomy, 
                    bool IncludeDynamicTaxonomy, 
                    bool IncludeCatalog, 
                    bool IncludeView, 
                    bool IncludeProduction, 
                    bool IncludeDraft) {
            return base.Channel.GetCatalogPermissionsByOrg(vchrTargetUserLogin, vchrUserLogin, FK_Org, FK_Locale, intCountFrom, intCountTo, vchrSortColumn, vchrSearchColumn, vchrSearchParameter, PK_Catalog, IncludeTaxonomy, IncludeDynamicTaxonomy, IncludeCatalog, IncludeView, IncludeProduction, IncludeDraft);
        }
        
        public System.Threading.Tasks.Task<string> GetCatalogPermissionsByOrgAsync(
                    string vchrTargetUserLogin, 
                    string vchrUserLogin, 
                    int FK_Org, 
                    int FK_Locale, 
                    int intCountFrom, 
                    int intCountTo, 
                    string vchrSortColumn, 
                    string vchrSearchColumn, 
                    string vchrSearchParameter, 
                    int PK_Catalog, 
                    bool IncludeTaxonomy, 
                    bool IncludeDynamicTaxonomy, 
                    bool IncludeCatalog, 
                    bool IncludeView, 
                    bool IncludeProduction, 
                    bool IncludeDraft) {
            return base.Channel.GetCatalogPermissionsByOrgAsync(vchrTargetUserLogin, vchrUserLogin, FK_Org, FK_Locale, intCountFrom, intCountTo, vchrSortColumn, vchrSearchColumn, vchrSearchParameter, PK_Catalog, IncludeTaxonomy, IncludeDynamicTaxonomy, IncludeCatalog, IncludeView, IncludeProduction, IncludeDraft);
        }
        
        public System.Data.DataTable GetCatalogDT(
                    string vchrTargetUserLogin, 
                    string vchrUserLogin, 
                    int FK_Org, 
                    int FK_Locale, 
                    int intCountFrom, 
                    int intCountTo, 
                    string vchrSortColumn, 
                    string vchrSearchColumn, 
                    string vchrSearchParameter, 
                    int PK_Catalog, 
                    bool IncludeTaxonomy, 
                    bool IncludeDynamicTaxonomy, 
                    bool IncludeCatalog, 
                    bool IncludeView, 
                    bool IncludeProduction, 
                    bool IncludeDraft) {
            return base.Channel.GetCatalogDT(vchrTargetUserLogin, vchrUserLogin, FK_Org, FK_Locale, intCountFrom, intCountTo, vchrSortColumn, vchrSearchColumn, vchrSearchParameter, PK_Catalog, IncludeTaxonomy, IncludeDynamicTaxonomy, IncludeCatalog, IncludeView, IncludeProduction, IncludeDraft);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetCatalogDTAsync(
                    string vchrTargetUserLogin, 
                    string vchrUserLogin, 
                    int FK_Org, 
                    int FK_Locale, 
                    int intCountFrom, 
                    int intCountTo, 
                    string vchrSortColumn, 
                    string vchrSearchColumn, 
                    string vchrSearchParameter, 
                    int PK_Catalog, 
                    bool IncludeTaxonomy, 
                    bool IncludeDynamicTaxonomy, 
                    bool IncludeCatalog, 
                    bool IncludeView, 
                    bool IncludeProduction, 
                    bool IncludeDraft) {
            return base.Channel.GetCatalogDTAsync(vchrTargetUserLogin, vchrUserLogin, FK_Org, FK_Locale, intCountFrom, intCountTo, vchrSortColumn, vchrSearchColumn, vchrSearchParameter, PK_Catalog, IncludeTaxonomy, IncludeDynamicTaxonomy, IncludeCatalog, IncludeView, IncludeProduction, IncludeDraft);
        }
        
        public string GetCatalogsByOrg(string orgId, string vchrTargetUserLogin, string vchrUserLogin) {
            return base.Channel.GetCatalogsByOrg(orgId, vchrTargetUserLogin, vchrUserLogin);
        }
        
        public System.Threading.Tasks.Task<string> GetCatalogsByOrgAsync(string orgId, string vchrTargetUserLogin, string vchrUserLogin) {
            return base.Channel.GetCatalogsByOrgAsync(orgId, vchrTargetUserLogin, vchrUserLogin);
        }
        
        public System.Data.DataTable ProcessCatalogs(string txtXML, int PK_Org, string vchrUserLogin) {
            return base.Channel.ProcessCatalogs(txtXML, PK_Org, vchrUserLogin);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ProcessCatalogsAsync(string txtXML, int PK_Org, string vchrUserLogin) {
            return base.Channel.ProcessCatalogsAsync(txtXML, PK_Org, vchrUserLogin);
        }
        
        public string GetCatalogLocaleByID(int PK_Catalog, string vchrUserLogin) {
            return base.Channel.GetCatalogLocaleByID(PK_Catalog, vchrUserLogin);
        }
        
        public System.Threading.Tasks.Task<string> GetCatalogLocaleByIDAsync(int PK_Catalog, string vchrUserLogin) {
            return base.Channel.GetCatalogLocaleByIDAsync(PK_Catalog, vchrUserLogin);
        }
        
        public bool ProcessCatalogLocales(string txtXML, int PK_Org, string vchrUserLogin) {
            return base.Channel.ProcessCatalogLocales(txtXML, PK_Org, vchrUserLogin);
        }
        
        public System.Threading.Tasks.Task<bool> ProcessCatalogLocalesAsync(string txtXML, int PK_Org, string vchrUserLogin) {
            return base.Channel.ProcessCatalogLocalesAsync(txtXML, PK_Org, vchrUserLogin);
        }
        
        public string GetNodePermissions(
                    string vchrTargetUserLogin, 
                    string vchrUserLogin, 
                    int PK_Catalog, 
                    int FK_ParentCNode, 
                    int FK_Locale, 
                    int FK_Customer, 
                    int intCountFrom, 
                    int intCountTo, 
                    string vchrSortColumn, 
                    string vchrSearchColumn, 
                    string vchrSearchParameter, 
                    int PK_CNode, 
                    bool bitIncludeComponents, 
                    bool bitEnableComponentMapping, 
                    bool bitUseDrafTax, 
                    bool bitEnableUnassignedCategory, 
                    string ToolTipAttributeList) {
            return base.Channel.GetNodePermissions(vchrTargetUserLogin, vchrUserLogin, PK_Catalog, FK_ParentCNode, FK_Locale, FK_Customer, intCountFrom, intCountTo, vchrSortColumn, vchrSearchColumn, vchrSearchParameter, PK_CNode, bitIncludeComponents, bitEnableComponentMapping, bitUseDrafTax, bitEnableUnassignedCategory, ToolTipAttributeList);
        }
        
        public System.Threading.Tasks.Task<string> GetNodePermissionsAsync(
                    string vchrTargetUserLogin, 
                    string vchrUserLogin, 
                    int PK_Catalog, 
                    int FK_ParentCNode, 
                    int FK_Locale, 
                    int FK_Customer, 
                    int intCountFrom, 
                    int intCountTo, 
                    string vchrSortColumn, 
                    string vchrSearchColumn, 
                    string vchrSearchParameter, 
                    int PK_CNode, 
                    bool bitIncludeComponents, 
                    bool bitEnableComponentMapping, 
                    bool bitUseDrafTax, 
                    bool bitEnableUnassignedCategory, 
                    string ToolTipAttributeList) {
            return base.Channel.GetNodePermissionsAsync(vchrTargetUserLogin, vchrUserLogin, PK_Catalog, FK_ParentCNode, FK_Locale, FK_Customer, intCountFrom, intCountTo, vchrSortColumn, vchrSearchColumn, vchrSearchParameter, PK_CNode, bitIncludeComponents, bitEnableComponentMapping, bitUseDrafTax, bitEnableUnassignedCategory, ToolTipAttributeList);
        }
        
        public string GetNodePermissionsByCNode(string vchrTargetUserLogin, string vchrUserLogin, int PK_Catalog, int CnodeId, int FK_Locale, int FK_Customer, int intCountFrom, int intCountTo, string vchrSortColumn, string vchrSearchColumn, string vchrSearchParameter, bool bitIncludeComponents, bool bitEnableComponentMapping, bool bitUseDrafTax, bool bitEnableUnassignedCategory) {
            return base.Channel.GetNodePermissionsByCNode(vchrTargetUserLogin, vchrUserLogin, PK_Catalog, CnodeId, FK_Locale, FK_Customer, intCountFrom, intCountTo, vchrSortColumn, vchrSearchColumn, vchrSearchParameter, bitIncludeComponents, bitEnableComponentMapping, bitUseDrafTax, bitEnableUnassignedCategory);
        }
        
        public System.Threading.Tasks.Task<string> GetNodePermissionsByCNodeAsync(string vchrTargetUserLogin, string vchrUserLogin, int PK_Catalog, int CnodeId, int FK_Locale, int FK_Customer, int intCountFrom, int intCountTo, string vchrSortColumn, string vchrSearchColumn, string vchrSearchParameter, bool bitIncludeComponents, bool bitEnableComponentMapping, bool bitUseDrafTax, bool bitEnableUnassignedCategory) {
            return base.Channel.GetNodePermissionsByCNodeAsync(vchrTargetUserLogin, vchrUserLogin, PK_Catalog, CnodeId, FK_Locale, FK_Customer, intCountFrom, intCountTo, vchrSortColumn, vchrSearchColumn, vchrSearchParameter, bitIncludeComponents, bitEnableComponentMapping, bitUseDrafTax, bitEnableUnassignedCategory);
        }
        
        public string GetCoreAttrByGroup(int intLocaleID, int intCustomerID, long intCNodeID, long intCNodeParentID, int intGroupID, int intCatalogID, int intOrgID, string vchrUserID, int intBackLocaleID, string vchrViewPath, bool bitUseDraftTax, bool ShowAtCreation, string AttrIDList) {
            return base.Channel.GetCoreAttrByGroup(intLocaleID, intCustomerID, intCNodeID, intCNodeParentID, intGroupID, intCatalogID, intOrgID, vchrUserID, intBackLocaleID, vchrViewPath, bitUseDraftTax, ShowAtCreation, AttrIDList);
        }
        
        public System.Threading.Tasks.Task<string> GetCoreAttrByGroupAsync(int intLocaleID, int intCustomerID, long intCNodeID, long intCNodeParentID, int intGroupID, int intCatalogID, int intOrgID, string vchrUserID, int intBackLocaleID, string vchrViewPath, bool bitUseDraftTax, bool ShowAtCreation, string AttrIDList) {
            return base.Channel.GetCoreAttrByGroupAsync(intLocaleID, intCustomerID, intCNodeID, intCNodeParentID, intGroupID, intCatalogID, intOrgID, vchrUserID, intBackLocaleID, vchrViewPath, bitUseDraftTax, ShowAtCreation, AttrIDList);
        }
        
        public long ProcessCoreAttr(string txtXML, int intCatalogID, int intOrgID, string vchrUserID, string vchrProgramName, int LocaleId) {
            return base.Channel.ProcessCoreAttr(txtXML, intCatalogID, intOrgID, vchrUserID, vchrProgramName, LocaleId);
        }
        
        public System.Threading.Tasks.Task<long> ProcessCoreAttrAsync(string txtXML, int intCatalogID, int intOrgID, string vchrUserID, string vchrProgramName, int LocaleId) {
            return base.Channel.ProcessCoreAttrAsync(txtXML, intCatalogID, intOrgID, vchrUserID, vchrProgramName, LocaleId);
        }
        
        public long ProcessTechAttr(string txtXML, int intCatalogID, int intOrgID, string vchrUserID, string vchrProgramName, int LocaleId) {
            return base.Channel.ProcessTechAttr(txtXML, intCatalogID, intOrgID, vchrUserID, vchrProgramName, LocaleId);
        }
        
        public System.Threading.Tasks.Task<long> ProcessTechAttrAsync(string txtXML, int intCatalogID, int intOrgID, string vchrUserID, string vchrProgramName, int LocaleId) {
            return base.Channel.ProcessTechAttrAsync(txtXML, intCatalogID, intOrgID, vchrUserID, vchrProgramName, LocaleId);
        }
        
        public string GetTechAttr(int intCnodeID, int intCnodeParentID, int intCatalogID, int intGroupID, int intLocaleID, int intCustomerID, string vchrUserID, int intBackupLocaleID, string vchrViewPath, bool bitUseDraftTax, string AttrIDList) {
            return base.Channel.GetTechAttr(intCnodeID, intCnodeParentID, intCatalogID, intGroupID, intLocaleID, intCustomerID, vchrUserID, intBackupLocaleID, vchrViewPath, bitUseDraftTax, AttrIDList);
        }
        
        public System.Threading.Tasks.Task<string> GetTechAttrAsync(int intCnodeID, int intCnodeParentID, int intCatalogID, int intGroupID, int intLocaleID, int intCustomerID, string vchrUserID, int intBackupLocaleID, string vchrViewPath, bool bitUseDraftTax, string AttrIDList) {
            return base.Channel.GetTechAttrAsync(intCnodeID, intCnodeParentID, intCatalogID, intGroupID, intLocaleID, intCustomerID, vchrUserID, intBackupLocaleID, vchrViewPath, bitUseDraftTax, AttrIDList);
        }
        
        public System.Data.DataTable GetStatuses() {
            return base.Channel.GetStatuses();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetStatusesAsync() {
            return base.Channel.GetStatusesAsync();
        }
        
        public bool SchemaValidationRulesExecution(int JobId, string UserID) {
            return base.Channel.SchemaValidationRulesExecution(JobId, UserID);
        }
        
        public System.Threading.Tasks.Task<bool> SchemaValidationRulesExecutionAsync(int JobId, string UserID) {
            return base.Channel.SchemaValidationRulesExecutionAsync(JobId, UserID);
        }
        
        public System.Data.DataSet GetCatalogAttributes(string UserLogin) {
            return base.Channel.GetCatalogAttributes(UserLogin);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCatalogAttributesAsync(string UserLogin) {
            return base.Channel.GetCatalogAttributesAsync(UserLogin);
        }
        
        public bool CopyCatalogAttributes(int intFromCatalogId, int intToCatalogId, string CreateProgram, string CreateUser) {
            return base.Channel.CopyCatalogAttributes(intFromCatalogId, intToCatalogId, CreateProgram, CreateUser);
        }
        
        public System.Threading.Tasks.Task<bool> CopyCatalogAttributesAsync(int intFromCatalogId, int intToCatalogId, string CreateProgram, string CreateUser) {
            return base.Channel.CopyCatalogAttributesAsync(intFromCatalogId, intToCatalogId, CreateProgram, CreateUser);
        }
        
        public System.Data.DataTable GetNameValCollection(string IdList) {
            return base.Channel.GetNameValCollection(IdList);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetNameValCollectionAsync(string IdList) {
            return base.Channel.GetNameValCollectionAsync(IdList);
        }
        
        public string GetCollectionValues(int FK_CNode, int ParentId, int FK_Catalog, int FK_Customer, int FK_Locale, string InheritanceMode) {
            return base.Channel.GetCollectionValues(FK_CNode, ParentId, FK_Catalog, FK_Customer, FK_Locale, InheritanceMode);
        }
        
        public System.Threading.Tasks.Task<string> GetCollectionValuesAsync(int FK_CNode, int ParentId, int FK_Catalog, int FK_Customer, int FK_Locale, string InheritanceMode) {
            return base.Channel.GetCollectionValuesAsync(FK_CNode, ParentId, FK_Catalog, FK_Customer, FK_Locale, InheritanceMode);
        }
        
        public string GetCatalogNodeTypeAttributesXML(int intOrgID, int intCatalogID, string nvchrNodeType, int intBranchLevel, bool IncludeComplexAttrChildren, bool ExcludeSearchable) {
            return base.Channel.GetCatalogNodeTypeAttributesXML(intOrgID, intCatalogID, nvchrNodeType, intBranchLevel, IncludeComplexAttrChildren, ExcludeSearchable);
        }
        
        public System.Threading.Tasks.Task<string> GetCatalogNodeTypeAttributesXMLAsync(int intOrgID, int intCatalogID, string nvchrNodeType, int intBranchLevel, bool IncludeComplexAttrChildren, bool ExcludeSearchable) {
            return base.Channel.GetCatalogNodeTypeAttributesXMLAsync(intOrgID, intCatalogID, nvchrNodeType, intBranchLevel, IncludeComplexAttrChildren, ExcludeSearchable);
        }
        
        public string GetSearchCategoriesByCriteria(string vchrSearchValue, int intCatalogID, int intParentID, string toolTipAttributeList, string vchrUserLogin, int dataLocale) {
            return base.Channel.GetSearchCategoriesByCriteria(vchrSearchValue, intCatalogID, intParentID, toolTipAttributeList, vchrUserLogin, dataLocale);
        }
        
        public System.Threading.Tasks.Task<string> GetSearchCategoriesByCriteriaAsync(string vchrSearchValue, int intCatalogID, int intParentID, string toolTipAttributeList, string vchrUserLogin, int dataLocale) {
            return base.Channel.GetSearchCategoriesByCriteriaAsync(vchrSearchValue, intCatalogID, intParentID, toolTipAttributeList, vchrUserLogin, dataLocale);
        }
        
        public string GetVisibleComponents(string vchrTargetUserLogin, string vchrUserLogin, int intOrgId, int intCatalogId, int intNodeId, bool bitRecursive, bool bitUseDraftTaxonomy) {
            return base.Channel.GetVisibleComponents(vchrTargetUserLogin, vchrUserLogin, intOrgId, intCatalogId, intNodeId, bitRecursive, bitUseDraftTaxonomy);
        }
        
        public System.Threading.Tasks.Task<string> GetVisibleComponentsAsync(string vchrTargetUserLogin, string vchrUserLogin, int intOrgId, int intCatalogId, int intNodeId, bool bitRecursive, bool bitUseDraftTaxonomy) {
            return base.Channel.GetVisibleComponentsAsync(vchrTargetUserLogin, vchrUserLogin, intOrgId, intCatalogId, intNodeId, bitRecursive, bitUseDraftTaxonomy);
        }
        
        public int ProcessRelAttr(string txtXML, int intCatalogID, int intOrgID, string vchrUserID, string vchrProgramName) {
            return base.Channel.ProcessRelAttr(txtXML, intCatalogID, intOrgID, vchrUserID, vchrProgramName);
        }
        
        public System.Threading.Tasks.Task<int> ProcessRelAttrAsync(string txtXML, int intCatalogID, int intOrgID, string vchrUserID, string vchrProgramName) {
            return base.Channel.ProcessRelAttrAsync(txtXML, intCatalogID, intOrgID, vchrUserID, vchrProgramName);
        }
        
        public System.Data.DataSet GetUserConfigContextData(int applicationContextType, string seqDataTableforUI) {
            return base.Channel.GetUserConfigContextData(applicationContextType, seqDataTableforUI);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUserConfigContextDataAsync(int applicationContextType, string seqDataTableforUI) {
            return base.Channel.GetUserConfigContextDataAsync(applicationContextType, seqDataTableforUI);
        }
        
        public string GetAllUOMsByUOMType() {
            return base.Channel.GetAllUOMsByUOMType();
        }
        
        public System.Threading.Tasks.Task<string> GetAllUOMsByUOMTypeAsync() {
            return base.Channel.GetAllUOMsByUOMTypeAsync();
        }
        
        public System.Data.DataSet GetUserConfigMetadata(string configXml) {
            return base.Channel.GetUserConfigMetadata(configXml);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUserConfigMetadataAsync(string configXml) {
            return base.Channel.GetUserConfigMetadataAsync(configXml);
        }
        
        public System.Data.DataTable GetEventSources(int eventSourceId, string eventSourceName) {
            return base.Channel.GetEventSources(eventSourceId, eventSourceName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetEventSourcesAsync(int eventSourceId, string eventSourceName) {
            return base.Channel.GetEventSourcesAsync(eventSourceId, eventSourceName);
        }
        
        public System.Data.DataTable GetEventSubscribers(int eventSubscriberId, string eventSubscriberName) {
            return base.Channel.GetEventSubscribers(eventSubscriberId, eventSubscriberName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetEventSubscribersAsync(int eventSubscriberId, string eventSubscriberName) {
            return base.Channel.GetEventSubscribersAsync(eventSubscriberId, eventSubscriberName);
        }
        
        public System.Data.DataTable GetApplicationConfigTypes(int applicationConfigTypeId, string applicationConfigTypeName) {
            return base.Channel.GetApplicationConfigTypes(applicationConfigTypeId, applicationConfigTypeName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetApplicationConfigTypesAsync(int applicationConfigTypeId, string applicationConfigTypeName) {
            return base.Channel.GetApplicationConfigTypesAsync(applicationConfigTypeId, applicationConfigTypeName);
        }
        
        public System.Data.DataTable GetMatchingRuleSets(int orgId, int catalogId, int eventSourceId, int eventSubscriberId, int securityUserId) {
            return base.Channel.GetMatchingRuleSets(orgId, catalogId, eventSourceId, eventSubscriberId, securityUserId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetMatchingRuleSetsAsync(int orgId, int catalogId, int eventSourceId, int eventSubscriberId, int securityUserId) {
            return base.Channel.GetMatchingRuleSetsAsync(orgId, catalogId, eventSourceId, eventSubscriberId, securityUserId);
        }
        
        public System.Data.DataTable GetViewContext(int viewId) {
            return base.Channel.GetViewContext(viewId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetViewContextAsync(int viewId) {
            return base.Channel.GetViewContextAsync(viewId);
        }
        
        public System.Data.DataSet GetViewContextDetail(int contextId, string loginUser) {
            return base.Channel.GetViewContextDetail(contextId, loginUser);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetViewContextDetailAsync(int contextId, string loginUser) {
            return base.Channel.GetViewContextDetailAsync(contextId, loginUser);
        }
        
        public string CreateServicesJob(string xml, string userId, int serviceType) {
            return base.Channel.CreateServicesJob(xml, userId, serviceType);
        }
        
        public System.Threading.Tasks.Task<string> CreateServicesJobAsync(string xml, string userId, int serviceType) {
            return base.Channel.CreateServicesJobAsync(xml, userId, serviceType);
        }
        
        public System.Data.DataTable GetRSPLMatchingStatus(string cNodes, int catalogId) {
            return base.Channel.GetRSPLMatchingStatus(cNodes, catalogId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetRSPLMatchingStatusAsync(string cNodes, int catalogId) {
            return base.Channel.GetRSPLMatchingStatusAsync(cNodes, catalogId);
        }
        
        public System.Data.DataTable GetMatchedCnodes(string nodeName, string dataXML) {
            return base.Channel.GetMatchedCnodes(nodeName, dataXML);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetMatchedCnodesAsync(string nodeName, string dataXML) {
            return base.Channel.GetMatchedCnodesAsync(nodeName, dataXML);
        }
        
        public string ExtractBulkOperationAttributeMetaData(string targetUserLogin, string userLogin, string inputDataMode, string selectedNodeTypes, string txtXML, bool bitUseDraftTax) {
            return base.Channel.ExtractBulkOperationAttributeMetaData(targetUserLogin, userLogin, inputDataMode, selectedNodeTypes, txtXML, bitUseDraftTax);
        }
        
        public System.Threading.Tasks.Task<string> ExtractBulkOperationAttributeMetaDataAsync(string targetUserLogin, string userLogin, string inputDataMode, string selectedNodeTypes, string txtXML, bool bitUseDraftTax) {
            return base.Channel.ExtractBulkOperationAttributeMetaDataAsync(targetUserLogin, userLogin, inputDataMode, selectedNodeTypes, txtXML, bitUseDraftTax);
        }
        
        public System.Data.DataTable GetAllLocales() {
            return base.Channel.GetAllLocales();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllLocalesAsync() {
            return base.Channel.GetAllLocalesAsync();
        }
        
        public System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity> GetAllCategoriesByHierarchy(int localeId, int taxonomyId, string searchParameter, int countTo) {
            return base.Channel.GetAllCategoriesByHierarchy(localeId, taxonomyId, searchParameter, countTo);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.Entity>> GetAllCategoriesByHierarchyAsync(int localeId, int taxonomyId, string searchParameter, int countTo) {
            return base.Channel.GetAllCategoriesByHierarchyAsync(localeId, taxonomyId, searchParameter, countTo);
        }
        
        public System.Collections.ObjectModel.Collection<MDM.BusinessObjects.TimeZone> GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<MDM.BusinessObjects.TimeZone>> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public string GetUnitsXML() {
            return base.Channel.GetUnitsXML();
        }
        
        public System.Threading.Tasks.Task<string> GetUnitsXMLAsync() {
            return base.Channel.GetUnitsXMLAsync();
        }
        
        public string GetEntityRelationshipDetails(long entityId, MDM.BusinessObjects.EntityContext entityContext, MDM.BusinessObjects.CallerContext callerContext, bool publishEvents, bool applyAVS) {
            return base.Channel.GetEntityRelationshipDetails(entityId, entityContext, callerContext, publishEvents, applyAVS);
        }
        
        public System.Threading.Tasks.Task<string> GetEntityRelationshipDetailsAsync(long entityId, MDM.BusinessObjects.EntityContext entityContext, MDM.BusinessObjects.CallerContext callerContext, bool publishEvents, bool applyAVS) {
            return base.Channel.GetEntityRelationshipDetailsAsync(entityId, entityContext, callerContext, publishEvents, applyAVS);
        }
        
        public string GetRoleMenus(int securityRole) {
            return base.Channel.GetRoleMenus(securityRole);
        }
        
        public System.Threading.Tasks.Task<string> GetRoleMenusAsync(int securityRole) {
            return base.Channel.GetRoleMenusAsync(securityRole);
        }
        
        public string GetUsers(int securityUser, int userType, int countFrom, int countTo, string vchrSortColumn, string vchrSearchColumn, string vchrSearchParameter, string vchrUserLogin) {
            return base.Channel.GetUsers(securityUser, userType, countFrom, countTo, vchrSortColumn, vchrSearchColumn, vchrSearchParameter, vchrUserLogin);
        }
        
        public System.Threading.Tasks.Task<string> GetUsersAsync(int securityUser, int userType, int countFrom, int countTo, string vchrSortColumn, string vchrSearchColumn, string vchrSearchParameter, string vchrUserLogin) {
            return base.Channel.GetUsersAsync(securityUser, userType, countFrom, countTo, vchrSortColumn, vchrSearchColumn, vchrSearchParameter, vchrUserLogin);
        }
        
        public string GetUsersWithRoles(int securityUser, int countFrom, int countTo, string vchrSearchColumn, string vchrSearchParameter, string vchrUserLogin) {
            return base.Channel.GetUsersWithRoles(securityUser, countFrom, countTo, vchrSearchColumn, vchrSearchParameter, vchrUserLogin);
        }
        
        public System.Threading.Tasks.Task<string> GetUsersWithRolesAsync(int securityUser, int countFrom, int countTo, string vchrSearchColumn, string vchrSearchParameter, string vchrUserLogin) {
            return base.Channel.GetUsersWithRolesAsync(securityUser, countFrom, countTo, vchrSearchColumn, vchrSearchParameter, vchrUserLogin);
        }
        
        public bool ProcessUsers(string txtXML, string vchrUserLogin) {
            return base.Channel.ProcessUsers(txtXML, vchrUserLogin);
        }
        
        public System.Threading.Tasks.Task<bool> ProcessUsersAsync(string txtXML, string vchrUserLogin) {
            return base.Channel.ProcessUsersAsync(txtXML, vchrUserLogin);
        }
        
        public string GetRoles(int securityRole, int userType, string chrGetPermissionSetOnly, int intCountFrom, int intCountTo, string vchrSortColumn, string vchrSearchColumn, string vchrSearchParameter, string vchrUserLogin, bool bitDisplaySystemRole) {
            return base.Channel.GetRoles(securityRole, userType, chrGetPermissionSetOnly, intCountFrom, intCountTo, vchrSortColumn, vchrSearchColumn, vchrSearchParameter, vchrUserLogin, bitDisplaySystemRole);
        }
        
        public System.Threading.Tasks.Task<string> GetRolesAsync(int securityRole, int userType, string chrGetPermissionSetOnly, int intCountFrom, int intCountTo, string vchrSortColumn, string vchrSearchColumn, string vchrSearchParameter, string vchrUserLogin, bool bitDisplaySystemRole) {
            return base.Channel.GetRolesAsync(securityRole, userType, chrGetPermissionSetOnly, intCountFrom, intCountTo, vchrSortColumn, vchrSearchColumn, vchrSearchParameter, vchrUserLogin, bitDisplaySystemRole);
        }
        
        public string GetRolesWithUsers(int pkSecurityRole, string chrGetPermissionSetOnly, int intCountFrom, int intCountTo, string vchrSearchColumn, string vchrSearchParameter, string vchrUserLogin, bool bitDisplaySystemRole) {
            return base.Channel.GetRolesWithUsers(pkSecurityRole, chrGetPermissionSetOnly, intCountFrom, intCountTo, vchrSearchColumn, vchrSearchParameter, vchrUserLogin, bitDisplaySystemRole);
        }
        
        public System.Threading.Tasks.Task<string> GetRolesWithUsersAsync(int pkSecurityRole, string chrGetPermissionSetOnly, int intCountFrom, int intCountTo, string vchrSearchColumn, string vchrSearchParameter, string vchrUserLogin, bool bitDisplaySystemRole) {
            return base.Channel.GetRolesWithUsersAsync(pkSecurityRole, chrGetPermissionSetOnly, intCountFrom, intCountTo, vchrSearchColumn, vchrSearchParameter, vchrUserLogin, bitDisplaySystemRole);
        }
        
        public System.Data.DataTable ProcessRoles(string txtXML, string vchrUserLogin) {
            return base.Channel.ProcessRoles(txtXML, vchrUserLogin);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ProcessRolesAsync(string txtXML, string vchrUserLogin) {
            return base.Channel.ProcessRolesAsync(txtXML, vchrUserLogin);
        }
        
        public bool ProcessRoleMenus(string txtXML, string vchrUserLogin) {
            return base.Channel.ProcessRoleMenus(txtXML, vchrUserLogin);
        }
        
        public System.Threading.Tasks.Task<bool> ProcessRoleMenusAsync(string txtXML, string vchrUserLogin) {
            return base.Channel.ProcessRoleMenusAsync(txtXML, vchrUserLogin);
        }
        
        public string GetObjectTypeAction() {
            return base.Channel.GetObjectTypeAction();
        }
        
        public System.Threading.Tasks.Task<string> GetObjectTypeActionAsync() {
            return base.Channel.GetObjectTypeActionAsync();
        }
        
        public string GetHierarchyAction() {
            return base.Channel.GetHierarchyAction();
        }
        
        public System.Threading.Tasks.Task<string> GetHierarchyActionAsync() {
            return base.Channel.GetHierarchyActionAsync();
        }
        
        public string GetPermissions(int securityRole, string chrPermissionSet, string vchrUserLogin) {
            return base.Channel.GetPermissions(securityRole, chrPermissionSet, vchrUserLogin);
        }
        
        public System.Threading.Tasks.Task<string> GetPermissionsAsync(int securityRole, string chrPermissionSet, string vchrUserLogin) {
            return base.Channel.GetPermissionsAsync(securityRole, chrPermissionSet, vchrUserLogin);
        }
        
        public bool ProcessPermissions(string txtXML, string vchrUserLogin) {
            return base.Channel.ProcessPermissions(txtXML, vchrUserLogin);
        }
        
        public System.Threading.Tasks.Task<bool> ProcessPermissionsAsync(string txtXML, string vchrUserLogin) {
            return base.Channel.ProcessPermissionsAsync(txtXML, vchrUserLogin);
        }
        
        public string GetAllOrganizationsAndCatalogs(string vchrUserLogin) {
            return base.Channel.GetAllOrganizationsAndCatalogs(vchrUserLogin);
        }
        
        public System.Threading.Tasks.Task<string> GetAllOrganizationsAndCatalogsAsync(string vchrUserLogin) {
            return base.Channel.GetAllOrganizationsAndCatalogsAsync(vchrUserLogin);
        }
        
        public string IsSystemUser(string nvchrUserLogin, string isSystemUser1) {
            return base.Channel.IsSystemUser(nvchrUserLogin, isSystemUser1);
        }
        
        public System.Threading.Tasks.Task<string> IsSystemUserAsync(string nvchrUserLogin, string isSystemUser) {
            return base.Channel.IsSystemUserAsync(nvchrUserLogin, isSystemUser);
        }
        
        public bool HasPermission(string vchrUserLogin, string objectTypeSN, string actionSN, string parentObjectTypeSN, int orgId, int catalogId, long categoryCNode, long componentCNode, int attribute, int relationship, bool bitForDraft, bool bitHasPermission) {
            return base.Channel.HasPermission(vchrUserLogin, objectTypeSN, actionSN, parentObjectTypeSN, orgId, catalogId, categoryCNode, componentCNode, attribute, relationship, bitForDraft, bitHasPermission);
        }
        
        public System.Threading.Tasks.Task<bool> HasPermissionAsync(string vchrUserLogin, string objectTypeSN, string actionSN, string parentObjectTypeSN, int orgId, int catalogId, long categoryCNode, long componentCNode, int attribute, int relationship, bool bitForDraft, bool bitHasPermission) {
            return base.Channel.HasPermissionAsync(vchrUserLogin, objectTypeSN, actionSN, parentObjectTypeSN, orgId, catalogId, categoryCNode, componentCNode, attribute, relationship, bitForDraft, bitHasPermission);
        }
        
        public string GetUserVisibleOrgs(string targetUserLogin, string userLogin, int localeId, int intCountFrom, int intCountTo, string sortColumn, string searchColumn, string searchParameter) {
            return base.Channel.GetUserVisibleOrgs(targetUserLogin, userLogin, localeId, intCountFrom, intCountTo, sortColumn, searchColumn, searchParameter);
        }
        
        public System.Threading.Tasks.Task<string> GetUserVisibleOrgsAsync(string targetUserLogin, string userLogin, int localeId, int intCountFrom, int intCountTo, string sortColumn, string searchColumn, string searchParameter) {
            return base.Channel.GetUserVisibleOrgsAsync(targetUserLogin, userLogin, localeId, intCountFrom, intCountTo, sortColumn, searchColumn, searchParameter);
        }
        
        public string GetOrgsWithPermissions(string targetUserLogin, string userLogin, int localeId, int intCountFrom, int intCountTo, string sortColumn, string searchColumn, string searchParameter, int orgParentId, int orgClassificationId, string catalogObjectType) {
            return base.Channel.GetOrgsWithPermissions(targetUserLogin, userLogin, localeId, intCountFrom, intCountTo, sortColumn, searchColumn, searchParameter, orgParentId, orgClassificationId, catalogObjectType);
        }
        
        public System.Threading.Tasks.Task<string> GetOrgsWithPermissionsAsync(string targetUserLogin, string userLogin, int localeId, int intCountFrom, int intCountTo, string sortColumn, string searchColumn, string searchParameter, int orgParentId, int orgClassificationId, string catalogObjectType) {
            return base.Channel.GetOrgsWithPermissionsAsync(targetUserLogin, userLogin, localeId, intCountFrom, intCountTo, sortColumn, searchColumn, searchParameter, orgParentId, orgClassificationId, catalogObjectType);
        }
        
        public string GetOrgsByOrgClassification(string targetUserLogin, string userLogin, int localeId, int intCountFrom, int intCountTo, string sortColumn, string searchColumn, string searchParameter, int orgClassificationId, string catalogObjectType) {
            return base.Channel.GetOrgsByOrgClassification(targetUserLogin, userLogin, localeId, intCountFrom, intCountTo, sortColumn, searchColumn, searchParameter, orgClassificationId, catalogObjectType);
        }
        
        public System.Threading.Tasks.Task<string> GetOrgsByOrgClassificationAsync(string targetUserLogin, string userLogin, int localeId, int intCountFrom, int intCountTo, string sortColumn, string searchColumn, string searchParameter, int orgClassificationId, string catalogObjectType) {
            return base.Channel.GetOrgsByOrgClassificationAsync(targetUserLogin, userLogin, localeId, intCountFrom, intCountTo, sortColumn, searchColumn, searchParameter, orgClassificationId, catalogObjectType);
        }
        
        public string GetAllOrgTypes(int orgTypeId, int intCountFrom, int intCountTo, string sortColumn, string searchColumn, string searchParameter, string userLogin) {
            return base.Channel.GetAllOrgTypes(orgTypeId, intCountFrom, intCountTo, sortColumn, searchColumn, searchParameter, userLogin);
        }
        
        public System.Threading.Tasks.Task<string> GetAllOrgTypesAsync(int orgTypeId, int intCountFrom, int intCountTo, string sortColumn, string searchColumn, string searchParameter, string userLogin) {
            return base.Channel.GetAllOrgTypesAsync(orgTypeId, intCountFrom, intCountTo, sortColumn, searchColumn, searchParameter, userLogin);
        }
        
        public string GetOrgTypes(int orgTypeId, int intCountFrom, int intCountTo, string sortColumn, string searchColumn, string searchParameter, string userLogin) {
            return base.Channel.GetOrgTypes(orgTypeId, intCountFrom, intCountTo, sortColumn, searchColumn, searchParameter, userLogin);
        }
        
        public System.Threading.Tasks.Task<string> GetOrgTypesAsync(int orgTypeId, int intCountFrom, int intCountTo, string sortColumn, string searchColumn, string searchParameter, string userLogin) {
            return base.Channel.GetOrgTypesAsync(orgTypeId, intCountFrom, intCountTo, sortColumn, searchColumn, searchParameter, userLogin);
        }
        
        public bool ProcessOrgTypes(string txtXML, string userLogin) {
            return base.Channel.ProcessOrgTypes(txtXML, userLogin);
        }
        
        public System.Threading.Tasks.Task<bool> ProcessOrgTypesAsync(string txtXML, string userLogin) {
            return base.Channel.ProcessOrgTypesAsync(txtXML, userLogin);
        }
        
        public string GetAllOrgHierarchies() {
            return base.Channel.GetAllOrgHierarchies();
        }
        
        public System.Threading.Tasks.Task<string> GetAllOrgHierarchiesAsync() {
            return base.Channel.GetAllOrgHierarchiesAsync();
        }
        
        public string GetOrgsWithLocales(int orgClassificationId, int localeId, string userLogin) {
            return base.Channel.GetOrgsWithLocales(orgClassificationId, localeId, userLogin);
        }
        
        public System.Threading.Tasks.Task<string> GetOrgsWithLocalesAsync(int orgClassificationId, int localeId, string userLogin) {
            return base.Channel.GetOrgsWithLocalesAsync(orgClassificationId, localeId, userLogin);
        }
        
        public bool ProcessOrgLocales(string txtXML, string userLogin) {
            return base.Channel.ProcessOrgLocales(txtXML, userLogin);
        }
        
        public System.Threading.Tasks.Task<bool> ProcessOrgLocalesAsync(string txtXML, string userLogin) {
            return base.Channel.ProcessOrgLocalesAsync(txtXML, userLogin);
        }
        
        public System.Data.DataTable GetOrgsWithPermissionsOrg(string userLogin) {
            return base.Channel.GetOrgsWithPermissionsOrg(userLogin);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetOrgsWithPermissionsOrgAsync(string userLogin) {
            return base.Channel.GetOrgsWithPermissionsOrgAsync(userLogin);
        }
        
        public System.Data.DataTable GetOrgCatalogInfo(int orgId, int catalogId, string findWhat) {
            return base.Channel.GetOrgCatalogInfo(orgId, catalogId, findWhat);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetOrgCatalogInfoAsync(int orgId, int catalogId, string findWhat) {
            return base.Channel.GetOrgCatalogInfoAsync(orgId, catalogId, findWhat);
        }
        
        public string GetAttributeDetails(int attributeId, string userLogin) {
            return base.Channel.GetAttributeDetails(attributeId, userLogin);
        }
        
        public System.Threading.Tasks.Task<string> GetAttributeDetailsAsync(int attributeId, string userLogin) {
            return base.Channel.GetAttributeDetailsAsync(attributeId, userLogin);
        }
        
        public System.Data.DataTable GetAllAttributes() {
            return base.Channel.GetAllAttributes();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllAttributesAsync() {
            return base.Channel.GetAllAttributesAsync();
        }
        
        public string GetCNodeAttributeValue(long cNodeId, int catalogId, int attributeId, int localeId, string userName, int returnAttrType, bool showAtCreation) {
            return base.Channel.GetCNodeAttributeValue(cNodeId, catalogId, attributeId, localeId, userName, returnAttrType, showAtCreation);
        }
        
        public System.Threading.Tasks.Task<string> GetCNodeAttributeValueAsync(long cNodeId, int catalogId, int attributeId, int localeId, string userName, int returnAttrType, bool showAtCreation) {
            return base.Channel.GetCNodeAttributeValueAsync(cNodeId, catalogId, attributeId, localeId, userName, returnAttrType, showAtCreation);
        }
        
        public string GetAttributeGroupsXML() {
            return base.Channel.GetAttributeGroupsXML();
        }
        
        public System.Threading.Tasks.Task<string> GetAttributeGroupsXMLAsync() {
            return base.Channel.GetAttributeGroupsXMLAsync();
        }
        
        public string GetTechSpecsByGroup(int attrParentId) {
            return base.Channel.GetTechSpecsByGroup(attrParentId);
        }
        
        public System.Threading.Tasks.Task<string> GetTechSpecsByGroupAsync(int attrParentId) {
            return base.Channel.GetTechSpecsByGroupAsync(attrParentId);
        }
        
        public System.Data.DataSet ComplexMetadata_GetDT(string inputStr) {
            return base.Channel.ComplexMetadata_GetDT(inputStr);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ComplexMetadata_GetDTAsync(string inputStr) {
            return base.Channel.ComplexMetadata_GetDTAsync(inputStr);
        }
        
        public string GetAttributeChildrenByType(int attributeTypeId, string attributeId, string userId, int orgId, int catalogId, long cNodeId, string viewPath) {
            return base.Channel.GetAttributeChildrenByType(attributeTypeId, attributeId, userId, orgId, catalogId, cNodeId, viewPath);
        }
        
        public System.Threading.Tasks.Task<string> GetAttributeChildrenByTypeAsync(int attributeTypeId, string attributeId, string userId, int orgId, int catalogId, long cNodeId, string viewPath) {
            return base.Channel.GetAttributeChildrenByTypeAsync(attributeTypeId, attributeId, userId, orgId, catalogId, cNodeId, viewPath);
        }
        
        public string GetSysObjectAttributesXML(string objectType, int objectId, int localeId) {
            return base.Channel.GetSysObjectAttributesXML(objectType, objectId, localeId);
        }
        
        public System.Threading.Tasks.Task<string> GetSysObjectAttributesXMLAsync(string objectType, int objectId, int localeId) {
            return base.Channel.GetSysObjectAttributesXMLAsync(objectType, objectId, localeId);
        }
        
        public bool ProcessObjectAttributes(string attributeXML, int objectId, string objectType, int localeId) {
            return base.Channel.ProcessObjectAttributes(attributeXML, objectId, objectType, localeId);
        }
        
        public System.Threading.Tasks.Task<bool> ProcessObjectAttributesAsync(string attributeXML, int objectId, string objectType, int localeId) {
            return base.Channel.ProcessObjectAttributesAsync(attributeXML, objectId, objectType, localeId);
        }
        
        public System.Data.DataSet UniqueComplxAttrid() {
            return base.Channel.UniqueComplxAttrid();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> UniqueComplxAttridAsync() {
            return base.Channel.UniqueComplxAttridAsync();
        }
        
        public string GetAttributeConfig(string tableName, int id) {
            return base.Channel.GetAttributeConfig(tableName, id);
        }
        
        public System.Threading.Tasks.Task<string> GetAttributeConfigAsync(string tableName, int id) {
            return base.Channel.GetAttributeConfigAsync(tableName, id);
        }
        
        public string GetAttributeUsage(int attributeId) {
            return base.Channel.GetAttributeUsage(attributeId);
        }
        
        public System.Threading.Tasks.Task<string> GetAttributeUsageAsync(int attributeId) {
            return base.Channel.GetAttributeUsageAsync(attributeId);
        }
        
        public string GetAttributeGroupChildren(System.Nullable<int> parentId, int localeId, string userLogin) {
            return base.Channel.GetAttributeGroupChildren(parentId, localeId, userLogin);
        }
        
        public System.Threading.Tasks.Task<string> GetAttributeGroupChildrenAsync(System.Nullable<int> parentId, int localeId, string userLogin) {
            return base.Channel.GetAttributeGroupChildrenAsync(parentId, localeId, userLogin);
        }
        
        public string GetAttributes(int parentId, int countFrom, int countTo, string searchParameter, string searchColumn, string sortColumn, int localeId, bool bitUnusedOnly, string userLogin) {
            return base.Channel.GetAttributes(parentId, countFrom, countTo, searchParameter, searchColumn, sortColumn, localeId, bitUnusedOnly, userLogin);
        }
        
        public System.Threading.Tasks.Task<string> GetAttributesAsync(int parentId, int countFrom, int countTo, string searchParameter, string searchColumn, string sortColumn, int localeId, bool bitUnusedOnly, string userLogin) {
            return base.Channel.GetAttributesAsync(parentId, countFrom, countTo, searchParameter, searchColumn, sortColumn, localeId, bitUnusedOnly, userLogin);
        }
        
        public string GetNodeAttributeDetails(int attributeId, int cNodeId, string userLogin) {
            return base.Channel.GetNodeAttributeDetails(attributeId, cNodeId, userLogin);
        }
        
        public System.Threading.Tasks.Task<string> GetNodeAttributeDetailsAsync(int attributeId, int cNodeId, string userLogin) {
            return base.Channel.GetNodeAttributeDetailsAsync(attributeId, cNodeId, userLogin);
        }
        
        public string GetAttributeDataTypeMap(string userLogin) {
            return base.Channel.GetAttributeDataTypeMap(userLogin);
        }
        
        public System.Threading.Tasks.Task<string> GetAttributeDataTypeMapAsync(string userLogin) {
            return base.Channel.GetAttributeDataTypeMapAsync(userLogin);
        }
        
        public string GetAttributeDataTypes(string userLogin) {
            return base.Channel.GetAttributeDataTypes(userLogin);
        }
        
        public System.Threading.Tasks.Task<string> GetAttributeDataTypesAsync(string userLogin) {
            return base.Channel.GetAttributeDataTypesAsync(userLogin);
        }
        
        public string GetAttributeDisplayTypeMap(string userLogin) {
            return base.Channel.GetAttributeDisplayTypeMap(userLogin);
        }
        
        public System.Threading.Tasks.Task<string> GetAttributeDisplayTypeMapAsync(string userLogin) {
            return base.Channel.GetAttributeDisplayTypeMapAsync(userLogin);
        }
        
        public string GetAttributeDisplayTypes(string userLogin) {
            return base.Channel.GetAttributeDisplayTypes(userLogin);
        }
        
        public System.Threading.Tasks.Task<string> GetAttributeDisplayTypesAsync(string userLogin) {
            return base.Channel.GetAttributeDisplayTypesAsync(userLogin);
        }
        
        public string GetFormattersXML() {
            return base.Channel.GetFormattersXML();
        }
        
        public System.Threading.Tasks.Task<string> GetFormattersXMLAsync() {
            return base.Channel.GetFormattersXMLAsync();
        }
        
        public string UpdateTargetAttributeValue(string txtXML, int targetAttributeId, int maxAllowableChars, string inTestPage, string retAttrValue) {
            return base.Channel.UpdateTargetAttributeValue(txtXML, targetAttributeId, maxAllowableChars, inTestPage, retAttrValue);
        }
        
        public System.Threading.Tasks.Task<string> UpdateTargetAttributeValueAsync(string txtXML, int targetAttributeId, int maxAllowableChars, string inTestPage, string retAttrValue) {
            return base.Channel.UpdateTargetAttributeValueAsync(txtXML, targetAttributeId, maxAllowableChars, inTestPage, retAttrValue);
        }
        
        public string getAttributesXml(int intGroupId, string searchValue, int level, bool getComplexChildren, int localeId) {
            return base.Channel.getAttributesXml(intGroupId, searchValue, level, getComplexChildren, localeId);
        }
        
        public System.Threading.Tasks.Task<string> getAttributesXmlAsync(int intGroupId, string searchValue, int level, bool getComplexChildren, int localeId) {
            return base.Channel.getAttributesXmlAsync(intGroupId, searchValue, level, getComplexChildren, localeId);
        }
        
        public bool ComplexMetadataRollBack(int versionId, int cNodeId, int attributeId) {
            return base.Channel.ComplexMetadataRollBack(versionId, cNodeId, attributeId);
        }
        
        public System.Threading.Tasks.Task<bool> ComplexMetadataRollBackAsync(int versionId, int cNodeId, int attributeId) {
            return base.Channel.ComplexMetadataRollBackAsync(versionId, cNodeId, attributeId);
        }
        
        public System.Data.DataSet GetAttributeDataForLookupControl(string complexTableName, string lookUpColumnName, int isCheckingOnly) {
            return base.Channel.GetAttributeDataForLookupControl(complexTableName, lookUpColumnName, isCheckingOnly);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAttributeDataForLookupControlAsync(string complexTableName, string lookUpColumnName, int isCheckingOnly) {
            return base.Channel.GetAttributeDataForLookupControlAsync(complexTableName, lookUpColumnName, isCheckingOnly);
        }
        
        public string GetCategoriesFromRuleXML(string txtRulesXML) {
            return base.Channel.GetCategoriesFromRuleXML(txtRulesXML);
        }
        
        public System.Threading.Tasks.Task<string> GetCategoriesFromRuleXMLAsync(string txtRulesXML) {
            return base.Channel.GetCategoriesFromRuleXMLAsync(txtRulesXML);
        }
        
        public System.Data.DataTable QuickSearchByShortName(int catalogId, string searchValue, int cnodeId, string userLogin) {
            return base.Channel.QuickSearchByShortName(catalogId, searchValue, cnodeId, userLogin);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> QuickSearchByShortNameAsync(int catalogId, string searchValue, int cnodeId, string userLogin) {
            return base.Channel.QuickSearchByShortNameAsync(catalogId, searchValue, cnodeId, userLogin);
        }
        
        public System.Data.DataSet GetObject(string objectValue, int objectId, string searchValue, int topRows) {
            return base.Channel.GetObject(objectValue, objectId, searchValue, topRows);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetObjectAsync(string objectValue, int objectId, string searchValue, int topRows) {
            return base.Channel.GetObjectAsync(objectValue, objectId, searchValue, topRows);
        }
        
        public System.Data.DataTable ObjectGet(string objectValue, int objectId, string searchValue, int topRows) {
            return base.Channel.ObjectGet(objectValue, objectId, searchValue, topRows);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ObjectGetAsync(string objectValue, int objectId, string searchValue, int topRows) {
            return base.Channel.ObjectGetAsync(objectValue, objectId, searchValue, topRows);
        }
        
        public System.Data.DataTable GetStatusesByType(int statusType) {
            return base.Channel.GetStatusesByType(statusType);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetStatusesByTypeAsync(int statusType) {
            return base.Channel.GetStatusesByTypeAsync(statusType);
        }
        
        public System.Data.DataTable GetItemMetaDataActions() {
            return base.Channel.GetItemMetaDataActions();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetItemMetaDataActionsAsync() {
            return base.Channel.GetItemMetaDataActionsAsync();
        }
        
        public System.Data.DataTable LookupSearch(string objectValue, string tableName, string searchValue, int localeId) {
            return base.Channel.LookupSearch(objectValue, tableName, searchValue, localeId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> LookupSearchAsync(string objectValue, string tableName, string searchValue, int localeId) {
            return base.Channel.LookupSearchAsync(objectValue, tableName, searchValue, localeId);
        }
        
        public System.Data.DataTable LookupRuleDataSearch(string objectValue, string tableName, string searchValue) {
            return base.Channel.LookupRuleDataSearch(objectValue, tableName, searchValue);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> LookupRuleDataSearchAsync(string objectValue, string tableName, string searchValue) {
            return base.Channel.LookupRuleDataSearchAsync(objectValue, tableName, searchValue);
        }
        
        public System.Data.DataTable GetUserConfig(int securityUserId, int orgId, int userConfigTypeId, string userConfigShortName, bool getFromAdmin) {
            return base.Channel.GetUserConfig(securityUserId, orgId, userConfigTypeId, userConfigShortName, getFromAdmin);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetUserConfigAsync(int securityUserId, int orgId, int userConfigTypeId, string userConfigShortName, bool getFromAdmin) {
            return base.Channel.GetUserConfigAsync(securityUserId, orgId, userConfigTypeId, userConfigShortName, getFromAdmin);
        }
        
        public System.Data.DataTable ObjectDependency(string objectName, int objectId) {
            return base.Channel.ObjectDependency(objectName, objectId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ObjectDependencyAsync(string objectName, int objectId) {
            return base.Channel.ObjectDependencyAsync(objectName, objectId);
        }
        
        public System.Data.DataTable GetFileDetails(int fileId) {
            return base.Channel.GetFileDetails(fileId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetFileDetailsAsync(int fileId) {
            return base.Channel.GetFileDetailsAsync(fileId);
        }
    }
#pragma warning restore 1591, 618
}
