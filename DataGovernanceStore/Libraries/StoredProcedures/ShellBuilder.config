<?xml version="1.0" encoding="UTF-8"?>
<shellBuilder connectStringName="CC5_0_Connection">
  <shellClasses>

    <class name="RelationshipTypeEntityTypeCardinality" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlRelationshipTypeEntityTypeCardinality" targetPath="SqlServer"/>
      <procedure methodName="GetRelationshipTypeEntityTypeCardinality" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_DataModelManager_RelationshipTypeEntityTypeCardinality_get" default="true"/>
      </procedure>
      <procedure methodName="ProcessRelationshipTypeEntityTypeCardinality" returnValueType="int">
        <provider name="SqlProvider" procName="usp_DataModelManager_RelationshipTypeEntityTypeCardinality_Process" default="true"/>
      </procedure>
    </class>
    <class name="Report" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlReport" targetPath="SqlServer"/>
      <procedure methodName="GetAllLocales" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Rpt_GetAllLocales" default="true"/>
      </procedure>
      <procedure methodName="GetReports" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Report_GetReports" default="true"/>
      </procedure>
      <procedure methodName="GetNPI" timeout="200000000" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_NPIReport" default="true"/>
      </procedure>
      <procedure methodName="GetAttributeChange" timeout="200000000" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_AttributeChangeReport" default="true"/>
      </procedure>
      <procedure methodName="GetFunctionalLocationStatusReport" timeout="200000000" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_FunctionalLocationStatusReport" default="true"/>
      </procedure>
      <procedure methodName="GetBOMStatusReport" timeout="200000000" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_BOMStatusReport" default="true"/>
      </procedure>
      <procedure methodName="GetWFStatus" timeout="200000000" outputType="DataTable">
        <provider name="SqlProvider" procName="Usp_GetWorkflowStatusReport" default="true"/>
      </procedure>
      <procedure methodName="GetBOMCompletenessReport" timeout="200000000" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_BOMCompletenessReport" default="true"/>
      </procedure>
      <procedure methodName="Get_BOMWhereNotUsed" timeout="200000000" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_BOMWhereNotUsed" default="true"/>
      </procedure>
      <procedure methodName="Get_PartRSPLWhereNotUsed" timeout="200000000" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_PartRSPLWhereNotUsed" default="true"/>
      </procedure>
      <procedure methodName="GetAttributeUsage" timeout="200000000" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_Report_GetAttributeUsage" default="true"/>
      </procedure>
    </class>
    <class name="RegularExpressions" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlRegularExpressions" targetPath="SqlServer"/>
      <procedure methodName="DeleteAttributeRegEx">
        <provider name="SqlProvider" procName="usp_Sec_RegExp_Attribute_Delete" default="true"/>
      </procedure>
      <procedure methodName="GetAttributeRegEx" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_RegExp_Attribute_Get" default="true"/>
      </procedure>
      <procedure methodName="CreateAttributeRegEx">
        <provider name="SqlProvider" procName="usp_Sec_RegExp_Attribute_Insert" default="true"/>
      </procedure>
      <procedure methodName="UpdateAttributeRegEx">
        <provider name="SqlProvider" procName="usp_Sec_RegExp_Attribute_Update" default="true"/>
      </procedure>
    </class>
    <class name="AttExtract" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlAttExtract" targetPath="SqlServer"/>
      <procedure methodName="GenerateSequences" timeout="200000000">
        <provider name="SqlProvider" procName="usp_AttExtract_GenerateSequences" default="true"/>
      </procedure>
      <procedure methodName="Extract" timeout="200000000">
        <provider name="SqlProvider" procName="usp_AttExtract_Extract" default="true"/>
      </procedure>
      <procedure methodName="ExtractJob" timeout="200000000">
        <provider name="SqlProvider" procName="usp_AttExtract_ExtractJob" default="true"/>
      </procedure>
      <procedure methodName="SimulateExtractAttribute" outputType="DataSet" timeout="2000000">
        <provider name="SqlProvider" procName="Usp_DQM_ExtractAttribute_Simulate" default="true"/>
      </procedure>
    </class>
    <class name="Matching" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlMatching" targetPath="SqlServer" />

      <procedure methodName="GetTextBasedPartNumberMatchingResults"  timeout="200000000" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_DQM_PNM_RunLoad_Dynamic" default="true" />
      </procedure>

      <procedure methodName="GetStatusItemCount"  timeout="200000000" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_DC_Match_GetStatusItemCount" default="true" />
      </procedure>
      <procedure methodName="MatchJob" timeout="200000000">
        <provider name="SqlProvider" procName="usp_DC_MatchJob" default="true"/>
      </procedure>
      <procedure methodName="DescriptionMatch" timeout="200000000">
        <provider name="SqlProvider" procName="usp_DC_Match_CreateDescriptionMatchJob" default="true"/>
      </procedure>
      <procedure methodName="CreateServicesJob" timeout="200000000" outputType="XML">
        <provider name="SqlProvider" procName="usp_CreateServicesJob" default="true"/>
      </procedure>
      <procedure methodName="AttributeExtraction" timeout="200000000">
        <provider name="SqlProvider" procName="usp_CreateAttributeExtractionJob" default="true"/>
      </procedure>
      <procedure methodName="CreateNetricsResult" timeout="200000000">
        <provider name="SqlProvider" procName="usp_DC_CreateNetricsResult" default="true"/>
      </procedure>
      <procedure methodName="GetMatchRule" timeout="200000000" outputType="DataTable">
        <provider name="SqlProvider" procName="Usp_DC_GetMatchRule" default="true"/>
      </procedure>
      <procedure methodName="GetMatchCnodeAndAttrval" timeout="200000000" outputType="DataTable">
        <provider name="SqlProvider" procName="Usp_DC_GetMatchCnodeAndAttrval" default="true"/>
      </procedure>
      <procedure methodName="GetMatchCnodeList" timeout="200000000" outputType="DataTable">
        <provider name="SqlProvider" procName="Usp_DC_MatchGetCnodeList" default="true"/>
      </procedure>
      <procedure methodName="GetMatchCnodeAndAttrvalsForInitLoad" timeout="200000000" outputType="DataTable">
        <provider name="SqlProvider" procName="Usp_DC_MatchSourceAttrval" default="true"/>
      </procedure>
      <procedure methodName="GetMatchingCnodeAttrvalXml" timeout="200000000" outputType="XML">
        <provider name="SqlProvider" procName="Usp_DC_MatchingGetCnodeAttrvalXml" default="true"/>
      </procedure>
      <procedure methodName="GetMatchRuleSetTypeDefaultXml" timeout="200000000" outputType="XML">
        <provider name="SqlProvider" procName="usp_DC_matchRuleSetTypeDefault_GetXml" default="true"/>
      </procedure>
      <procedure methodName="GetmatchRuleSetsXml" timeout="200000000" outputType="XML">
        <provider name="SqlProvider" procName="usp_DC_matchRuleSets_GetXml" default="true"/>
      </procedure>
      <procedure methodName="GetmatchRuleSetsDT" timeout="200000000" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_DC_matchRuleSets_GetDT" default="true"/>
      </procedure>
      <procedure methodName="GetMatchRuleSetCnodeAndAttrvalXml" timeout="200000000" outputType="XML">
        <provider name="SqlProvider" procName="Usp_DC_GetMatchRuleSetCnodeAndAttrvalXml" default="true"/>
      </procedure>
      <procedure methodName="GetServiceTypes" timeout="200000000" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_getServiceTypes" default="true"/>
      </procedure>
      <procedure methodName="GetRSPLMatchingStatus" timeout="200000000" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_RSPL_GetMatchingStatus" default="true"/>
      </procedure>
      <procedure methodName="AttributeExtractionJob">
        <provider name="SqlProvider" procName="usp_DQM_ProcessPDRProfile" default="true" />
      </procedure>
      <procedure methodName="GetMatchedCnodes" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Job_FindMatchedCnodes" default="true"/>
      </procedure>
      <procedure methodName="GetMatchingKeyWordAndSynonymsXml" timeout="200000000" outputType="XML">
        <provider name="SqlProvider" procName="usp_DC_Match_GetSynonymsXml" default="true"/>
      </procedure>
      <procedure methodName="GetMatchingKeywordListXml" timeout="200000000" outputType="XML">
        <provider name="SqlProvider" procName="usp_DC_Match_GetKeywordListXml" default="true"/>
      </procedure>
      <procedure methodName="GetTextBasedPartNumberMatchingResults"  timeout="200000000" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_DQM_PNM_RunLoad_Dynamic" default="true" />
      </procedure>
      <procedure methodName="GetEntityChildren"  outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Get_EntityChildren" default="true" />
      </procedure>
    </class>
    <class name="Attribute" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlAttribute" targetPath="SqlServer"/>
      <procedure methodName="GetByAttributeGroup" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Attribute_GetByAttributeGroup" default="true"/>
      </procedure>
      <procedure methodName="GetAttributeGroupsByType" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Attribute_GetAttributeGroupsByType" default="true"/>
      </procedure>
      <procedure methodName="GetCNodeAttributeValue" outputType="XML">
        <provider name="SqlProvider" procName="usp_CNode_AttrVal" default="true"/>
      </procedure>
      <procedure methodName="UniqueComplxAttrid" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_Attr_UniqueComplxAttrid" default="true"/>
      </procedure>

      <procedure methodName="GetAttributeXmlByAttributeId" outputType="XML">
        <provider name="SqlProvider" procName="usp_CNode_AttrVal_Get" default="true" />
      </procedure>
      <procedure methodName="GetAttributeByGroupXML" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_getAttributesbyGroup_XML" default="true"/>
      </procedure>
      <procedure methodName="RelationAttributeRollBack">
        <provider name="SqlProvider" procName="usp_Attr_Relationship_RollBack" default="true"/>
      </procedure>
      <procedure methodName="GetAttributeGroupsXML" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_getAllAttributeGroups_XML" default="true"/>
      </procedure>
      <procedure methodName="GetAttributeUsage" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Attr_getAttributeUsage_XML" default="true"/>
      </procedure>
      <procedure methodName="GetAttributeGroups" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_getAttrGroups_XML" default="true"/>
      </procedure>
      <procedure methodName="GetAttributeID" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Sec_Attr_getAttributeByName" default="true"/>
      </procedure>
      <procedure methodName="GetAttributeDisplayTypeID" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Sec_Attr_getAttributeDisplayTypeID" default="true"/>
      </procedure>
      <procedure methodName="GetAttributeDataForLookupControl" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_Attribute_GetDataForLookupControl" default="true"/>
      </procedure>
      <procedure methodName="GetAttributeValues" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_lookup_get" default="true"/>
      </procedure>
      <procedure methodName="AddAttributeGroup" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Sec_Attr_addAttributeGroup" default="true"/>
      </procedure>
      <procedure methodName="DeleteAttributeGroup">
        <provider name="SqlProvider" procName="usp_Sec_Attr_deleteAttributeGroup" default="true"/>
      </procedure>
      <procedure methodName="GetAttributeGroupChildren" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Attr_getAttributeGroupChildren_XML" default="true"/>
      </procedure>
      <procedure methodName="GetAttributes" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Attr_getAttributes" default="true"/>
      </procedure>
      <procedure methodName="UpdateAttributeGroup">
        <provider name="SqlProvider" procName="usp_Sec_Attr_updateAttributeGroup" default="true"/>
      </procedure>
      <procedure methodName="DeleteAttributes">
        <provider name="SqlProvider" procName="usp_Sec_Attr_deleteAttributes" default="true"/>
      </procedure>
      <procedure methodName="GetAttributeDataTypeMap" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Attr_getAttributeDataTypeMap" default="true"/>
      </procedure>
      <procedure methodName="GetAttributeDataTypes" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Attr_getAttributeDataTypes" default="true"/>
      </procedure>
      <procedure methodName="GetAttributeDetails" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Attr_getAttributeDetails" default="true"/>
      </procedure>
      <procedure methodName="GetAttributeDisplayTypeMap" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Attr_getAttributeDisplayTypeMap" default="true"/>
      </procedure>
      <procedure methodName="GetAttributeDisplayTypes" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Attr_getAttributeDisplayTypes" default="true"/>
      </procedure>
      <procedure methodName="CreateOrUpdateAttribute" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Sec_Attr_createOrUpdateAttribute" default="true"/>
      </procedure>
      <procedure methodName="GetNodeAttributeDetails" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Attr_getNodeAttributeDetails" default="true"/>
      </procedure>
      <procedure methodName="UpdateNodeAttributeDetails">
        <provider name="SqlProvider" procName="usp_Sec_Attr_updateNodeAttributeDetails" default="true"/>
      </procedure>
      <procedure methodName="ProcessObjectAttributes">
        <provider name="SqlProvider" procName="usp_Sec_Attr_processObjectAttributes" default="true"/>
      </procedure>
      <procedure methodName="GetSysObjectAttributesXML" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Attr_getSysObjectAttributes_XML" default="true"/>
      </procedure>
      <procedure methodName="GetCategoriesFromRuleXML" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_DC_GetCategoriesFromRule_XML" default="true"/>
      </procedure>
      <procedure methodName="GetFormattersXML" outputType="XML">
        <provider name="SqlProvider" procName="usp_getFormatters_XML" default="true"/>
      </procedure>
      <procedure methodName="UpdateTargetAttributeValue" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_DC_UpdateTargetAttributeValue" default="true"/>
      </procedure>
      <procedure methodName="GetFormatter" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Attr_getFormatter" default="true"/>
      </procedure>
      <procedure methodName="GetAttributesBasedOnLocale" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Attr_getAttributesBasedOnLocale_Xml" default="true"/>
      </procedure>
      <procedure methodName="ProcessComplexAttrMetadata" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Attr_ProcessComplexAttrMetadata" default="true"/>
      </procedure>
      <procedure methodName="ComplexMetadata_GetDT" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_Attr_ComplexMetadata_GetDT" default="true"/>
      </procedure>
      <procedure methodName="ComplexSystemAttrs_SetXML" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Attr_ComplexSystemAttrs_SetXML" default="true"/>
      </procedure>
      <procedure methodName="ComplexMetadata_SetXML" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Attr_ComplexMetadata_SetXML" default="true"/>
      </procedure>
      <procedure methodName="ComplexMetadataDelete">
        <provider name="SqlProvider" procName="usp_Attr_ComplexMetadataDelete" default="true"/>
      </procedure>
      <procedure methodName="GetAttributeChildrenByType" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_getAttributeChildrenByType_XML" default="true"/>
      </procedure>
      <procedure methodName="getAttributesXml" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_getAttributes_XML" default="true"/>
      </procedure>
      <procedure methodName="GetAttributeColumnNames" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Attr_getAttributeColumnNames" default="true"/>
      </procedure>
      <procedure methodName="ComplexMetadataRollBack">
        <provider name="SqlProvider" procName="usp_Attr_ComplexMetadata_RollBack" default="true"/>
      </procedure>
      <procedure methodName="GetComplexAttributeVersions" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Attr_getComplexAttributeVersions" default="true"/>
      </procedure>
      <procedure methodName="GetAllAttributes" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Attr_getAllAttributes" default="true"/>
      </procedure>
      <procedure methodName="GetAllAttributeMappings" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_Attribute_GetAllMappings" timeout="200000000" default="true"/>
      </procedure>
      <procedure methodName="GetAttributeBusinessRules" outputType="DataTable">
        <provider name="SqlProvider" procName="Usp_Rule_BusinessRules_Get" default="true"/>
      </procedure>
      <procedure methodName="GetBusinessExpressionRules" outputType="DataTable">
        <provider name="SqlProvider" procName="Usp_Rule_ExpressionRules_Get" default="true"/>
      </procedure>
      <procedure methodName="ProcessAttributeBusinessRules" returnValueType="int">
        <provider name="SqlProvider" procName="Usp_Rule_BusinessRules_Set" default="true"/>
      </procedure>
      <procedure methodName="ProcessBusinessExpressionRules" returnValueType="int">
        <provider name="SqlProvider" procName="Usp_Rule_ExpressionRules_Set" default="true"/>
      </procedure>
      <procedure methodName="GetAttributeConfig" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_getTableRowDetails_XML" default="true" />
      </procedure>
      <procedure methodName="GetTechSpecsByGroup" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_getImpliedAttributesByGroup_XML" default="true" />
      </procedure>
      <procedure methodName="GetAttributeXmlByAttributeId" outputType="XML">
        <provider name="SqlProvider" procName="usp_CNode_AttrVal_Get" default="true" />
      </procedure>
      <procedure methodName="GetSystemAttributes" outputType="XML">
        <provider name="SqlProvider" procName="Usp_Attr_SystemAttr_GetXML" default="true"/>
      </procedure>
    </class>
    <class name="Security" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlSecurity" targetPath="SqlServer"/>
      <procedure methodName="GetUsersByRole" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Admin_getUsersByRole_DT" default="true"/>
      </procedure>
      <procedure methodName="HasPermission">
        <provider name="SqlProvider" procName="usp_Sec_HasPermission" default="true"/>
      </procedure>
      <procedure methodName="IsSystemUser">
        <provider name="SqlProvider" procName="usp_Sec_Admin_isSystemUser" default="true"/>
      </procedure>
      <procedure methodName="GetUsers" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Admin_getUsers_XML" default="true"/>
      </procedure>
      <procedure methodName="GetUsersWithRoles" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Admin_getUsersWithRoles_XML" default="true"/>
      </procedure>
      <procedure methodName="GetRoles" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Admin_getRoles_XML" default="true"/>
      </procedure>
      <procedure methodName="GetRolesWithUsers" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Admin_getRolesWithUsers_XML" default="true"/>
      </procedure>
      <procedure methodName="ProcessUsers">
        <provider name="SqlProvider" procName="usp_Sec_Admin_processUsers" default="true"/>
      </procedure>
      <procedure methodName="ProcessRoles" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Admin_processRoles" default="true"/>
      </procedure>
      <procedure methodName="GetObjectTypeAction" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Admin_getObjectTypeAction_XML" default="true"/>
      </procedure>
      <procedure methodName="GetHierarchyAction" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Admin_getHierarchyAction_XML" default="true"/>
      </procedure>
      <procedure methodName="GetPermissions" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Admin_getPermissions_XML" default="true"/>
      </procedure>
      <procedure methodName="ProcessPermissions">
        <provider name="SqlProvider" procName="usp_Sec_Admin_processPermissions" default="true"/>
      </procedure>
      <procedure methodName="GetAllOrganizationsAndCatalogs" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Admin_getAllOrgCatalogs_XML" default="true"/>
      </procedure>
      <procedure methodName="AuthenticateUser" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Sec_Admin_authenticateUser" default="true"/>
      </procedure>
      <procedure methodName="GetMenus" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Admin_getVisibleMenusByUser_XML" default="true"/>
      </procedure>
      <procedure methodName="GetUserPreferences" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Admin_getUserPreferences_XML" default="true"/>
      </procedure>
      <procedure methodName="GetRoleMenus" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Admin_getRoleMenus_XML" default="true"/>
      </procedure>
      <procedure methodName="ProcessUserPreferences">
        <provider name="SqlProvider" procName="usp_Sec_Admin_processUserPreferences" default="true"/>
      </procedure>
      <procedure methodName="ProcessRoleMenus">
        <provider name="SqlProvider" procName="usp_Sec_Admin_processRoleMenus" default="true"/>
      </procedure>
      <procedure methodName="GetDraftID" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Sec_Admin_GetDraftID" default="true"/>
      </procedure>
      <procedure methodName="GetAppSetting">
        <provider name="SqlProvider" procName="usp_AppSetting_Get" default="true"/>
      </procedure>
      <procedure methodName="GetAppconfigNameVals" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_Sec_Admin_AppConfigNameVal" default="true"/>
      </procedure>
    </class>
    <class name="Component" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlComponent" targetPath="SqlServer"/>
      <procedure methodName="getEntityTypes" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_N_getEntityTypes" default="true"/>
      </procedure>
      <!--<procedure methodName="GetNodeTypesDT" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_N_getAllNodeTypes_DT" default="true"/>
      </procedure>-->
    </class>
    <class name="Organization" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlOrganization" targetPath="SqlServer"/>
      <procedure methodName="GetCatalogNodeTypeAttributeGroups" outputType="XML">
        <provider name="SqlProvider" procName="usp_Attr_AttrGroupByCatalog_GetXML" default="true"/>
      </procedure>
      <procedure methodName="GetOrgsWithPermissions" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Org_getOrgPermissions" default="true"/>
      </procedure>
      <procedure methodName="GetOrgsWithPermissions" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Org_getOrgPermissions_XML" default="true"/>
      </procedure>
      <procedure methodName="GetOrgsByOrgClassification" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Org_getOrgsBasedOnClassification_XML" default="true"/>
      </procedure>
      <procedure methodName="GetUserVisibleOrgs" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Org_getVisibleOrgs_XML" default="true"/>
      </procedure>
      <procedure methodName="GetUserVisibleOrgsDT" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Org_getVisibleOrgs_DT" default="true"/>
      </procedure>
      <procedure methodName="GetAllOrgTypes" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Org_getAllOrgTypes_XML" default="true"/>
      </procedure>
      <procedure methodName="GetOrgTypes" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Org_getOrgTypes_XML" default="true"/>
      </procedure>
      <procedure methodName="GetAllOrgHierarchies" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Org_getAllOrgHierarchy_XML" default="true"/>
      </procedure>
      <procedure methodName="GetWithLocales" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_Sec_Org_GetWithLocales" default="true"/>
      </procedure>
      <procedure methodName="GetOrgsWithLocales" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Org_getVisibleOrgsWithLocales_XML" default="true"/>
      </procedure>
      <procedure methodName="ProcessOrgs" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Org_processOrgs" default="true"/>
      </procedure>
      <procedure methodName="ProcessOrgLocales">
        <provider name="SqlProvider" procName="usp_Sec_Org_processOrgLocales" default="true"/>
      </procedure>
      <procedure methodName="ProcessOrgTypes">
        <provider name="SqlProvider" procName="usp_Sec_Org_process_OrgTypes" default="true"/>
      </procedure>
      <procedure methodName="GetAvailableChildrenOrgs" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Org_getAvailableChildrenOrgs" default="true"/>
      </procedure>
      <procedure methodName="AddOrgRelationship">
        <provider name="SqlProvider" procName="usp_Sec_Org_addOrgRelationship" default="true"/>
      </procedure>
      <procedure methodName="GetOrgByName" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Org_getOrgByName" default="true"/>
      </procedure>
      <procedure methodName="GetUserVisibleOrgsByOrgClassificationDT" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Org_getVisibleOrgsByOrgClassification_DT" default="true"/>
      </procedure>
      <procedure methodName="GetOrgCatalogInfo" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Get_OrgCatalogInfo" default="true"/>
      </procedure>
    </class>
    <class name="Util" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlUtil" targetPath="SqlServer"/>
      <procedure methodName="ExecSql" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_execsql" default="true"/>
      </procedure>
      <procedure methodName="sp_help" outputType="DataTable">
        <provider name="SqlProvider" procName="sp_help" default="true"/>
      </procedure>
      <procedure methodName="EstimateChanges" outputType="DataTable">
        <provider name="SqlProvider" procName="Usp_Tool_EstimateChangeImpact" default="true"/>
      </procedure>
    </class>
    <class name="Catalog" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlCatalog" targetPath="SqlServer"/>
      <procedure methodName="DQMSearch" outputType="DataTable" timeout="200000000">
        <provider name="SqlProvider" procName="usp_Search_DQM" default="true"/>
      </procedure>
      <procedure methodName="GuidedSearch" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Search_Guided" default="true"/>
      </procedure>
      <procedure methodName="GetLoadsGuidedSearchXML" outputType="XML" timeout="200000000">
        <provider name="SqlProvider" procName="usp_Search_Guided_GetLoadsXML" default="true"/>
      </procedure>
      <procedure methodName="GetRelationshipTypeHierarchy" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Catalog_RelationshipTypeHierarchy_Get" default="true"/>
      </procedure>
      <procedure methodName="ExtractCatalogByIDLocalRel" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_getCatalogByID_LocalRel_XML" default="true"/>
      </procedure>
      <procedure methodName="ExtractBulkAttributeMetadata" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_getBulkAttributeMetaData" default="true"/>
      </procedure>
      <procedure methodName="ExtractBulkAttributeMetadataRel" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_getBulkAttributeMetaDataRel" default="true"/>
      </procedure>
      <procedure methodName="ExtractAttributes" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_ExtractAttributes" default="true"/>
      </procedure>
      <procedure methodName="GetCategoryAttributeMap" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_getCategoryAttributeMap" default="true"/>
      </procedure>
      <procedure methodName="GetUserVisibleCatalogsDT" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_getVisibleCatalogs_DT" default="true"/>
      </procedure>
      <procedure methodName="GetCharacteristicTemplate" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_getCharacteristicTemplate" default="true"/>
      </procedure>
      <procedure methodName="GetCharacteristicTemplateDT" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_getCharacteristicTemplateDT" default="true"/>
      </procedure>
      <procedure methodName="GetUserVisibleCatalogs" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_getVisibleCatalogs_XML" default="true"/>
      </procedure>
      <procedure methodName="GetCatalogPermissionsByOrg" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_getCatalogPermissionsByOrg_XML" default="true"/>
      </procedure>
      <procedure methodName="GetCatalogDT" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_getCatalog_DT" default="true"/>
      </procedure>
      <procedure methodName="GetCatalogsByOrg" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_getCatalogs_XML" default="true"/>
      </procedure>
      <procedure methodName="ProcessCatalogs" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_processCatalogs" default="true"/>
      </procedure>
      <procedure methodName="GetCatalogLocaleByID" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_getCatalogLocaleByID_XML" default="true"/>
      </procedure>
      <procedure methodName="ProcessCatalogLocales">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_processCatalogLocales" default="true"/>
      </procedure>
      <procedure methodName="GetNodePermissions" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_getCNodePermissions_XML" default="true"/>
      </procedure>
      <procedure methodName="GetNodePermissionsByCNode" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_getCNodePermissionsByCNode_XML" default="true"/>
      </procedure>
      <procedure methodName="GetCoreAttrByGroup" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_getCoreAttrByGroup_XML" default="true"/>
      </procedure>
      <!--<procedure methodName="GetCoreAttrByID" outputType="XML">
				<provider name="SqlProvider" procName="usp_Sec_Catalog_getCoreAttrByID_XML" default="true"/>
			</procedure>
			<procedure methodName="GetCoreAttrByID_DT" outputType="DataSet">
				<provider name="SqlProvider" procName="usp_Sec_Catalog_getCoreAttrByID_DT" default="true"/>
			</procedure>-->
      <procedure methodName="ProcessCoreAttr" timeout="2000000000" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_ProcessCoreAttr" default="true"/>
      </procedure>
      <procedure methodName="ProcessRelAttr" timeout="2000000000" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_ProcessRelAttr" default="true"/>
      </procedure>
      <procedure methodName="ProcessTechAttr" timeout="2000000000" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_ProcessTechAttr" default="true"/>
      </procedure>
      <procedure methodName="GetTechAttr" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_getTechAttr_XML" default="true"/>
      </procedure>
      <!--<procedure methodName="GetTechAttrByID" outputType="XML">
				<provider name="SqlProvider" procName="usp_Sec_Catalog_getTechAttrByID_XML" default="true"/>
			</procedure>
			<procedure methodName="GetTechAttrByID_DT" outputType="DataSet">
				<provider name="SqlProvider" procName="usp_Sec_Catalog_getTechAttrByID_DT" default="true"/>
			</procedure>-->
      <procedure methodName="GetStatuses" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_getStatuses" default="true"/>
      </procedure>
      <procedure methodName="GetCatalogByName" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_getCatalogByName" default="true"/>
      </procedure>
      <procedure methodName="GetAllUOMsByUOMType" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_getAllUOMsByUOMType_XML" default="true"/>
      </procedure>
      <procedure methodName="SchemaValidationRulesExecution" timeout="600">
        <provider name="SqlProvider" procName="usp_ValidateSchema_RuleExecution" default="true"/>
      </procedure>
      <procedure methodName="GetCnodeAttachments" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_getCnodeAttachments_XML" default="true"/>
      </procedure>
      <procedure methodName="GetColumnPreference" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_getColumnPref_XML" default="true"/>
      </procedure>
      <procedure methodName="UpdataColumnPreference">
        <provider name="SqlProvider" procName="usp_Sec_updateColumnPref" default="true"/>
      </procedure>
      <procedure methodName="GetVisibleComponents" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_getVisibleComponents_XML" default="true"/>
      </procedure>
      <procedure methodName="GetCNode" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_getCNode_XML" default="true"/>
      </procedure>
      <procedure methodName="GetTaxonomyId" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_getTaxonomyId" default="true"/>
      </procedure>
      <procedure methodName="UpdateCategoryAttribute">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_UpdateCategoryAttribute" default="true"/>
      </procedure>
      <procedure methodName="GetAttrLookup" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_AttrLookup_Get" default="true"/>
      </procedure>
      <procedure methodName="WhereUsed" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_RelationshipManager_Relationship_WhereUsed_Get_OLD" default="true"/>
      </procedure>
      <procedure methodName="ComplianceCheckAttribute" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Relationship_ComplianceCheck_Attribute" default="true"/>
      </procedure>
      <procedure methodName="GetCatalogAttributes" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_Attr_CatalogAttrAllByUser_GetDT" default="true"/>
      </procedure>
      <procedure methodName="CopyCatalogAttributes">
        <provider name="SqlProvider" procName="usp_Attr_CatalogNodeTypeAttr_Copy" default="true"/>
      </procedure>
      <procedure methodName="GetAllCategories" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_getAllCategories" default="true"/>
      </procedure>
      <procedure methodName="GetNameValCollection" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Syndication_GetNameValCollection" default="true"/>
      </procedure>
      <procedure methodName="GetCollectionValues" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_GetCollectionValues_Xml" default="true"/>
      </procedure>
      <procedure methodName="GetCatalogNodeTypeAttributesXML" outputType="XML">
        <provider name="SqlProvider" procName="Usp_Attr_CatalogNodeTypeAttr_GetXML" default="true"/>
      </procedure>
      <procedure methodName="GetComponentDetailHeaderLabel" outputType="DataTable">
        <provider name="SqlProvider" procName="Usp_CNode_ComponentDetail_HeaderLable_Get" default="true"/>
      </procedure>
      <procedure methodName="GetSystemAttributes" outputType="XML">
        <provider name="SqlProvider" procName="Usp_Attr_ObjectAttrVal_GetXML" default="true"/>
      </procedure>
      <procedure methodName="PromoteItems">
        <provider name="SqlProvider" procName="usp_WS_Promote_ByWF" default="true"/>
      </procedure>
      <procedure methodName="DemoteItems">
        <provider name="SqlProvider" procName="usp_WS_Demote_ByWF" default="true"/>
      </procedure>
      <procedure methodName="ProcessSearchCriteria" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Search_ProcessSearchCriteria" default="true"/>
      </procedure>
      <procedure methodName="GetSearchCriterias" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Search_GetSearchCriterias" default="true"/>
      </procedure>
      <procedure methodName="QuickSearch" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Search_QuickSearch" default="true"/>
      </procedure>
      <procedure methodName="GetStagingCatalogId" summary="Get the catalog " outputType="DataTable">
        <provider name="SqlProvider" procName="usp_getStagingCatalog" default="true"/>
      </procedure>
      <procedure methodName="MarkItemComplete" summary="Update the items with status Ready For Promote statging catalog" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_markItemComplete" default="true"/>
      </procedure>
      <procedure methodName="Get_CatalogCNodeOrgInfo" summary="Find MASTER/STAGING ITEM BASED ON THE DATA PROVIDED" outputType="DataTable">
        <provider name="SqlProvider" procName="Usp_Catalog_CNode_GetInfo" default="true"/>
      </procedure>
      <procedure methodName="SetBOMMatchingRelationship" summary="Find MASTER/STAGING ITEM BASED ON THE DATA PROVIDED" outputType="XML">
        <provider name="SqlProvider" procName="Usp_BOM_DoMatching_AddRelationship" default="true"/>
      </procedure>
      <procedure methodName="GetALLCatalogCnodeDetailBySKU" summary="Return All the Detail of Given SKU and CNode" outputType="DataTable">
        <provider name="SqlProvider" procName="Usp_CatalogDetail_By_Cnode_SKU" default="true"/>
      </procedure>
      <procedure methodName="GetUserConfigMetadata" outputType="DataSet" timeout="200000000">
        <provider name="SqlProvider" procName="usp_Get_UserConfigType" default="true"/>
      </procedure>
      <procedure methodName="GetUserConfigContextData" outputType="DataSet" timeout="200000000">
        <provider name="SqlProvider" procName="usp_Get_UserConfigContextData" default="true"/>
      </procedure>
      <procedure methodName="GetApplicationConfig" outputType="DataTable" timeout="200000000">
        <provider name="SqlProvider" procName="usp_Get_ApplicationConfig_Pick" default="true"/>
      </procedure>
      <procedure methodName="GetRelationshipCardinality" outputType="DataTable" timeout="200000000">
        <provider name="SqlProvider" procName="usp_Relationship_Cardinality_Get" default="true"/>
      </procedure>
      <procedure methodName="ProcessRelationshipCardinality" returnValueType="int" timeout="200000000">
        <provider name="SqlProvider" procName="usp_Relationship_Cardinality_Set" default="true"/>
      </procedure>
      <procedure methodName="ExtractCatalogByIDLocal" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_getCatalogByID_Local_XML" default="true" />
      </procedure>
      <procedure methodName="DeleteSearchCriteria" returnValueType="int" >
        <provider name="SqlProvider" procName="usp_Search_DeleteSearchCriteria" default="true" />
      </procedure>
      <procedure methodName="GetStageTransitionButtons" outputType="DataTable" timeout="200000000">
        <provider name="SqlProvider" procName="usp_Get_StageTransitionButtons_DT" default="true" />
      </procedure>
      <procedure methodName="GetAssignmentButtons" outputType="DataTable" timeout="200000000">
        <provider name="SqlProvider" procName="usp_Get_AssignmentButtons_DT" default="true" />
      </procedure>
      <procedure methodName="GetWorkflowPanel" outputType="DataTable" timeout="200000000">
        <provider name="SqlProvider" procName="usp_Catalog_GetWorkflowPanel" default="true" />
      </procedure>
      <procedure methodName="GetSearchCategoriesByCriteria" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Category_Search" default="true" />
      </procedure>
      <procedure methodName="GetSystemAttrNavPanel" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Catalog_GetSystemAttrNavPanel" default="true" />
      </procedure>
      <procedure methodName="GetCategoryNavPanel" outputType="DataTable"  timeout="200000000">
        <provider name="SqlProvider" procName="usp_Catalog_GetCategoryNavPanel" default="true" />
      </procedure>
    </class>
    <class name="Job" namespace="Riversand.StoredProcedures" targetPath="" summary="Job API">
      <provider name="SqlProvider" className="SqlJob" targetPath="SqlServer"/>
      <procedure methodName="InsertValidationResult" summary="Adds validation results">
        <provider name="SqlProvider" procName="usp_ValidationResultInsert" default="true"/>
      </procedure>
      <procedure methodName="GetMatchingJobs" summary="Gives a result for Matching jobs" timeout="1200" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_Job_GetMatchingJobs" default="true"/>
      </procedure>
      <procedure methodName="SetApprovedMatchingCnode">
        <provider name="SqlProvider" procName="usp_DC_ApproveMatchingCnode" default="true"/>
      </procedure>
      <procedure methodName="GetServiceResult" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_Job_GetResult" default="true"/>
      </procedure>
      <procedure methodName="ProcessServiceResult" >
        <provider name="SqlProvider" procName="usp_Job_ProcessServiceResults" default="true" />
      </procedure>
      <procedure methodName="GetJobTypeEventSourceMapping"   outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Job_JobTypeEventSourceMapping_Get" default="true" />
      </procedure>
      <procedure methodName="GetServiceResult_SchemaValidation"   outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Job_GetResult_SchemaValidation" default="true" />
      </procedure>
      <procedure methodName="GetServiceResult_DescMatching"  outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Job_GetResult_DescMatching" default="true" />
      </procedure>
      <procedure methodName="GetServiceResult_AttributeExtraction"  outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Job_GetResult_AttributeExtraction" default="true" />
      </procedure>
      <procedure methodName="GetServiceResult_Normalization"   outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Job_GetResult_Normalization" default="true" />
      </procedure>
    </class>
    <class name="Language" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlLanguage" targetPath="SqlServer"/>
      <procedure methodName="GetLanguages" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Admin_Lang_getLanguages_XML" default="true"/>
      </procedure>
      <procedure methodName="ProcessLanguages">
        <provider name="SqlProvider" procName="usp_Sec_Admin_Lang_process_Languages" default="true"/>
      </procedure>
      <procedure methodName="GetRegions" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Admin_Lang_getRegions_XML" default="true"/>
      </procedure>
      <procedure methodName="ProcessRegions">
        <provider name="SqlProvider" procName="usp_Sec_Admin_Lang_process_Regions" default="true"/>
      </procedure>
      <procedure methodName="GetLocales" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Admin_Lang_getLocales_XML" default="true"/>
      </procedure>
      <procedure methodName="ProcessLocales">
        <provider name="SqlProvider" procName="usp_Sec_Admin_Lang_process_Locales" default="true"/>
      </procedure>
    </class>
    <class name="Taxonomy" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlTaxonomy" targetPath="SqlServer"/>
      <procedure methodName="ProcessCategory" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Sec_Taxonomy_ProcessCategory" default="true" timeout="20000000"/>
      </procedure>
      <procedure methodName="CopyCategoryExt" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Sec_Taxonomy_CopyCategoryExt" default="true"/>
      </procedure>
      <procedure methodName="GetTechSpecsMap" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_N_getCategoryAttributeMap" default="true"/>
      </procedure>
      <procedure methodName="DeleteCategoryAttribute">
        <provider name="SqlProvider" procName="usp_Sec_Taxonomy_DeleteCategoryAttribute" default="true"/>
      </procedure>
      <procedure methodName="DuplicateTaxonomy">
        <provider name="SqlProvider" procName="usp_Sec_Taxonomy_duplicateTaxonomy" default="true"/>
      </procedure>
      <procedure methodName="GetCategoryID" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Sec_Taxonomy_GetCategoryIDFromPath" default="true"/>
      </procedure>
      <procedure methodName="GetCategoryAttributeID" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Sec_Taxonomy_GetCategoryAttributeID" default="true"/>
      </procedure>
      <procedure methodName="GetTaxonomyMetadataByCatalogID" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Admin_GetTaxonomyMetadataByCatalogID" default="true"/>
      </procedure>
      <procedure methodName="GetVisibleTaxonomies" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Taxonomy_getVisibleTaxonomies_DT" default="true"/>
      </procedure>
      <procedure methodName="GetDependentCatalogs" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Taxonomy_GetDependentCatalogs" default="true"/>
      </procedure>
      <procedure methodName="GetTaxonomyByCatalog" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_getTaxonomyByCatalog" default="true"/>
      </procedure>
      <procedure methodName="GetCNodeAndNodeXML" outputType="XML">
        <provider name="SqlProvider" procName="usp_getNodeandCNode_XML" default="true" />
      </procedure>
    </class>
    <class name="Messaging" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlMessaging" targetPath="SqlServer"/>
      <procedure methodName="GetMessageDetails" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Messaging_GetMessageDetails" default="true"/>
      </procedure>
      <procedure methodName="GetIntegratedInbox" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Messaging_GetIntegratedInbox" default="true" />
      </procedure>
      <procedure methodName="DeleteMessages">
        <provider name="SqlProvider" procName="usp_Sec_Messaging_DeleteMessages" default="true"/>
      </procedure>
    </class>
    <class name="Rules" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlRules" targetPath="SqlServer" />
      <procedure methodName="GetBusinessRuleSetsByContext" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_BusinessRule_RuleSets_GetByContext" default="true" />
      </procedure>
      <procedure methodName="GetBusinessRuleSet" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_BusinessRule_RuleSet_Get" default="true" />
      </procedure>
      <procedure methodName="AddUpdateBusinessRuleSet">
        <provider name="SqlProvider" procName="usp_BusinessRule_RuleSet_Set" default="true" />
      </procedure>
      <procedure methodName="AddUpdateCustomBusinessRuleSet">
        <provider name="SqlProvider" procName="usp_BusinessRule_CustomRuleSet_Set" default="true" />
      </procedure>
      <procedure methodName="CheckDuplicateBusinessRuleSet" returnValueType="int" default="true">
        <provider name="SqlProvider" procName="usp_CheckRuleSetDuplicate" default="true" />
      </procedure>
      <procedure methodName="GetRulesCount" returnValueType="int" default="true">
        <provider name="SqlProvider" procName="usp_GetRulesCount" default="true" />
      </procedure>
      <procedure methodName="GetBusinessRuleFromContext"  outputType="DataTable" timeout="200000000">
        <provider name="SqlProvider" procName="usp_BusinessRule_GetRulesFromContext" default="true" />
      </procedure>
      <procedure methodName="GetCustomBusinessRulesFromContext"  outputType="DataTable">
        <provider name="SqlProvider" procName="usp_BusinessRule_GetCustomRulesFromContext" default="true" />
      </procedure>
      <procedure methodName="GetRuleSetTestResult"  outputType="DataTable" timeout="200000000">
        <provider name="SqlProvider" procName="Usp_DQM_ExtractAttribute" default="true" />
      </procedure>
      <procedure methodName="UpdateRuleSetRuleActiveFlag">
        <provider name="SqlProvider" procName="usp_RuleSetRule_activeFlag_Update" default="true" />
      </procedure>
      <procedure methodName="DeletePDRProfile">
        <provider name="SqlProvider" procName="usp_DQM_PDR_DeleteProfile" default="true" />
      </procedure>
      <procedure methodName="GetSourceAttributes" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_PDR_SourceAttributes_Get" default="true" />
      </procedure>
      <procedure methodName="GetViewContextDetail" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_BusinessRuleManager_ViewContextDetail_Get" default="true" />
      </procedure>
      <procedure methodName="GetViewContext" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_BusinessRuleManager_ViewContext_Get" default="true" />
      </procedure>
      <procedure methodName="GetRuleViewAttributes" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_BusinessRuleManager_RuleAttributes_Get" default="true" />
      </procedure>
    </class>
    <class name="Alerts" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlAlerts" targetPath="SqlServer" />
      <procedure methodName="AddEventConfiguration">
        <provider name="SqlProvider" procName="usp_Sec_Alert_AddEventConfiguration" default="true" />
      </procedure>      
    </class>
    <class name="Aggregation" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlAggregation" targetPath="SqlServer"/>
      <procedure methodName="ImportProduct" timeout="200000000">
        <provider name="SqlProvider" procName="usp_Import_Product" default="true"/>
      </procedure>
      <procedure methodName="StageData" timeout="200000000">
        <provider name="SqlProvider" procName="usp_import_stagedata_fromfile" default="true"/>
      </procedure>
      <procedure methodName="StageDataFromXML" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Import_StageData_FromDSXML" default="true" />
      </procedure>
      <procedure methodName="sp_help" outputType="DataTable">
        <provider name="SqlProvider" procName="sp_help" default="true"/>
      </procedure>
      <procedure methodName="CreateStageTableFromTable">
        <provider name="SqlProvider" procName="usp_Import_CreateStageTableBasedOnTable" default="true"/>
      </procedure>
      <procedure methodName="ImportWorkerTableCreation" timeout="6000">
        <provider name="SqlProvider" procName="usp_Import_Table_Creation_Script" default="true"/>
      </procedure>
    </class>
    <class name="ImportExport" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlImportExport" targetPath="SqlServer"/>
      <!-- new Syndication procedures -->
      <procedure methodName="GetJobsColumnDropDown" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_N_getJobService_Column" default="true"/>
      </procedure>
      <procedure methodName="CleanExportBatch">
        <provider name="SqlProvider" procName="usp_Export_CleanBatchData" default="true" />
      </procedure>
      <procedure methodName="GetProfilesData" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_N_getProfilesData" default="true"/>
      </procedure>
      <procedure methodName="GetProfile" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_getProfile_XML" default="true"/>
      </procedure>
      <procedure methodName="GetProfileByID" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_getProfileByID_XML" default="true"/>
      </procedure>
      <procedure methodName="SaveProfile" returnValueType="int">
        <provider name="SqlProvider" procName="usp_N_saveProfile" default="true"/>
      </procedure>
      <procedure methodName="GetProfileDependencies" returnValueType="int">
        <provider name="SqlProvider" procName="usp_N_getProfileDependencies" default="true"/>
      </procedure>
      <procedure methodName="GetProfileDependencies" returnValueType="int">
        <provider name="SqlProvider" procName="usp_N_getProfileDependencies" default="true" />
      </procedure>
      <procedure methodName="DeleteProfile" returnValueType="int">
        <provider name="SqlProvider" procName="usp_N_deleteProfile" default="true"/>
      </procedure>
      <procedure methodName="SaveProfileAtt" returnValueType="int">
        <provider name="SqlProvider" procName="usp_N_saveProfileAtt" default="true"/>
      </procedure>
      <procedure methodName="GetProfileAtt" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_getProfileAtt_XML" default="true"/>
      </procedure>
      <procedure methodName="GetProfilesDataAtt" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_N_getProfilesDataAtt" default="true"/>
      </procedure>
      <procedure methodName="GetAttributeExpJob" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_N_getAttribueExpJob" default="true"/>
      </procedure>
      <procedure methodName="SaveProfileTaxonomy" returnValueType="int">
        <provider name="SqlProvider" procName="usp_N_saveProfileTaxonomy" default="true"/>
      </procedure>
      <procedure methodName="GetProfileTypes" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Profile_GetTypes" default="true"/>
      </procedure>
      <procedure methodName="GetProfileGroups" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Profile_GetProfileGroups" default="true"/>
      </procedure>
      <procedure methodName="GetProfiles" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Profile_Get" default="true"/>
      </procedure>
      <procedure methodName="GetSubscribers" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Subscriber_Get" default="true"/>
      </procedure>
      <procedure methodName="SetSubscriber" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Subscriber_Set" default="true"/>
      </procedure>
      <procedure methodName="Subscriber_ConfirmDelete" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Subscriber_ConfirmDelete" default="true"/>
      </procedure>
      <procedure methodName="GetChannels" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Subscriber_ChannelType_Get" default="true"/>
      </procedure>
      <procedure methodName="GetExportProfileSubscribers" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Profile_Subscribers_Get" default="true"/>
      </procedure>
      <procedure methodName="SetExportProfileSubscribers">
        <provider name="SqlProvider" procName="usp_Profile_Subscribers_Set" default="true"/>
      </procedure>
      <procedure methodName="BulkProcessCNodes" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_Sec_Bulk_ProcessCNodes" default="true"/>
      </procedure>
      <procedure methodName="BulkProcessCommonAttributes" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_Sec_Bulk_ProcessCommonAttr" default="true"/>
      </procedure>
      <procedure methodName="BulkProcessTechAttributes" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_Sec_Bulk_ProcessTechAttr" default="true"/>
      </procedure>
      <procedure methodName="BulkProcessRelationships" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_Sec_Bulk_ProcessRelationships" default="true"/>
      </procedure>
      <procedure methodName="FindImportJobLog" outputType="DataTable" timeout="20000">
        <provider name="SqlProvider" procName="usp_N_FindImportJobLog" default="true"/>
      </procedure>
      <procedure methodName="ImportJobErrorLogExists" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_N_FindImportJobErrorLogExist" default="true"/>
      </procedure>
      <procedure methodName="ExportLookupTables" outputType="DataSet">
        <provider name="SqlProvider" procName="Usp_Sec_Export_LookupTables" default="true"/>
      </procedure>
      <procedure methodName="GetCatalogCharacteristicTemplate" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Export_Catalog_CharacteristicTemplate" default="true"/>
      </procedure>
      <procedure methodName="GetCatalogCharacteristicTemplateXml" outputType="XML">
        <provider name="SqlProvider" procName="usp_Sec_Export_Catalog_CharacteristicTemplate_Xml" default="true"/>
      </procedure>
      <procedure methodName="ObjectExport" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_sec_object_export" default="true"/>
      </procedure>
      <procedure methodName="FindAggregationJobs" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Import_findJobs" default="true"/>
      </procedure>
      <procedure methodName="GetExcelExportColumnNames" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Export_GetExcelExportColumns" default="true"/>
      </procedure>
      <procedure methodName="ImportGetProfileSubscriber" outputType="XML">
        <provider name="SqlProvider" procName="usp_Import_GetProfileSubscriber" default="true"/>
      </procedure>
      <procedure methodName="ImportInsertOrUpdateProfileSubscriber">
        <provider name="SqlProvider" procName="usp_Import_InsertOrUpdateProfileSubscriber" default="true"/>
      </procedure>
      <procedure methodName="ImportProductGetJobStatus" returnValueType="int">
        <provider name="SqlProvider" procName="Usp_Import_Product_GetJobStatus" default="true"/>
      </procedure>
    </class>
    <class name="ErrorHandling" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlErrorHandling" targetPath="SqlServer"/>
      <procedure methodName="SetErrorLog">
        <provider name="SqlProvider" procName="usp_ErrorHandling_ErrorLog_Set" default="true"/>
      </procedure>
    </class>
    <class name="Common" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlCommon" targetPath="SqlServer"/>
      <procedure methodName="GetAllUOMs" outputType="XML">
        <provider name="SqlProvider" procName="usp_KnowledgeManager_UOM_Get" default="true"/>
      </procedure>
      <procedure methodName="GetAllLocaleByOrgXml" outputType="XML">
        <provider name="SqlProvider" procName="usp_KnowledgeManager_Locale_AllLocales_Get" default="true"/>
      </procedure>
      <procedure methodName="PutFile" timeout="200000000" returnValueType="int">
        <provider name="SqlProvider" procName="usp_ApplicationServiceManager_File_Process" default="true"/>
      </procedure>
      <procedure methodName="GetFile" timeout="200000000" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_N_GetFile" default="true"/>
      </procedure>
      <procedure methodName="GetFileDetails" timeout="200000000" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_N_GetFileDetails" default="true"/>
      </procedure>
      <procedure methodName="ReleaseFileReference" returnValueType="int">
        <provider name="SqlProvider" procName="usp_ApplicationServiceManager_File_ReleaseFileReference" default="true"/>
      </procedure>
      <procedure methodName="ObjectGet" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Object_Get" default="true"/>
      </procedure>
      <procedure methodName="GetObject" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_Sec_Object_Get" default="true"/>
      </procedure>
      <procedure methodName="LookupRuleDataSearch" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_LookupRuleData_Search" default="true"/>
      </procedure>
      <procedure methodName="GetAppCofigAttributeInfo" outputType="XML">
        <provider name="SqlProvider" procName="usp_get_AppCofigAttributeInfo_Xml" default="true"/>
      </procedure>
      <procedure methodName="IsLookupExist" returnValueType="int">
        <provider name="SqlProvider" procName="usp_KnowledgeManager_Lookup_Exists" default="true"/>
      </procedure>
      <procedure methodName="LookupSearch" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Lookup_Search" default="true"/>
      </procedure>
      <procedure methodName="UpdateAppconfig" returnValueType="Int">
        <provider name="SqlProvider" procName="usp_AdminManager_AppConfig_Process" default="true"/>
      </procedure>
      <procedure methodName="LookupColumnRename">
        <provider name="SqlProvider" procName="usp_KnowledgeManager_Lookup_RenameColumn" default="true"/>
      </procedure>
      <procedure methodName="GetUserConfig" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_UserConfig_Get" default="true"/>
      </procedure>
      <procedure methodName="UpdateUserConfig" returnValueType="Int">
        <provider name="SqlProvider" procName="usp_AdminManager_UserConfig_Process" default="true"/>
      </procedure>
      <procedure methodName="DeleteUserConfig">
        <provider name="SqlProvider" procName="usp_UserConfig_DeleteUserEntry" default="true"/>
      </procedure>
      <procedure methodName="ObjectDependency" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Object_ChkDependency" default="true"/>
      </procedure>
      <procedure methodName="GetItemMetaDataActions" outputType="DataTable" default="true">
        <provider name="SqlProvider" procName="usp_Export_GetItemMetaDataActions" default="true"/>
      </procedure>
      <procedure methodName="AddInboxMessage" returnValueType="int">
        <provider name="SqlProvider" procName="usp_N_addInboxMessage" default="true"/>
      </procedure>
      <procedure methodName="UpdateInboxMessage" returnValueType="int">
        <provider name="SqlProvider" procName="usp_N_updateInboxMessage" default="true"/>
      </procedure>
      <procedure methodName="AddStatus" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Sec_Admin_AddStatus" default="true"/>
      </procedure>
      <procedure methodName="UpdateStatus">
        <provider name="SqlProvider" procName="usp_Sec_Admin_UpdateStatus" default="true"/>
      </procedure>
      <procedure methodName="DeleteStatus" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Sec_Admin_DeleteStatus" default="true"/>
      </procedure>
      <procedure methodName="GetStatuses" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Admin_GetStatuses" default="true"/>
      </procedure>
      <procedure methodName="GetStatusesByType" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Sec_Admin_GetStatusesByType" default="true"/>
      </procedure>
      <procedure methodName="ObjectExists" returnValueType="Int">
        <provider name="SqlProvider" procName="usp_Object_Exists" default="true" />
      </procedure>
    </class>
    <class name="Profile" namespace="Riversand.StoredProcedures">
      <provider name="SqlProvider" className="SqlProfile" targetPath="SqlServer"/>
      <procedure methodName="CheckProfileDuplicate" returnValueType="int" default="true">
        <provider name="SqlProvider" procName="usp_N_CheckProfileDuplicate" default="true"/>
      </procedure>
      <procedure methodName="GetProfilePermissions" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Profile_GetProfilePermissions" default="true"/>
      </procedure>
      <procedure methodName="GetProfileGroupPermissions" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Profile_GetProfileGroupPermissions" default="true"/>
      </procedure>
      <procedure methodName="GetExportProfiles" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Export_Profiles_Get" default="true"/>
      </procedure>
    </class>
    <class name="Administration" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlAdministration" targetPath="SqlServer"/>
      <procedure methodName="getListTypes" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_N_getAllListTypes" default="true"/>
      </procedure>
      <procedure methodName="updateListType" returnValueType="int">
        <provider name="SqlProvider" procName="usp_N_updateListType" default="true"/>
      </procedure>
      <procedure methodName="getAllBreakerSets" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_N_getAllBreakerSets" default="true"/>
      </procedure>
      <procedure methodName="getAllLists" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_N_getAllLists" default="true"/>
      </procedure>
      <procedure methodName="updateList" returnValueType="int">
        <provider name="SqlProvider" procName="usp_N_updateList" default="true"/>
      </procedure>
      <procedure methodName="processNodeTypeRelType" returnValueType="int">
        <provider name="SqlProvider" procName="usp_N_processNodeTypeRelType" default="true"/>
      </procedure>
      <procedure methodName="getCatalogNodeTypeAttr" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_Attr_CatalogNodeTypeAttr_GetDT" default="true"/>
      </procedure>
      <procedure methodName="setCatalogNodeTypeAttr" returnValueType="int">
        <provider name="SqlProvider" procName="Usp_Attr_CatalogNodeTypeAttr_SetXML" default="true"/>
      </procedure>
      <procedure methodName="getCatalogRelTypeAttr" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_Attr_CatalogRelTypeAttr_GetDT" default="true"/>
      </procedure>
      <procedure methodName="setCatalogRelTypeAttr" returnValueType="int">
        <provider name="SqlProvider" procName="Usp_Attr_CatalogRelTypeAttr_SetXML" default="true"/>
      </procedure>
      <procedure methodName="GetRelTypesXML" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_getAllRelTypes_XML" default="true"/>
      </procedure>
      <procedure methodName="UpdateRelationshipType" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Admin_RelationshipType_Set" default="true"/>
      </procedure>
      <procedure methodName="GetAllRelationshipType" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_N_getAllRelationshipType_DT" default="true"/>
      </procedure>
      <procedure methodName="GetInhPathExceptionTypes" outputType="XML">
        <provider name="SqlProvider" procName="usp_Inh_Path_GetExceptionTypes" default="true"/>
      </procedure>
      <procedure methodName="GetInhPathExceptions" outputType="XML">
        <provider name="SqlProvider" procName="usp_Inh_Path_GetException" default="true"/>
      </procedure>
      <procedure methodName="SetInhPathExceptions" outputType="XML">
        <provider name="SqlProvider" procName="usp_InhPath_AttrVal_SetException" default="true"/>
      </procedure>
      <procedure methodName="GetCatalogTechAttributesDT" outputType="DataTable">
        <provider name="SqlProvider" procName="Usp_Attr_CatalogTechAttrAll_GetDT" default="true"/>
      </procedure>
      <procedure methodName="getNodeTypeByRelTypeCatalog" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_Relationship_NodeTypeByRelTypeCatalog_Get" default="true" />
      </procedure>
    </class>
    <class name="Denorm" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlDenorm" targetPath="SqlServer"/>
      <procedure methodName="GetCurrentJobStatus" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_DN_GetCurrentJobStatus" default="true"/>
      </procedure>
      <procedure methodName="GetJobType" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_DN_GetJobType" default="true"/>
      </procedure>
      <procedure methodName="GetJobList" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_DN_GetJobs" default="true"/>
      </procedure>
      <procedure methodName="GetJobStepDetails" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_DN_GetJobSteps" default="true"/>
      </procedure>
      <procedure methodName="GetJobErrorDetails" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_DN_GetJobErrors" default="true"/>
      </procedure>
      <procedure methodName="ReleaseDenormLock">
        <provider name="SqlProvider" procName="usp_DN_ReleaseDenormLock" default="true"/>
      </procedure>
    </class>
    <class name="BulkOperation" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlBulkOperation" targetPath="SqlServer"/>
      <procedure methodName="ExtractBulkOperationAttributeMetaData" outputType="XML" timeout="200000000">
        <provider name="SqlProvider" procName="usp_N_getBulkOperationAttributeMetaData" default="true"/>
      </procedure>
      <procedure methodName="PerformBulkOperation" outputType="XML" timeout="200000000">
        <provider name="SqlProvider" procName="usp_Sec_Catalog_ProcessBulkOperation" default="true"/>
      </procedure>
    </class>
    <class name="Lookup" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlLookup" targetPath="SqlServer"/>
      <procedure methodName="updateBreakerSet" returnValueType="int">
        <provider name="SqlProvider" procName="usp_N_updateBreakerSet" default="true"/>
      </procedure>
      <procedure methodName="getBreakers" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_N_getBreakers" default="true"/>
      </procedure>
      <procedure methodName="GetTableTypes" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Lookup_GetTableTypes" default="true"/>
      </procedure>
      <procedure methodName="exportLists" outputType="DataTable">
        <provider name="SqlProvider" procName="Usp_Sec_Export_Lists" default="true"/>
      </procedure>
      <procedure methodName="GetTableTypeTemplate" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Lookup_GetTableTypeTemplate" default="true"/>
      </procedure>
      <procedure methodName="GetTableNames" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Lookup_GetTableNames" default="true"/>
      </procedure>
      <procedure methodName="GetTableStructure" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Lookup_GetTableStructure" default="true"/>
      </procedure>
      <procedure methodName="GetRefTableData" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Lookup_GetRefTableData" default="true"/>
      </procedure>
      <procedure methodName="ProcessTableMetaData" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Lookup_Process_TableMetaData" default="true"/>
      </procedure>
      <procedure methodName="PopulateRSTObjects" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Lookup_PopulateRSTObjects" default="true"/>
      </procedure>
      <procedure methodName="DeleteRSTObject" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Lookup_DeleteRSTObject" default="true"/>
      </procedure>
      <procedure methodName="ProcessUnitWords" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Lookup_Process_UnitWords" default="true"/>
      </procedure>
      <procedure methodName="GetUnitWords" outputType="XML">
        <provider name="SqlProvider" procName="usp_Lookup_GetUnitWords" default="true"/>
      </procedure>
      <procedure methodName="ProcessWordElements" outputType="XML">
        <provider name="SqlProvider" procName="usp_Lookup_Process_WordElements" default="true"/>
      </procedure>
      <procedure methodName="GetWordElements" outputType="XML">
        <provider name="SqlProvider" procName="usp_Lookup_GetWordElements" default="true"/>
      </procedure>
      <procedure methodName="GetBreakersByBreakerSet" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Lookup_GetBreakersByBreakerSet" default="true"/>
      </procedure>
      <procedure methodName="GetBreakerSetByList" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Lookup_GetBreakerSetByList" default="true"/>
      </procedure>
      <procedure methodName="GetWordListsByListType" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Lookup_GetWordListsByListType" default="true"/>
      </procedure>
      <procedure methodName="GetListDetails" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Lookup_GetListDetails" default="true"/>
      </procedure>
      <procedure methodName="GetBreakersByList" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Lookup_GetBreakersByList" default="true"/>
      </procedure>
      <procedure methodName="DeleteNormalizationRules" returnValueType="int">
        <provider name="SqlProvider" procName="usp_RuleSet_Norm_DeleteRuleSets" default="true"/>
      </procedure>
      <procedure methodName="UpdateNormalizationRule" returnValueType="int">
        <provider name="SqlProvider" procName="usp_RuleSet_Norm_ProcessRuleSet" default="true"/>
      </procedure>
      <procedure methodName="PerformDQMNormalization" returnValueType="int">
        <provider name="SqlProvider" procName="usp_DQM_Normalize" default="true"/>
      </procedure>
      <procedure methodName="GetTranslationMemory" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Lookup_getTranslationMemory" default="true"/>
      </procedure>
      <procedure methodName="ProcessTranslationMemory" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Lookup_ProcessTranslationMemory" default="true"/>
      </procedure>
      <procedure methodName="GetNormalizationRules" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_RuleSet_Norm_GetRuleSets" default="true" />
      </procedure>
      <procedure methodName="GetNormalizationRuleDetails" outputType="XML">
        <provider name="SqlProvider" procName="usp_RuleSet_Norm_GetRuleSetDetails" default="true" />
      </procedure>
      <procedure methodName="GetBusinessRules" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_RuleSet_BusinessRules_GetRuleSets" default="true" />
      </procedure>
      <procedure methodName="GetBusinessRuleDetails" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_BusinessRule_GetRuleSetDetails" default="true" />
      </procedure>
      <procedure methodName="GetNormalizationJobResults" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_RuleSet_Norm_GetJobResults" default="true" />
      </procedure>
    </class>
    <class name="Events" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlEvents" targetPath="SqlServer"/>
      <procedure methodName="GetApplicationConfigXML" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Application_Config_Get" default="true"/>
      </procedure>
      <procedure methodName="GetChildApplicationConfigsXML" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Application_ChildConfig_Get" default="true"/>
      </procedure>
      <procedure methodName="GetEventSources" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Event_Source_Get" default="true"/>
      </procedure>
      <procedure methodName="GetEventSubscribers" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Event_Subscriber_Get" default="true"/>
      </procedure>
      <procedure methodName="GetApplicationConfigTypes" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Application_ConfigType_Get" default="true"/>
      </procedure>
      <procedure methodName="UpdateApplicationConfigXML" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Application_Config_Set" default="true"/>
      </procedure>
      <procedure methodName="GetMatchinRuleSets" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_getMatchingRuleSets" default="true"/>
      </procedure>
      <procedure methodName="GetExternalAttrs" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Lookup_ExternalAttrs_Get" default="true" />
      </procedure>
      <procedure methodName="GetTranslationMemory" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Lookup_getTranslationMemory" default="true" />
      </procedure>
    </class>
    <class name="Scripts" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlScripts" targetPath="SqlServer" />
      <procedure methodName="GetUserScriptNames" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_getUserScriptNames_XML" default="true" />
      </procedure>
      <procedure methodName="GetUserScripts" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_getUserScript_XML" default="true" />
      </procedure>
    </class>
    <class name="JobBase" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlJobBase" targetPath="SqlServer" />
      <!--<provider name="OracleProvider" className="OracleJobDB" targetPath="" />-->
      <procedure methodName="GetJobsDT" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_N_getJobServiceItems" default="true"/>
        <!--<provider name="OracleProvider" procName="pkg_Job.sp_GetByType" />-->
      </procedure>
      <procedure methodName="GetJobsXml" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_getJobService_XML" default="true"/>
        <!--<provider name="OracleProvider" procName="pkg_Job.sp_GetXml" outputType="XMLExplicit" />-->
      </procedure>
      <procedure methodName="GetJobItemXml" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_getJobServiceItem_XML" default="true"/>
        <!--<provider name="OracleProvider" procName="pkg_Job.sp_GetItemXml" outputType="XMLExplicit" />-->
      </procedure>
      <procedure methodName="UpdateJobInformation" returnValueType="int">
        <provider name="SqlProvider" procName="usp_N_updateJobInformation" default="true"/>
        <!--<provider name="OracleProvider" procName="pkg_Job.fn_UpdateInformation" />-->
      </procedure>
      <procedure methodName="UpdateJobInformation">
        <provider name="SqlProvider" procName="usp_N_updateJobInformationDetails" default="true"/>
        <!--<provider name="OracleProvider" procName="pkg_Job.fn_UpdateInformation" />-->
      </procedure>
      <procedure methodName="UpdateJobData">
        <provider name="SqlProvider" procName="usp_Job_UpdateJobData" default="true"/>
        <!--<provider name="OracleProvider" procName="pkg_Job.fn_UpdateJobData />-->
      </procedure>
      <procedure methodName="UpdateJobData">
        <provider name="SqlProvider" procName="usp_Job_UpdateJobDataXml" default="true"/>
        <!--<provider name="OracleProvider" procName="pkg_Job.fn_UpdateJobData />-->
      </procedure>
      <procedure methodName="GetJobData" outputType="XML">
        <provider name="SqlProvider" procName="usp_Job_GetJobData" default="true"/>
        <!--<provider name="OracleProvider" procName="pkg_Job.fn_UpdateJobData />-->
      </procedure>
      <procedure methodName="ImportProductUpdateJobInfo">
        <provider name="SqlProvider" procName="usp_Import_Product_UpdateJobInfo" default="true"/>
        <!--<provider name="OracleProvider" procName="pkg_Job.fn_UpdateJobData />-->
      </procedure>
      <procedure methodName="UpdateJobStatus" returnValueType="int">
        <provider name="SqlProvider" procName="usp_N_updateJobStatus" default="true"/>
        <!--<provider name="OracleProvider" procName="pkg_Job.fn_UpdateStatus" />-->
      </procedure>
      <procedure methodName="UpdateJobUserAction" returnValueType="int">
        <provider name="SqlProvider" procName="usp_N_updateJobUserAction" default="true"/>
        <!--<provider name="OracleProvider" procName="pkg_Job.fn_UpdateUserAction" />-->
      </procedure>
      <procedure methodName="ResetJobUserAction" returnValueType="int">
        <provider name="SqlProvider" procName="usp_N_resetJobUserAction" default="true"/>
        <!--<provider name="OracleProvider" procName="pkg_Job.fn_ResetUserAction" />-->
      </procedure>
      <procedure methodName="ResetJobStep">
        <provider name="SqlProvider" procName="usp_Import_Product_ResetJobStepInfo" default="true"/>
        <!--<provider name="OracleProvider" procName="pkg_Job.fn_ResetUserAction" />-->
      </procedure>
      <procedure methodName="ImportProductCleanup">
        <provider name="SqlProvider" procName="usp_Import_Product_Cleanup" default="true"/>
        <!--<provider name="OracleProvider" procName="pkg_Job.fn_ResetUserAction" />-->
      </procedure>
      <procedure methodName="AddJob" returnValueType="int">
        <provider name="SqlProvider" procName="usp_N_addJobService" default="true"/>
        <!--<provider name="OracleProvider" procName="pkg_Job.fn_Add" />-->
      </procedure>
      <procedure methodName="DeleteJob" returnValueType="int">
        <provider name="SqlProvider" procName="usp_N_deleteJobServiceItem" default="true"/>
        <!--<provider name="OracleProvider" procName="pkg_Job.fn_Delete" />-->
      </procedure>
      <procedure methodName="GetProfilesData" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_N_getProfilesData" default="true" />
      </procedure>
      <procedure methodName="GetProfile" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_getProfile_XML" default="true" />
      </procedure>
      <procedure methodName="GetProfileByID" outputType="XML">
        <provider name="SqlProvider" procName="usp_N_getProfileByID_XML" default="true" />
      </procedure>
      <procedure methodName="GetSubscribersAndProfiles" outputType="XML">
        <provider name="SqlProvider" procName="usp_Import_GetSubscribersAndProfiles" default="true" />
      </procedure>
      <procedure methodName="FindImportJobLog" outputType="DataTable" timeout="20000">
        <provider name="SqlProvider" procName="usp_N_FindImportJobLog" default="true" />
      </procedure>
      <procedure methodName="ImportJobErrorLogExists" outputType="DataSet">
        <provider name="SqlProvider" procName="usp_N_FindImportJobErrorLogExist" default="true" />
      </procedure>
      <procedure methodName="InsertOrUpdateEvent" timeout="200000000" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Event_InsertOrUpdate" default="true"/>
      </procedure>
    </class>
    <class name="JobScheduler" namespace="Riversand.StoredProcedures" targetPath="" summary="Job Scheduler API">
      <provider name="SqlProvider" className="SqlJobScheduler" targetPath="SqlServer"/>
      <procedure methodName="AddJobSchedule" summary="Adds a new job schedule">
        <provider name="SqlProvider" procName="usp_JobSchedule_Add" default="true"/>
      </procedure>
      <procedure methodName="DeleteJobSchedule" summary="Deletes a job schedule">
        <provider name="SqlProvider" procName="usp_JobSchedule_Delete" default="true"/>
      </procedure>
      <procedure methodName="GetJobSchedule" outputType="DataSet" summary="Gets one or all job schedules">
        <provider name="SqlProvider" procName="usp_JobSchedule_Get" default="true"/>
      </procedure>
      <procedure methodName="UpdateJobSchedule" summary="Updates a job schedule">
        <provider name="SqlProvider" procName="usp_JobSchedule_Update" default="true"/>
      </procedure>
      <procedure methodName="UpdateJobScheduleStatus" summary="Updates the status of a job schedule">
        <provider name="SqlProvider" procName="usp_JobSchedule_UpdateStatus" default="true"/>
      </procedure>
    </class>
    <class name="Documents" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlDocuments" targetPath="SqlServer" />
      <procedure methodName="GetDocumentAssociations" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Media_GetDocumentAssociations" default="true" />
      </procedure>
      <procedure methodName="ProcessDocument" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Media_Document_Process" default="true" />
      </procedure>
      <procedure methodName="GetDocumentCNodes" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Media_Document_GetCNodes" default="true" />
      </procedure>
      <procedure methodName="GetDocumentEnabledOrganizations" outputType="DataTable">
        <provider name="SqlProvider" procName="usp_Media_Document_GetOrganizations" default="true" />
      </procedure>
    </class>
    <class name="EntityImport" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlEntityImport" targetPath="SqlServer" />
      <procedure methodName="StageData" timeout="200000000" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Import_Entity_StageData" default="true" />
      </procedure>
      <procedure methodName="Process" timeout="200000000" returnValueType="int">
        <provider name="SqlProvider" procName="usp_Import_Entity" default="true"/>
      </procedure>
    </class>
    <class name="CustomSecurity" namespace="Riversand.StoredProcedures" targetPath="">
      <provider name="SqlProvider" className="SqlCustomSecurity" targetPath="SqlServer" />
      <procedure methodName="CalculateCustomSecurity_GetDT" returnValueType="DataTable">
        <provider name="SqlProvider" procName="usp_CalculateCustomSecurity_GetDT" default="true" />
      </procedure>
      <procedure methodName="CalculateCustomSecurity_GetXML" returnValueType="XML">
        <provider name="SqlProvider" procName="usp_CalculateCustomSecurity_GetXML" default="true" />
      </procedure>
    </class>
  </shellClasses>
</shellBuilder>
